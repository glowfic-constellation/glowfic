!!!
%html
  %head
    %title= (Rails.env.development? ? 'DEV: ' : '') + (@page_title ? @page_title + " | Glowfic Constellation" : "Glowfic Constellation")

    / Meta
    %meta{charset: 'utf-8'}
    %meta{name: 'viewport', content: 'width=device-width'}
    = csrf_meta_tags

    / SEO canonical
    - if @meta_canonical.present?
      %link{rel: 'canonical', href: @meta_canonical}

    / OpenGraph embed data
    - if @meta_og.present?
      :ruby
        image_hash = @meta_og.fetch(:image, {
          src: asset_url('favicons/og-image-48x48.png'),
          type: 'image/png',
          alt: 'Three stars, colored green, purple and blue',
          width: '48',
          height: '48',
        }) # rubocop:disable Style/TrailingCommaInArguments
      %meta{property: 'og:image', content: image_hash[:src]}
      - [:type, :alt, :width, :height].each do |prop|
        - if image_hash.key?(prop)
          %meta{property: "og:image:#{prop}", content: image_hash[prop]}

      %meta{property: 'og:type', content: 'website'}
      %meta{property: 'og:site_name', content: 'Glowfic Constellation'}

      %meta{property: 'og:url', content: @meta_og[:url]}
      %meta{property: 'og:title', content: @meta_og[:title]}
      %meta{property: 'og:description', content: @meta_og[:description]}

    / Stylesheets
    = stylesheet_link_tag 'application'
    - if current_user.try(:layout).present?
      = stylesheet_link_tag "layouts/#{current_user.layout}"

    / Favicons
    %meta{name: "apple-mobile-web-app-title", content: "Glowfic Constellation"}
    %meta{name: "application-name", content: "Glowfic Constellation"}
    %meta{name: "msapplication-config", content: asset_path('favicons/browserconfig.xml')}
    %meta{name: "theme-color", content: "#FFFFFF"}
    = favicon_link_tag 'favicons/favicon.ico'
    = favicon_link_tag 'favicons/favicon-32x32.png', type: 'image/png', rel: 'icon', sizes: '32x32'
    = favicon_link_tag 'favicons/favicon-16x16.png', type: 'image/png', rel: 'icon', sizes: '16x16'
    = favicon_link_tag 'favicons/apple-touch-icon.png', type: 'image/png', rel: 'apple-touch-icon', sizes: '180x180'
    %link{rel: 'mask-icon', href: asset_path('favicons/safari-pinned-tab.svg'), color: '#2B5797'}
    %link{rel: 'manifest', href: asset_path('favicons/manifest.json')}

    = include_gon
  %body
    #holder
      #header
        - if logged_in?
          #user-info
            = link_to current_user do
              - if current_user.avatar
                = image_tag current_user.avatar.url, class: 'icon', id: 'user-icon', title: current_user.avatar.keyword, alt: current_user.avatar.keyword
              - else
                .no-img
              #user-username= current_user.username
        #header-right
          #logo
            - unless logged_in?
              #header-links
                = link_to "Login", login_path
                %span &nbsp;|&nbsp;
                = link_to "Sign up", new_user_path
            = link_to root_path do
              = image_tag "layouts/logo.png", alt: 'Glowfic Constellation home'
          #nav-top
            - if logged_in?
              %ul
                %li= link_to 'Account', edit_user_path(current_user)
                %li
                  = link_to messages_path do
                    Inbox
                    - unread_count = Message.unread_count_for(current_user)
                    - if unread_count > 0
                      %span.badge.badge-primary= unread_count
                %li= link_to "Characters", user_characters_path(current_user)
                %li= link_to "Galleries", user_galleries_path(current_user)
                %li= link_to 'Favorites', favorites_path
                %li= link_to "Post", new_post_path
              = link_to logout_path, method: :delete, id: :"header-logout" do
                = button_tag "Log out", class: 'button'
            - elsif !current_page?(login_path)
              = form_tag login_path, method: :post, id: 'header-form' do
                #header-forms
                  = text_field_tag :username, params[:username], placeholder: "Username"
                  = password_field_tag :password, params[:password], placeholder: "Password"
                #header-remember
                  = check_box_tag :remember_me
                  = label_tag :remember_me, "Remember Me"
                #header-buttons
                  = submit_tag "Log in", class: 'button'
                #header-buttons-links
                  = link_to "Sign up", new_user_path
                  &nbsp;|&nbsp;
                  = link_to "Forgot Password?", new_password_reset_path
        #nav-bottom
          %ul
            %li= link_to 'Continuities', continuities_path
            %li= link_to 'Recently Updated', posts_path
            %li= link_to 'Search', search_posts_path
            %li= link_to 'Users', users_path
            %li= link_to 'Facecasts', facecasts_characters_path
            - if logged_in?
              %li= link_to 'Unread', unread_posts_path
              %li= link_to 'Replies Owed', owed_posts_path
            %li= link_to 'Tags', tags_path
            - day = DailyReport.unread_date_for(current_user)
            - daybadge = DailyReport.badge_for(day)
            %li
              = link_to 'Daily Report', report_path(id: :daily, day: day&.to_s)
              - if daybadge > 0
                %span.badge.badge-primary= daybadge
      - if content_for?(:breadcrumbs)
        .flash.breadcrumbs= content_for :breadcrumbs
      - flash.each do |key, val|
        .flash{class: key}
          = link_to '#' do
            = image_tag 'icons/cross.png', class: 'float-right flash-dismiss', alt: 'Dismiss'
          - if val.is_a?(Hash)
            - if val.key?(:image)
              = image_tag val[:image], class: 'vmid'.freeze
            = val[:message]
            - if val.key?(:array)
              %ul
                - val[:array].each do |message|
                  %li= message
          - else
            = val
      - if content_for?(:flashes)
        = content_for :flashes
      - unless logged_in? || tos_skippable?
        #tos.hidden= render 'about/accept_tos'
      #content
        = yield
        .clear &nbsp;
      #footer
        %div
          = link_to 'Terms of Service', tos_path
          &bull;
          = link_to 'Privacy Policy', privacy_path
          &bull;
          = link_to 'DMCA', dmca_path
          &bull;
          = link_to 'Contact Us', contact_path
          &bull;
          = link_to 'Contribute', contribute_path
          &bull;
          - news_count = News.num_unread_for(current_user)
          = link_to news_index_path(page: (news_count > 1 ? news_count : nil)) do
            News
            - if news_count > 0
              %span.badge.badge-primary= news_count

    = javascript_include_tag 'application'.freeze
    - (@javascripts || []).each do |javascript|
      = javascript_include_tag javascript
