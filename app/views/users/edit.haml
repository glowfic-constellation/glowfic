= form_for current_user do |f|
  .form-table#user-editor
    .editor-title Settings
    .subber Account
    %div
      .sub= f.label :username
      %div{class: cycle('even', 'odd')}
        - disabled = current_user.salt_uuid.nil? && current_user.encrypted_password.nil?
        = f.text_field :username, placeholder: "Username", disabled: disabled
        - if disabled
          %br
          %span.details Please reset your password first to allow changing your username.
    %div
      .sub Email & password
      %div{class: cycle('even', 'odd')}
        = current_user.email
        - if current_user.respond_to?(:pending_reconfirmation?) && current_user.pending_reconfirmation?
          %br
          %span.details Currently waiting for email confirmation for: #{current_user.unconfirmed_email}
        %br
        = link_to edit_user_registration_path do
          %button{type: 'button'} Change Email or Password
      -# TODO: Disable my account #{button_to "Cancel my account", registration_path(resource_name), data: { confirm: "Are you sure?", turbo_confirm: "Are you sure?" }, method: :delete}
    %div
      .sub Author profile
      %div{class: cycle('even', 'odd')}
        = link_to profile_edit_user_path(current_user) do
          %button{type: 'button'} Edit Profile
    %div
      .sub Bookmarks
      .checkbox-field{class: cycle('even', 'odd')}
        = f.check_box :public_bookmarks
        = f.label :public_bookmarks, "Make all bookmarks public"
    - unless current_user.avatar.present?
      %div
        .sub Avatar
        .checkbox-field{class: cycle('even', 'odd')}
          .details Please set your avatar directly from the desired icon's page.
    .subber Site
    %div
      .sub Notifications
      .checkbox-fields{class: cycle('even', 'odd')}
        = f.check_box :email_notifications
        = f.label :email_notifications, "Email about new tags"
        = f.check_box :favorite_notifications
        = f.label :favorite_notifications, 'Notify when a favorited author makes a new post'
    %div
      .sub= f.label :timezone, 'Time zone'
      %div{class: cycle('even', 'odd')}= f.select(:timezone, timezone_options(current_user.timezone))
    %div
      .sub= f.label :time_display
      %div{class: cycle('even', 'odd')}= f.select :time_display, time_display_options(current_user.time_display)
    %div
      .sub= f.label :layout
      %div{class: cycle('even', 'odd')}= f.select :layout, layout_options(current_user.layout)
    %div
      .sub Default view
      %div{class: cycle('even', 'odd')}
        = f.select(:default_view, options_for_select({ Icon: 'icon', List: 'list' }, current_user.default_view))
        = f.select(:default_character_split, options_for_select({ 'Group characters page by template': 'template', 'Do not group characters page': 'none' }, current_user.default_character_split))
        .checkbox-field
          = f.check_box :default_hide_retired_characters
          = f.label :default_hide_retired_characters, "Hide retired characters"
    %div
      .sub Unread
      .checkbox-fields{class: cycle('even', 'odd')}
        = f.check_box :unread_opened
        = f.label :unread_opened, "Display opened threads only"
        = f.check_box :visible_unread
        = f.label :visible_unread, "Outline when jumping to unread"
        = f.check_box :hide_from_all
        = f.label :hide_from_all, "Hide hidden posts from recently updated and other post lists"
    %div
      .sub Replies Owed
      .checkbox-field{class: cycle('even', 'odd')}
        = f.check_box :hide_hiatused_tags_owed
        = f.label :hide_hiatused_tags_owed, "Hide hiatused threads"
    %div
      .sub Daily Report
      .checkbox-field{class: cycle('even', 'odd')}
        = f.check_box :ignore_unread_daily_report
        = f.label :ignore_unread_daily_report, "Hide unread notice"
    .subber Posts
    %div
      .sub= f.label :per_page, 'Paging'
      %div{class: cycle('even', 'odd')}= f.select(:per_page, per_page_options(current_user.per_page))
    %div
      .sub Warnings
      .checkbox-field{class: cycle('even', 'odd')}
        = f.check_box :hide_warnings
        = f.label :hide_warnings, "Hide content warnings"
    %div
      .sub= f.label :default_editor
      - editor_modes = { 'Rich Text': 'rtf', HTML: 'html', Markdown: 'md' }
      %div{class: cycle('even', 'odd')}= f.select(:default_editor, options_for_select(editor_modes, current_user.default_editor))
    %div
      .sub Split icon picker
      .checkbox-field{class: cycle('even', 'odd')}
        = f.check_box :icon_picker_grouping
        = f.label :icon_picker_grouping, "Group the icon picker by gallery"
    %div
      .sub Character Quick Switcher
      .checkbox-field{class: cycle('even', 'odd')}
        = f.check_box :show_user_in_switcher
        = f.label :show_user_in_switcher, "Show user character"
    %div
      .sub Reply defaults
      .checkbox-fields{class: cycle('even', 'odd')}
        - unless current_user.read_only?
          = f.check_box :default_hide_edit_delete_buttons
          = f.label :default_hide_edit_delete_buttons, 'Hide "Edit" and "Delete" buttons'
        = f.check_box :default_hide_add_bookmark_button
        = f.label :default_hide_add_bookmark_button, 'Hide "Add Bookmark" button'
    .form-table-ender= submit_tag "Save", class: 'button'

- if current_user.read_only?
  %br
  = form_for current_user, url: upgrade_user_path(current_user), method: :put, html: { id: 'upgrade_account_form' } do
    .form-table#upgrade-Account
      .editor-title Upgrade Account
      %div
        .sub= label_tag :secret
        .even= text_field_tag :secret, params[:secret], placeholder: "Secret word - ask around the community"
      .form-table-ender= submit_tag "Save", class: 'button'
