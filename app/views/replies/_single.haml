-# locals: ( reply:, post: @post || reply.post, hide_footer: false, split_ui: false, condensed: false )

- if reply.is_a?(Post)
  - write = 'post-post'.freeze
- elsif reply.is_a?(Reply)
  - write = 'post-reply'.freeze
- else
  - write = ''.freeze
.post-container{class: [write, (reply == @unread && current_user.try(:visible_unread?)) ? 'reply-highlighted' : '']}
  - if reply.is_a?(Reply) && reply.id.present?
    %a.noheight{id: "reply-#{reply.id}"}= " "
  - if reply == @unread
    .unread-marker-container
      %a#unread.unread-marker First unread marker
  .padding-10
    .post-info-box
      - if reply.icon_id && reply.keyword && !condensed
        .post-icon
          = link_to icon_path(reply.icon_id) do
            = icon_mem_tag reply.url, reply.keyword
      .post-info-text
        - if reply.character_id
          .post-character
            - if reply.name
              = link_to reply.name, character_path(reply.character_id)
            - else
              [Deleted]
          - if reply.screenname && !condensed
            .post-screenname= breakable_text(reply.screenname)
        - else
          .spacer-alt
        .post-author= user_mem_link(reply.user_id, reply.username, reply.user_deleted?)
    - if reply.id.present?
      .post-edit-box
        = render 'buttons', reply: reply, split_ui: split_ui
    .post-content
      - if params[:subj_content].present?
        = reply.pg_search_highlight.html_safe
      - else
        = sanitize_written_content(reply.content.to_s, reply.editor_mode)
  .post-footer
    - unless hide_footer
      .right-align>
        .padding-5>
          - if reply.created_at
            = precede 'Posted '.freeze do
              %span.post-posted=pretty_time(reply.created_at)
          - if has_edit_audits?(@audits, reply)
            = surround ' | Updated '.freeze, ' | '.freeze do
              %span.post-updated=pretty_time(reply.last_updated)
            = link_to 'See History'.freeze, path_for(reply, 'history_%s'), class: 'post-history'.freeze
