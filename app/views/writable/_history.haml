.content-header Edit History (Oldest to Newest)
%table
  %tbody
    - audits = audited.audits.paginate(page: page)
    - if audits.total_pages > 1
      %tr
        %td{colspan: 2}= render 'posts/paginator', paginated: audits

    - audits.each do |audit|
      - cur = audited.revision(audit.version)
      - cur.id = nil # hides the permalink buttons
      - reset_cycle
      %tr.spacer-wide
      %tr
        %th.table-title{colspan: 2} Version: #{audit.version}
      - if audit.comment.present?
        %tr
          %td.post-subheader{colspan: 2}
            = image_tag 'icons/shield.png', class: 'vmid', alt: '', title: 'Moderator edit'
            Moderator note from
            = succeed ' - ' do
              = user_link(audit.user)
            = surround '"' do
              = audit.comment
      %tr
        %th.sub.history-header Fields Changed
        %td{class: cycle('even', 'odd')}
          - if audit.version == 1
            (Original)
          - elsif audit.action == 'destroy'
            = image_tag 'icons/cross.png', alt: 'X', class: 'vmid'
            Deleted
          - elsif audit.action == 'create'
            Restored
          - else
            = audit.audited_changes.keys.map(&:humanize).join(', ').capitalize
      %tr
        %th.sub Updated
        %td{class: cycle('even', 'odd')}= pretty_time(audit.created_at)
      - if audit.action == 'update' && audit.audited_changes.key?('board_id')
        %tr
          %th.sub Continuity
          %td{class: cycle('even', 'odd')}
            Changed from
            - if (board = Board.find_by_id(audit.audited_changes['board_id'][0]))
              %b= link_to board.name, continuity_path(board)
            - else
              %b [Deleted]
            to
            - if cur.board
              %b= link_to cur.board.name, continuity_path(cur.board)
            - else
              %b [Deleted]
      - if audit.action == 'update' && audit.audited_changes.key?('privacy')
        %tr
          %th.sub Privacy
          %td{colspan: 3, class: cycle('even', 'odd')}
            Changed from
            %b= privacy_state(Post.privacies.key(audit.audited_changes['privacy'][0]))
            to
            %b= privacy_state(cur.privacy)
      - if audit.action != 'destroy' && (audit.action == 'create' || (audit.audited_changes.keys & %w(character_alias_id character_id content description icon_id subject)).present?)
        %tr
          %th.sub.vtop Content
          %td{class: cycle('even', 'odd')}
            - if audited.is_a?(Post)
              .content-header= cur.subject
              - if cur.description.present?
                .post-subheader= sanitize_simple_link_text(cur.description)
            = render 'replies/single', reply: cur, hide_footer: true
