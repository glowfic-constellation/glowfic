- content_for :breadcrumbs do
  - unless @user.id == current_user.try(:id)
    = user_link(@user)
    &raquo;
    %b= t('.title.user', name: @user.username)

- if page_view == 'list'
  - colspan = (character_split == 'none') ? 8 : 7
- else
  - colspan = 1
%table
  %tr
    %th.table-title{colspan: colspan}
      - obj_name = Character.model_name.human(count: 2)
      - if character_split == 'npcs'
        - obj_name = t('characters.npc', count: 2)
      - if @group
        = t('.title.group', name: @group.name)
      - elsif @user.id == current_user&.id
        = t('.table_title.yours', obj: obj_name)
        = link_to new_character_path(character_group_id: @group.try(:id)) do
          .link-box.action-new= t('characters.new.button.generic')
        = link_to new_template_path do
          .link-box.action-new= t('templates.new.button')
      - else
        = t('.table_title.user', name: @user.username, obj: obj_name)
      = link_to character_menu_link(view: 'icons'), class: 'view-button-link' do
        .view-button{class: (:selected unless page_view == 'list')}
          = image_tag "icons/grid.png", class: 'icon-view', alt: ''
          = t('.option.icon')
      = link_to character_menu_link(view: 'list'), class: 'view-button-link' do
        .view-button{class: (:selected if page_view == 'list')}
          = image_tag "icons/list.png", class: 'list-view', alt: ''
          = t('.option.list')
      - unless character_split == 'npcs'
        = link_to character_menu_link(character_split: 'npcs'), class: 'view-button-link' do
          .view-button
            = t('characters.npc', count: 2)
      - unless character_split == 'none'
        = link_to character_menu_link(character_split: 'none'), class: 'view-button-link' do
          .view-button
            = t('.option.ungroup')
      - unless character_split == 'template'
        = link_to character_menu_link(character_split: 'template'), class: 'view-button-link' do
          .view-button
            = t('.option.group')
      - if show_retired
        = link_to character_menu_link(retired: false), class: 'view-button-link' do
          .view-button
            = t('.option.hide_retired')
      - else
        = link_to character_menu_link(retired: true), class: 'view-button-link' do
          .view-button
            = t('.option.show_all')
  - partial_type = (page_view == 'list') ? 'characters/list_section' : 'characters/icon_view'
  %tr
    %th.subber.padding-10{colspan: colspan}
      = form_tag search_characters_path, method: :get do
        = label_tag :name, t('characters.search.label.name.long')
        = text_field_tag :name, params[:name], style: 'margin: 0px 5px;', id: :name
        = hidden_field_tag :author_id, @user.id
        = hidden_field_tag :search_name, true
        = hidden_field_tag :search_screenname, true
        = hidden_field_tag :search_nickname, true
        = submit_tag "Search", class: 'button'
  - if character_split == 'template'
    %tr
      %th.odd{style: 'padding: 3px', colspan: colspan}= # spacer between two .subbers
    - if @group
      = render 'group', group: @group, page_view: page_view, colspan: colspan
    - elsif @user.character_groups.exists?
      = render partial: 'group', collection: @user.character_groups.order(id: :asc), locals: { page_view: page_view, colspan: colspan }
      - if (group_chars = @user.characters.non_npcs.where(character_group_id: nil)).exists?
        = render 'group', characters: group_chars, group: nil, skip_grouped_templates: true, page_view: page_view, colspan: colspan
    - elsif @user.characters.exists?
      = render partial: partial_type, collection: @user.templates.ordered, as: :name
      - if (templateless = @user.characters.non_npcs.where(template_id: nil)).exists?
        = render partial_type, name: t('.no_template'), characters: templateless.ordered, show_new_character_button: @user.id == current_user&.id
    - else
      %tr
        %td.centered.padding-5{class: cycle('even', 'odd'), colspan: colspan}= t('.empty')
  - elsif character_split == 'npcs'
    - characters = @user.characters.npcs.ordered
    = render partial_type, name: nil, characters: characters, show_template: false
  - else
    - characters = @user.characters.non_npcs.includes(:template).ordered
    = render partial_type, name: nil, characters: characters, show_template: true
