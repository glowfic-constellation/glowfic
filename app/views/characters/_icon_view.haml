-# locals: ( name: nil, characters: nil, show_template: false, show_user: false, hide_buttons: false, show_new_character_button: false, show_retired: show_retired() )
-# show_template, show_user, and hide_buttons are to match list_section

- characters ||= name.characters.non_npcs.ordered
- characters = characters.not_retired unless show_retired

- if @template.nil? && name.present?
  .subber.padding-10{colspan: 6}
    - if name.is_a? String
      %b= name
      - if show_new_character_button
        = link_to new_character_path do
          .link-box.action-new{style: 'font-size: 14px'} + New Character
    - else
      %b
        Template:
        = link_to name.name, template_path(name)
      - if current_user.try(:id) == name.user_id
        = link_to new_character_path(template_id: name.id) do
          .link-box.action-new{style: 'font-size: 14px'} + New Instance
        = link_to edit_template_path(name) do
          .link-box.action-edit{style: 'font-size: 14px'}
            = image_tag "icons/pencil.png", class: 'vmid', alt: ''
            Edit
        = link_to template_path(name), method: :delete, data: { confirm: 'Are you sure you want to delete this template?' } do
          .link-box.action-delete{style: 'font-size: 14px'} x Delete
- if @template && @template.description.present?
  .single-description.written-content{colspan: 6}= sanitize_written_content(@template.description)
- elsif @template.nil? && name.present? && name.is_a?(::Template) && name.description.present?
  .single-description.written-content{colspan: 6}= sanitize_written_content(name.description)
.icons-box.left-align
  .character-icon-list
    - charpluck = characters.left_outer_joins(:default_icon).pluck(:id, :name, :screenname, :user_id, :url, :keyword)
    = render partial: 'characters/icon_item', collection: charpluck, as: :character
    - unless charpluck.present?
      .centered â€” No characters yet â€”
- if characters.methods.include?(:total_pages) && characters.total_pages > 1
  = render 'posts/paginator', paginated: characters
