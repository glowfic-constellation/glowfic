-# locals: ( replies: )

- 1.upto((replies.count(:all) / 250.0).ceil).each do |index|
  - replies.paginate(per_page: 250, page: index).each do |reply|
    .post-container.post-reply
      <a id="reply-#{reply.id}" class="noheight"> </a>
      .padding-10
        .post-info-box
          - if reply.icon_id
            .post-icon= icon_mem_tag reply.url, reply.keyword
          .post-info-text
            - if reply.character_id
              .post-character= reply.name
              - if reply.screenname
                .post-screenname= breakable_text(reply.screenname)
            - else
              .spacer-alt
            - if reply.user_deleted?
              .post-author
                %em (deleted user)
            - else
              .post-author= reply.username
        .post-edit-box
          = link_to Rails.application.routes.url_helpers.reply_path(reply, anchor: "reply-#{reply.id}"), rel: 'alternate'.freeze do
            = image_tag "icons/link.png".freeze, title: 'Permalink'.freeze, alt: 'Permalink'.freeze
          = link_to Rails.application.routes.url_helpers.post_path(reply.post_id, unread: true, at_id: reply.id), rel: 'nofollow noindex', method: :put do
            = image_tag "icons/eye.png".freeze, title: 'Mark Unread Here'.freeze, alt: 'Mark Unread'.freeze
        .post-content= sanitize_written_content(reply.content.to_s, reply.editor_mode)
      .post-footer
        .right-align>
          .padding-5>
            = precede 'Posted '.freeze do
              %span.post-posted=pretty_time(reply.created_at, format: ApplicationHelper::TIME_FORMAT)
            - if reply.created_at.to_i != reply.last_updated.to_i
              = precede ' | Updated '.freeze do
                %span.post-updated=pretty_time(reply.last_updated, format: ApplicationHelper::TIME_FORMAT)
