%tr
  - klass = cycle('even', 'odd')
  - replies_count = post.reply_count
  %td.post-completed.vtop{class: [klass, (post.complete? ? 'post-complete' : 'post-incomplete')]}
    - if post.complete?
      = image_tag "icons/book.png", class: 'vmid', title: "Post Complete", alt: 'Complete'
    - elsif post.on_hiatus?
      = image_tag "icons/hourglass.png", class: 'vmid', title: "Post On Hiatus", alt: 'Hiatused'
    - elsif post.abandoned?
      = image_tag "icons/book_grey.png", class: 'vmid', title: "Post Abandoned", alt: 'Abandoned'
    - if post.privacy_access_list? || post.privacy_private?
      = privacy_icon(post.privacy.to_sym)
    - if !current_user.try(:hide_warnings) && post.has_content_warnings?
      = image_tag "icons/exclamation.png", class: 'vmid', title: "Content Warning: " + post.content_warnings.pluck(:name).join(', '), alt: 'Has Warnings'
  %td.post-subject.vtop{class: klass}
    - if logged_in?
      - if unread_post?(post, unread_ids) || (@show_unread && !opened_post?(post, opened_ids))
        = link_to unread_path(post) do
          = image_tag unread_img, class: 'vmid mobile-target', title: 'First Unread', alt: 'First Unread'
      - elsif @show_unread
        = link_to unread_path(post) do
          = image_tag lastlink_img, class: 'vmid mobile-target', title: 'First Unread', alt: 'Jump To End'
    - if logged_in? && @opened_ids.present? && @opened_ids.exclude?(post.id)
      %b= link_to post.subject, post_path(post), title: strip_tags(post.description)&.html_safe
    - else
      = link_to post.subject, post_path(post), title: strip_tags(post.description)&.html_safe
    - if !@hide_quicklinks && (!logged_in? || per_page > 0)
      - total_pages = (replies_count.to_f / per_page).ceil
      - if total_pages > 1
        = surround '[', ']' do
          - if total_pages <= 6
            - params = {}
            - total_pages.times do |index|
              - params[:page] = index + 1 unless index == 0
              = link_to (index + 1), post_path(post, params)
          - else
            = link_to 1, post_path(post)
            = link_to 2, post_path(post, page: 2)
            = link_to 3, post_path(post, page: 3)
            \...
            - (total_pages - 2).upto(total_pages) do |index|
              = link_to index, post_path(post, page: index)
  - unless local_assigns[:hide_continuity]
    %td.post-board.vtop{class: klass}= link_to post.board_name, anchored_continuity_path(post)
  %td.post-authors.vtop{class: klass}= author_links(post)
  %td.width-70.post-replies.vtop{class: klass}= link_to replies_count, stats_post_path(post)
  - if logged_in? && local_assigns[:show_unread_count]
    %td.width-70.vtop{class: klass}
      - if @opened_ids.include?(post.id) && unread_ids.include?(post.id)
        = @unread_counts.fetch(post.id, 0)
      - else
        \-
  %td.post-time.vtop{class: klass}
    = pretty_time(post.tagged_at)
    by
    = user_mem_link(post.last_user_id, post.last_user_name, post.last_user_deleted?)
  - if local_assigns[:check_box_name]
    %td.post-check-box{class: klass}= check_box_tag check_box_name, post.id, false, class: 'checkbox', id: nil
  - if local_assigns[:index].present?
    %td.vtop.width-70.right-align{class: klass}
      - if index.editable_by?(current_user)
        = link_to edit_index_post_path(post.index_post_id) do
          = image_tag "icons/pencil.png"
        = link_to index_post_path(post.index_post_id), method: :delete, data: { confirm: "Are you sure you want to remove #{post.subject} from this index?" } do
          = image_tag "icons/cross.png"
        &nbsp;
- if post.respond_to?(:index_description)
  %tr
    %td{class: klass}
    %td{class: klass, colspan: 5, style: 'padding-top: 0px;'}
      %span.details= sanitize_simple_link_text(post.index_description)
    %td{class: klass}
