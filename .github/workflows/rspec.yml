# For more information see:
# - https://docs.github.com/en/actions/guides/building-and-testing-ruby
# - https://github.com/niclin/rails-github-actions-example/blob/master/.github/workflows/rails.yml

name: rspec

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  merge_group:

jobs:
  test:
    name: rspec suite
    runs-on: ubuntu-latest

    services:
      postgres:
        # reference: https://github.com/actions/example-services/blob/master/.github/workflows/postgres-service.yml
        image: postgres:14
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: glowfic_test
        ports: ["5432:5432"]
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
      redis:
        # reference: https://docs.github.com/en/actions/guides/creating-redis-service-containers#running-jobs-in-containers
        image: redis:6.2
        ports:
        - 6379:6379
        options: --health-cmd "redis-cli ping" --health-interval 10s --health-timeout 5s --health-retries 5

    env:
      GLOWFIC_DATABASE_USER: postgres
      GLOWFIC_DATABASE_PASS: postgres
      GLOWFIC_DATABASE_PORT: 5432
      CC_TEST_REPORTER_ID: 1e0c6dba9930e839038860b6d73301226c821937f57ed35d06fc0e4b7bddf5f6
      RAILS_ENV: test
      MINIO_ENDPOINT: http://localhost:9000/
      MINIO_ENDPOINT_EXTERNAL: http://localhost:9000/

    steps:
      - uses: actions/checkout@v4
      - uses: browser-actions/setup-chrome@v1
      - name: Set up MinIO
        run: |
          wget --show-progress --progress=dot:mega https://dl.min.io/server/minio/release/linux-amd64/minio
          chmod +x minio
          MINIO_ACCESS_KEY=minioadmin MINIO_SECRET_KEY=minioadmin ./minio server ./minio-data 2>&1 > minio.log &
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true  # runs bundle install (with version based on Gemfile.lock) and automatically caches result
      - name: Load database schema
        run: bundle exec rake parallel:load_schema
      - name: Run rspec tests and report coverage
        uses: paambaati/codeclimate-action@v5.0.0
        with:
          coverageCommand: bundle exec rake parallel:spec
      - name: Upload MinIO logs
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: minio-logs
          path: minio.log
      - name: Upload RSpec logs
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: rspec-logs
          path: |
            tmp/rspec-results.html
            tmp/parallel_runtime_rspec.log
            tmp/failing_specs.log
      - name: Upload Coverage files
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: coverage/
