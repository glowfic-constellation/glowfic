# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `aws-sdk-dynamodb` gem.
# Please instead update this file by running `bin/tapioca gem aws-sdk-dynamodb`.

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/plugins/extended_retries.rb#3
module Aws
  class << self
    # source://aws-sdk-core/3.187.0lib/aws-sdk-core.rb#133
    def config; end

    # source://aws-sdk-core/3.187.0lib/aws-sdk-core.rb#136
    def config=(config); end

    # source://aws-sdk-core/3.187.0lib/aws-sdk-core.rb#195
    def eager_autoload!(*args); end

    # source://aws-sdk-core/3.187.0lib/aws-sdk-core.rb#188
    def empty_connection_pools!; end

    # source://aws-sdk-core/3.187.0lib/aws-sdk-core.rb#145
    def partition(partition_name); end

    # source://aws-sdk-core/3.187.0lib/aws-sdk-core.rb#150
    def partitions; end

    # source://aws-sdk-core/3.187.0lib/aws-sdk-core.rb#126
    def shared_config; end

    # source://aws-sdk-core/3.187.0lib/aws-sdk-core.rb#165
    def use_bundled_cert!; end
  end
end

# This module provides support for Amazon DynamoDB. This module is available in the
# `aws-sdk-dynamodb` gem.
#
# # Client
#
# The {Client} class provides one method for each API operation. Operation
# methods each accept a hash of request parameters and return a response
# structure.
#
#     dynamo_db = Aws::DynamoDB::Client.new
#     resp = dynamo_db.batch_execute_statement(params)
#
# See {Client} for more information.
#
# # Errors
#
# Errors returned from Amazon DynamoDB are defined in the
# {Errors} module and all extend {Errors::ServiceError}.
#
#     begin
#       # do stuff
#     rescue Aws::DynamoDB::Errors::ServiceError
#       # rescues all Amazon DynamoDB API errors
#     end
#
# See {Errors} for more information.
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#10
module Aws::DynamoDB; end

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/attribute_value.rb#10
class Aws::DynamoDB::AttributeValue
  # @api private
  # @return [AttributeValue] a new instance of AttributeValue
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/attribute_value.rb#12
  def initialize; end

  # @api private
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/attribute_value.rb#17
  def marshal(value); end

  # @api private
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/attribute_value.rb#21
  def unmarshal(value); end
end

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/attribute_value.rb#25
class Aws::DynamoDB::AttributeValue::Marshaler
  # @api private
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/attribute_value.rb#29
  def format(obj); end

  private

  # @api private
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/attribute_value.rb#61
  def format_set(set); end
end

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/attribute_value.rb#26
Aws::DynamoDB::AttributeValue::Marshaler::HASHY_TEST = T.let(T.unsafe(nil), Proc)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/attribute_value.rb#27
Aws::DynamoDB::AttributeValue::Marshaler::STRINGY_TEST = T.let(T.unsafe(nil), Proc)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/attribute_value.rb#76
class Aws::DynamoDB::AttributeValue::Unmarshaler
  # @api private
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/attribute_value.rb#78
  def format(obj); end

  private

  # @api private
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/attribute_value.rb#101
  def extract_type_and_value(obj); end
end

# An API client for DynamoDB.  To construct a client, you need to configure a `:region` and `:credentials`.
#
#     client = Aws::DynamoDB::Client.new(
#       region: region_name,
#       credentials: credentials,
#       # ...
#     )
#
# For details on configuring region and credentials see
# the [developer guide](/sdk-for-ruby/v3/developer-guide/setup-config.html).
#
# See {#initialize} for a full list of supported configuration options.
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client.rb#55
class Aws::DynamoDB::Client < ::Seahorse::Client::Base
  include ::Aws::ClientStubs

  # @overload initialize
  # @return [Client] a new instance of Client
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client.rb#414
  def initialize(*args); end

  # This operation allows you to perform batch reads or writes on data
  # stored in DynamoDB, using PartiQL. Each read statement in a
  # `BatchExecuteStatement` must specify an equality condition on all key
  # attributes. This enforces that each `SELECT` statement in a batch
  # returns at most a single item.
  #
  # <note markdown="1"> The entire batch must consist of either read statements or write
  # statements, you cannot mix both in one batch.
  #
  #  </note>
  #
  # A HTTP 200 response does not mean that all statements in the
  # BatchExecuteStatement succeeded. Error details for individual
  # statements can be found under the [Error][1] field of the
  # `BatchStatementResponse` for each statement.
  #
  #
  #
  # [1]: https://docs.aws.amazon.com/amazondynamodb/latest/APIReference/API_BatchStatementResponse.html#DDB-Type-BatchStatementResponse-Error
  #
  # @example Request syntax with placeholder values
  #
  #   resp = client.batch_execute_statement({
  #   statements: [ # required
  #   {
  #   statement: "PartiQLStatement", # required
  #   parameters: ["value"], # value <Hash,Array,String,Numeric,Boolean,IO,Set,nil>
  #   consistent_read: false,
  #   return_values_on_condition_check_failure: "ALL_OLD", # accepts ALL_OLD, NONE
  #   },
  #   ],
  #   return_consumed_capacity: "INDEXES", # accepts INDEXES, TOTAL, NONE
  #   })
  # @example Response structure
  #
  #   resp.responses #=> Array
  #   resp.responses[0].error.code #=> String, one of "ConditionalCheckFailed", "ItemCollectionSizeLimitExceeded", "RequestLimitExceeded", "ValidationError", "ProvisionedThroughputExceeded", "TransactionConflict", "ThrottlingError", "InternalServerError", "ResourceNotFound", "AccessDenied", "DuplicateItem"
  #   resp.responses[0].error.message #=> String
  #   resp.responses[0].error.item #=> Hash
  #   resp.responses[0].error.item["AttributeName"] #=> <Hash,Array,String,Numeric,Boolean,IO,Set,nil>
  #   resp.responses[0].table_name #=> String
  #   resp.responses[0].item #=> Hash
  #   resp.responses[0].item["AttributeName"] #=> <Hash,Array,String,Numeric,Boolean,IO,Set,nil>
  #   resp.consumed_capacity #=> Array
  #   resp.consumed_capacity[0].table_name #=> String
  #   resp.consumed_capacity[0].capacity_units #=> Float
  #   resp.consumed_capacity[0].read_capacity_units #=> Float
  #   resp.consumed_capacity[0].write_capacity_units #=> Float
  #   resp.consumed_capacity[0].table.read_capacity_units #=> Float
  #   resp.consumed_capacity[0].table.write_capacity_units #=> Float
  #   resp.consumed_capacity[0].table.capacity_units #=> Float
  #   resp.consumed_capacity[0].local_secondary_indexes #=> Hash
  #   resp.consumed_capacity[0].local_secondary_indexes["IndexName"].read_capacity_units #=> Float
  #   resp.consumed_capacity[0].local_secondary_indexes["IndexName"].write_capacity_units #=> Float
  #   resp.consumed_capacity[0].local_secondary_indexes["IndexName"].capacity_units #=> Float
  #   resp.consumed_capacity[0].global_secondary_indexes #=> Hash
  #   resp.consumed_capacity[0].global_secondary_indexes["IndexName"].read_capacity_units #=> Float
  #   resp.consumed_capacity[0].global_secondary_indexes["IndexName"].write_capacity_units #=> Float
  #   resp.consumed_capacity[0].global_secondary_indexes["IndexName"].capacity_units #=> Float
  # @option params
  # @option params
  # @overload batch_execute_statement
  # @param params [Hash] ({})
  # @return [Types::BatchExecuteStatementOutput] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::BatchExecuteStatementOutput#responses #responses} => Array&lt;Types::BatchStatementResponse&gt;
  #   * {Types::BatchExecuteStatementOutput#consumed_capacity #consumed_capacity} => Array&lt;Types::ConsumedCapacity&gt;
  # @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/BatchExecuteStatement AWS API Documentation
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client.rb#510
  def batch_execute_statement(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # The `BatchGetItem` operation returns the attributes of one or more
  # items from one or more tables. You identify requested items by primary
  # key.
  #
  # A single operation can retrieve up to 16 MB of data, which can contain
  # as many as 100 items. `BatchGetItem` returns a partial result if the
  # response size limit is exceeded, the table's provisioned throughput
  # is exceeded, more than 1MB per partition is requested, or an internal
  # processing failure occurs. If a partial result is returned, the
  # operation returns a value for `UnprocessedKeys`. You can use this
  # value to retry the operation starting with the next item to get.
  #
  # If you request more than 100 items, `BatchGetItem` returns a
  # `ValidationException` with the message "Too many items requested for
  # the BatchGetItem call."
  #
  # For example, if you ask to retrieve 100 items, but each individual
  # item is 300 KB in size, the system returns 52 items (so as not to
  # exceed the 16 MB limit). It also returns an appropriate
  # `UnprocessedKeys` value so you can get the next page of results. If
  # desired, your application can include its own logic to assemble the
  # pages of results into one dataset.
  #
  # If *none* of the items can be processed due to insufficient
  # provisioned throughput on all of the tables in the request, then
  # `BatchGetItem` returns a `ProvisionedThroughputExceededException`. If
  # *at least one* of the items is successfully processed, then
  # `BatchGetItem` completes successfully, while returning the keys of the
  # unread items in `UnprocessedKeys`.
  #
  # If DynamoDB returns any unprocessed items, you should retry the batch
  # operation on those items. However, *we strongly recommend that you use
  # an exponential backoff algorithm*. If you retry the batch operation
  # immediately, the underlying read or write requests can still fail due
  # to throttling on the individual tables. If you delay the batch
  # operation using exponential backoff, the individual requests in the
  # batch are much more likely to succeed.
  #
  #  For more information, see [Batch Operations and Error Handling][1] in
  # the *Amazon DynamoDB Developer Guide*.
  #
  # By default, `BatchGetItem` performs eventually consistent reads on
  # every table in the request. If you want strongly consistent reads
  # instead, you can set `ConsistentRead` to `true` for any or all tables.
  #
  # In order to minimize response latency, `BatchGetItem` may retrieve
  # items in parallel.
  #
  # When designing your application, keep in mind that DynamoDB does not
  # return items in any particular order. To help parse the response by
  # item, include the primary key values for the items in your request in
  # the `ProjectionExpression` parameter.
  #
  # If a requested item does not exist, it is not returned in the result.
  # Requests for nonexistent items consume the minimum read capacity units
  # according to the type of read. For more information, see [Working with
  # Tables][2] in the *Amazon DynamoDB Developer Guide*.
  #
  #
  #
  # [1]: https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/ErrorHandling.html#BatchOperations
  # [2]: https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/WorkingWithTables.html#CapacityUnitCalculations
  #
  # The returned {Seahorse::Client::Response response} is a pageable response and is Enumerable. For details on usage see {Aws::PageableResponse PageableResponse}.
  #
  # @example Example: To retrieve multiple items from a table
  #
  #   # This example reads multiple items from the Music table using a batch of three GetItem requests.  Only the AlbumTitle
  #   # attribute is returned.
  #
  #   resp = client.batch_get_item({
  #   request_items: {
  #   "Music" => {
  #   keys: [
  #   {
  #   "Artist" => "No One You Know",
  #   "SongTitle" => "Call Me Today",
  #   },
  #   {
  #   "Artist" => "Acme Band",
  #   "SongTitle" => "Happy Day",
  #   },
  #   {
  #   "Artist" => "No One You Know",
  #   "SongTitle" => "Scared of My Shadow",
  #   },
  #   ],
  #   projection_expression: "AlbumTitle",
  #   },
  #   },
  #   })
  #
  #   resp.to_h outputs the following:
  #   {
  #   responses: {
  #   "Music" => [
  #   {
  #   "AlbumTitle" => "Somewhat Famous",
  #   },
  #   {
  #   "AlbumTitle" => "Blue Sky Blues",
  #   },
  #   {
  #   "AlbumTitle" => "Louder Than Ever",
  #   },
  #   ],
  #   },
  #   }
  # @example Request syntax with placeholder values
  #
  #   resp = client.batch_get_item({
  #   request_items: { # required
  #   "TableName" => {
  #   keys: [ # required
  #   {
  #   "AttributeName" => "value", # value <Hash,Array,String,Numeric,Boolean,IO,Set,nil>
  #   },
  #   ],
  #   attributes_to_get: ["AttributeName"],
  #   consistent_read: false,
  #   projection_expression: "ProjectionExpression",
  #   expression_attribute_names: {
  #   "ExpressionAttributeNameVariable" => "AttributeName",
  #   },
  #   },
  #   },
  #   return_consumed_capacity: "INDEXES", # accepts INDEXES, TOTAL, NONE
  #   })
  # @example Response structure
  #
  #   resp.responses #=> Hash
  #   resp.responses["TableName"] #=> Array
  #   resp.responses["TableName"][0] #=> Hash
  #   resp.responses["TableName"][0]["AttributeName"] #=> <Hash,Array,String,Numeric,Boolean,IO,Set,nil>
  #   resp.unprocessed_keys #=> Hash
  #   resp.unprocessed_keys["TableName"].keys #=> Array
  #   resp.unprocessed_keys["TableName"].keys[0] #=> Hash
  #   resp.unprocessed_keys["TableName"].keys[0]["AttributeName"] #=> <Hash,Array,String,Numeric,Boolean,IO,Set,nil>
  #   resp.unprocessed_keys["TableName"].attributes_to_get #=> Array
  #   resp.unprocessed_keys["TableName"].attributes_to_get[0] #=> String
  #   resp.unprocessed_keys["TableName"].consistent_read #=> Boolean
  #   resp.unprocessed_keys["TableName"].projection_expression #=> String
  #   resp.unprocessed_keys["TableName"].expression_attribute_names #=> Hash
  #   resp.unprocessed_keys["TableName"].expression_attribute_names["ExpressionAttributeNameVariable"] #=> String
  #   resp.consumed_capacity #=> Array
  #   resp.consumed_capacity[0].table_name #=> String
  #   resp.consumed_capacity[0].capacity_units #=> Float
  #   resp.consumed_capacity[0].read_capacity_units #=> Float
  #   resp.consumed_capacity[0].write_capacity_units #=> Float
  #   resp.consumed_capacity[0].table.read_capacity_units #=> Float
  #   resp.consumed_capacity[0].table.write_capacity_units #=> Float
  #   resp.consumed_capacity[0].table.capacity_units #=> Float
  #   resp.consumed_capacity[0].local_secondary_indexes #=> Hash
  #   resp.consumed_capacity[0].local_secondary_indexes["IndexName"].read_capacity_units #=> Float
  #   resp.consumed_capacity[0].local_secondary_indexes["IndexName"].write_capacity_units #=> Float
  #   resp.consumed_capacity[0].local_secondary_indexes["IndexName"].capacity_units #=> Float
  #   resp.consumed_capacity[0].global_secondary_indexes #=> Hash
  #   resp.consumed_capacity[0].global_secondary_indexes["IndexName"].read_capacity_units #=> Float
  #   resp.consumed_capacity[0].global_secondary_indexes["IndexName"].write_capacity_units #=> Float
  #   resp.consumed_capacity[0].global_secondary_indexes["IndexName"].capacity_units #=> Float
  # @option params
  # @option params
  # @overload batch_get_item
  # @param params [Hash] ({})
  # @return [Types::BatchGetItemOutput] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::BatchGetItemOutput#responses #responses} => Hash&lt;String,Array&lt;Hash&lt;String,Types::AttributeValue&gt;&gt;&gt;
  #   * {Types::BatchGetItemOutput#unprocessed_keys #unprocessed_keys} => Hash&lt;String,Types::KeysAndAttributes&gt;
  #   * {Types::BatchGetItemOutput#consumed_capacity #consumed_capacity} => Array&lt;Types::ConsumedCapacity&gt;
  # @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/BatchGetItem AWS API Documentation
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client.rb#793
  def batch_get_item(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # The `BatchWriteItem` operation puts or deletes multiple items in one
  # or more tables. A single call to `BatchWriteItem` can transmit up to
  # 16MB of data over the network, consisting of up to 25 item put or
  # delete operations. While individual items can be up to 400 KB once
  # stored, it's important to note that an item's representation might
  # be greater than 400KB while being sent in DynamoDB's JSON format for
  # the API call. For more details on this distinction, see [Naming Rules
  # and Data Types][1].
  #
  # <note markdown="1"> `BatchWriteItem` cannot update items. If you perform a
  # `BatchWriteItem` operation on an existing item, that item's values
  # will be overwritten by the operation and it will appear like it was
  # updated. To update items, we recommend you use the `UpdateItem`
  # action.
  #
  #  </note>
  #
  # The individual `PutItem` and `DeleteItem` operations specified in
  # `BatchWriteItem` are atomic; however `BatchWriteItem` as a whole is
  # not. If any requested operations fail because the table's provisioned
  # throughput is exceeded or an internal processing failure occurs, the
  # failed operations are returned in the `UnprocessedItems` response
  # parameter. You can investigate and optionally resend the requests.
  # Typically, you would call `BatchWriteItem` in a loop. Each iteration
  # would check for unprocessed items and submit a new `BatchWriteItem`
  # request with those unprocessed items until all items have been
  # processed.
  #
  # If *none* of the items can be processed due to insufficient
  # provisioned throughput on all of the tables in the request, then
  # `BatchWriteItem` returns a `ProvisionedThroughputExceededException`.
  #
  # If DynamoDB returns any unprocessed items, you should retry the batch
  # operation on those items. However, *we strongly recommend that you use
  # an exponential backoff algorithm*. If you retry the batch operation
  # immediately, the underlying read or write requests can still fail due
  # to throttling on the individual tables. If you delay the batch
  # operation using exponential backoff, the individual requests in the
  # batch are much more likely to succeed.
  #
  #  For more information, see [Batch Operations and Error Handling][2] in
  # the *Amazon DynamoDB Developer Guide*.
  #
  # With `BatchWriteItem`, you can efficiently write or delete large
  # amounts of data, such as from Amazon EMR, or copy data from another
  # database into DynamoDB. In order to improve performance with these
  # large-scale operations, `BatchWriteItem` does not behave in the same
  # way as individual `PutItem` and `DeleteItem` calls would. For example,
  # you cannot specify conditions on individual put and delete requests,
  # and `BatchWriteItem` does not return deleted items in the response.
  #
  # If you use a programming language that supports concurrency, you can
  # use threads to write items in parallel. Your application must include
  # the necessary logic to manage the threads. With languages that don't
  # support threading, you must update or delete the specified items one
  # at a time. In both situations, `BatchWriteItem` performs the specified
  # put and delete operations in parallel, giving you the power of the
  # thread pool approach without having to introduce complexity into your
  # application.
  #
  # Parallel processing reduces latency, but each specified put and delete
  # request consumes the same number of write capacity units whether it is
  # processed in parallel or not. Delete operations on nonexistent items
  # consume one write capacity unit.
  #
  # If one or more of the following is true, DynamoDB rejects the entire
  # batch write operation:
  #
  # * One or more tables specified in the `BatchWriteItem` request does
  #   not exist.
  #
  # * Primary key attributes specified on an item in the request do not
  #   match those in the corresponding table's primary key schema.
  #
  # * You try to perform multiple operations on the same item in the same
  #   `BatchWriteItem` request. For example, you cannot put and delete the
  #   same item in the same `BatchWriteItem` request.
  #
  # * Your request contains at least two items with identical hash and
  #   range keys (which essentially is two put operations).
  #
  # * There are more than 25 requests in the batch.
  #
  # * Any individual item in a batch exceeds 400 KB.
  #
  # * The total request size exceeds 16 MB.
  #
  #
  #
  # [1]: https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/HowItWorks.NamingRulesDataTypes.html
  # [2]: https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/ErrorHandling.html#Programming.Errors.BatchOperations
  #
  # @example Example: To add multiple items to a table
  #
  #   # This example adds three new items to the Music table using a batch of three PutItem requests.
  #
  #   resp = client.batch_write_item({
  #   request_items: {
  #   "Music" => [
  #   {
  #   put_request: {
  #   item: {
  #   "AlbumTitle" => "Somewhat Famous",
  #   "Artist" => "No One You Know",
  #   "SongTitle" => "Call Me Today",
  #   },
  #   },
  #   },
  #   {
  #   put_request: {
  #   item: {
  #   "AlbumTitle" => "Songs About Life",
  #   "Artist" => "Acme Band",
  #   "SongTitle" => "Happy Day",
  #   },
  #   },
  #   },
  #   {
  #   put_request: {
  #   item: {
  #   "AlbumTitle" => "Blue Sky Blues",
  #   "Artist" => "No One You Know",
  #   "SongTitle" => "Scared of My Shadow",
  #   },
  #   },
  #   },
  #   ],
  #   },
  #   })
  #
  #   resp.to_h outputs the following:
  #   {
  #   }
  # @example Request syntax with placeholder values
  #
  #   resp = client.batch_write_item({
  #   request_items: { # required
  #   "TableName" => [
  #   {
  #   put_request: {
  #   item: { # required
  #   "AttributeName" => "value", # value <Hash,Array,String,Numeric,Boolean,IO,Set,nil>
  #   },
  #   },
  #   delete_request: {
  #   key: { # required
  #   "AttributeName" => "value", # value <Hash,Array,String,Numeric,Boolean,IO,Set,nil>
  #   },
  #   },
  #   },
  #   ],
  #   },
  #   return_consumed_capacity: "INDEXES", # accepts INDEXES, TOTAL, NONE
  #   return_item_collection_metrics: "SIZE", # accepts SIZE, NONE
  #   })
  # @example Response structure
  #
  #   resp.unprocessed_items #=> Hash
  #   resp.unprocessed_items["TableName"] #=> Array
  #   resp.unprocessed_items["TableName"][0].put_request.item #=> Hash
  #   resp.unprocessed_items["TableName"][0].put_request.item["AttributeName"] #=> <Hash,Array,String,Numeric,Boolean,IO,Set,nil>
  #   resp.unprocessed_items["TableName"][0].delete_request.key #=> Hash
  #   resp.unprocessed_items["TableName"][0].delete_request.key["AttributeName"] #=> <Hash,Array,String,Numeric,Boolean,IO,Set,nil>
  #   resp.item_collection_metrics #=> Hash
  #   resp.item_collection_metrics["TableName"] #=> Array
  #   resp.item_collection_metrics["TableName"][0].item_collection_key #=> Hash
  #   resp.item_collection_metrics["TableName"][0].item_collection_key["AttributeName"] #=> <Hash,Array,String,Numeric,Boolean,IO,Set,nil>
  #   resp.item_collection_metrics["TableName"][0].size_estimate_range_gb #=> Array
  #   resp.item_collection_metrics["TableName"][0].size_estimate_range_gb[0] #=> Float
  #   resp.consumed_capacity #=> Array
  #   resp.consumed_capacity[0].table_name #=> String
  #   resp.consumed_capacity[0].capacity_units #=> Float
  #   resp.consumed_capacity[0].read_capacity_units #=> Float
  #   resp.consumed_capacity[0].write_capacity_units #=> Float
  #   resp.consumed_capacity[0].table.read_capacity_units #=> Float
  #   resp.consumed_capacity[0].table.write_capacity_units #=> Float
  #   resp.consumed_capacity[0].table.capacity_units #=> Float
  #   resp.consumed_capacity[0].local_secondary_indexes #=> Hash
  #   resp.consumed_capacity[0].local_secondary_indexes["IndexName"].read_capacity_units #=> Float
  #   resp.consumed_capacity[0].local_secondary_indexes["IndexName"].write_capacity_units #=> Float
  #   resp.consumed_capacity[0].local_secondary_indexes["IndexName"].capacity_units #=> Float
  #   resp.consumed_capacity[0].global_secondary_indexes #=> Hash
  #   resp.consumed_capacity[0].global_secondary_indexes["IndexName"].read_capacity_units #=> Float
  #   resp.consumed_capacity[0].global_secondary_indexes["IndexName"].write_capacity_units #=> Float
  #   resp.consumed_capacity[0].global_secondary_indexes["IndexName"].capacity_units #=> Float
  # @option params
  # @option params
  # @option params
  # @overload batch_write_item
  # @param params [Hash] ({})
  # @return [Types::BatchWriteItemOutput] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::BatchWriteItemOutput#unprocessed_items #unprocessed_items} => Hash&lt;String,Array&lt;Types::WriteRequest&gt;&gt;
  #   * {Types::BatchWriteItemOutput#item_collection_metrics #item_collection_metrics} => Hash&lt;String,Array&lt;Types::ItemCollectionMetrics&gt;&gt;
  #   * {Types::BatchWriteItemOutput#consumed_capacity #consumed_capacity} => Array&lt;Types::ConsumedCapacity&gt;
  # @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/BatchWriteItem AWS API Documentation
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client.rb#1052
  def batch_write_item(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # @api private
  # @param params [{}]
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client.rb#7855
  def build_request(operation_name, params = T.unsafe(nil)); end

  # Creates a backup for an existing table.
  #
  # Each time you create an on-demand backup, the entire table data is
  # backed up. There is no limit to the number of on-demand backups that
  # can be taken.
  #
  # When you create an on-demand backup, a time marker of the request is
  # cataloged, and the backup is created asynchronously, by applying all
  # changes until the time of the request to the last full table snapshot.
  # Backup requests are processed instantaneously and become available for
  # restore within minutes.
  #
  # You can call `CreateBackup` at a maximum rate of 50 times per second.
  #
  # All backups in DynamoDB work without consuming any provisioned
  # throughput on the table.
  #
  # If you submit a backup request on 2018-12-14 at 14:25:00, the backup
  # is guaranteed to contain all data committed to the table up to
  # 14:24:00, and data committed after 14:26:00 will not be. The backup
  # might contain data modifications made between 14:24:00 and 14:26:00.
  # On-demand backup does not support causal consistency.
  #
  # Along with data, the following are also included on the backups:
  #
  # * Global secondary indexes (GSIs)
  #
  # * Local secondary indexes (LSIs)
  #
  # * Streams
  #
  # * Provisioned read and write capacity
  #
  # @example Request syntax with placeholder values
  #
  #   resp = client.create_backup({
  #   table_name: "TableName", # required
  #   backup_name: "BackupName", # required
  #   })
  # @example Response structure
  #
  #   resp.backup_details.backup_arn #=> String
  #   resp.backup_details.backup_name #=> String
  #   resp.backup_details.backup_size_bytes #=> Integer
  #   resp.backup_details.backup_status #=> String, one of "CREATING", "DELETED", "AVAILABLE"
  #   resp.backup_details.backup_type #=> String, one of "USER", "SYSTEM", "AWS_BACKUP"
  #   resp.backup_details.backup_creation_date_time #=> Time
  #   resp.backup_details.backup_expiry_date_time #=> Time
  # @option params
  # @option params
  # @overload create_backup
  # @param params [Hash] ({})
  # @return [Types::CreateBackupOutput] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::CreateBackupOutput#backup_details #backup_details} => Types::BackupDetails
  # @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/CreateBackup AWS API Documentation
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client.rb#1121
  def create_backup(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Creates a global table from an existing table. A global table creates
  # a replication relationship between two or more DynamoDB tables with
  # the same table name in the provided Regions.
  #
  # This operation only applies to [Version 2017.11.29 (Legacy)][1] of
  # global tables. We recommend using [Version 2019.11.21 (Current)][2]
  # when creating new global tables, as it provides greater flexibility,
  # higher efficiency and consumes less write capacity than 2017.11.29
  # (Legacy). To determine which version you are using, see [Determining
  # the version][3]. To update existing global tables from version
  # 2017.11.29 (Legacy) to version 2019.11.21 (Current), see [ Updating
  # global tables][4].
  #
  # If you want to add a new replica table to a global table, each of the
  # following conditions must be true:
  #
  # * The table must have the same primary key as all of the other
  #   replicas.
  #
  # * The table must have the same name as all of the other replicas.
  #
  # * The table must have DynamoDB Streams enabled, with the stream
  #   containing both the new and the old images of the item.
  #
  # * None of the replica tables in the global table can contain any data.
  #
  # If global secondary indexes are specified, then the following
  # conditions must also be met:
  #
  # * The global secondary indexes must have the same name.
  #
  # * The global secondary indexes must have the same hash key and sort
  #   key (if present).
  #
  # If local secondary indexes are specified, then the following
  # conditions must also be met:
  #
  # * The local secondary indexes must have the same name.
  #
  # * The local secondary indexes must have the same hash key and sort key
  #   (if present).
  #
  # Write capacity settings should be set consistently across your replica
  # tables and secondary indexes. DynamoDB strongly recommends enabling
  # auto scaling to manage the write capacity settings for all of your
  # global tables replicas and indexes.
  #
  #  If you prefer to manage write capacity settings manually, you should
  # provision equal replicated write capacity units to your replica
  # tables. You should also provision equal replicated write capacity
  # units to matching secondary indexes across your global table.
  #
  #
  #
  # [1]: https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/globaltables.V1.html
  # [2]: https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/globaltables.V2.html
  # [3]: https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/globaltables.DetermineVersion.html
  # [4]: https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/V2globaltables_upgrade.html
  #
  # @example Request syntax with placeholder values
  #
  #   resp = client.create_global_table({
  #   global_table_name: "TableName", # required
  #   replication_group: [ # required
  #   {
  #   region_name: "RegionName",
  #   },
  #   ],
  #   })
  # @example Response structure
  #
  #   resp.global_table_description.replication_group #=> Array
  #   resp.global_table_description.replication_group[0].region_name #=> String
  #   resp.global_table_description.replication_group[0].replica_status #=> String, one of "CREATING", "CREATION_FAILED", "UPDATING", "DELETING", "ACTIVE", "REGION_DISABLED", "INACCESSIBLE_ENCRYPTION_CREDENTIALS"
  #   resp.global_table_description.replication_group[0].replica_status_description #=> String
  #   resp.global_table_description.replication_group[0].replica_status_percent_progress #=> String
  #   resp.global_table_description.replication_group[0].kms_master_key_id #=> String
  #   resp.global_table_description.replication_group[0].provisioned_throughput_override.read_capacity_units #=> Integer
  #   resp.global_table_description.replication_group[0].global_secondary_indexes #=> Array
  #   resp.global_table_description.replication_group[0].global_secondary_indexes[0].index_name #=> String
  #   resp.global_table_description.replication_group[0].global_secondary_indexes[0].provisioned_throughput_override.read_capacity_units #=> Integer
  #   resp.global_table_description.replication_group[0].replica_inaccessible_date_time #=> Time
  #   resp.global_table_description.replication_group[0].replica_table_class_summary.table_class #=> String, one of "STANDARD", "STANDARD_INFREQUENT_ACCESS"
  #   resp.global_table_description.replication_group[0].replica_table_class_summary.last_update_date_time #=> Time
  #   resp.global_table_description.global_table_arn #=> String
  #   resp.global_table_description.creation_date_time #=> Time
  #   resp.global_table_description.global_table_status #=> String, one of "CREATING", "ACTIVE", "DELETING", "UPDATING"
  #   resp.global_table_description.global_table_name #=> String
  # @option params
  # @option params
  # @overload create_global_table
  # @param params [Hash] ({})
  # @return [Types::CreateGlobalTableOutput] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::CreateGlobalTableOutput#global_table_description #global_table_description} => Types::GlobalTableDescription
  # @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/CreateGlobalTable AWS API Documentation
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client.rb#1230
  def create_global_table(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # The `CreateTable` operation adds a new table to your account. In an
  # Amazon Web Services account, table names must be unique within each
  # Region. That is, you can have two tables with same name if you create
  # the tables in different Regions.
  #
  # `CreateTable` is an asynchronous operation. Upon receiving a
  # `CreateTable` request, DynamoDB immediately returns a response with a
  # `TableStatus` of `CREATING`. After the table is created, DynamoDB sets
  # the `TableStatus` to `ACTIVE`. You can perform read and write
  # operations only on an `ACTIVE` table.
  #
  # You can optionally define secondary indexes on the new table, as part
  # of the `CreateTable` operation. If you want to create multiple tables
  # with secondary indexes on them, you must create the tables
  # sequentially. Only one table with secondary indexes can be in the
  # `CREATING` state at any given time.
  #
  # You can use the `DescribeTable` action to check the table status.
  #
  # @example Example: To create a table
  #
  #   # This example creates a table named Music.
  #
  #   resp = client.create_table({
  #   attribute_definitions: [
  #   {
  #   attribute_name: "Artist",
  #   attribute_type: "S",
  #   },
  #   {
  #   attribute_name: "SongTitle",
  #   attribute_type: "S",
  #   },
  #   ],
  #   key_schema: [
  #   {
  #   attribute_name: "Artist",
  #   key_type: "HASH",
  #   },
  #   {
  #   attribute_name: "SongTitle",
  #   key_type: "RANGE",
  #   },
  #   ],
  #   provisioned_throughput: {
  #   read_capacity_units: 5,
  #   write_capacity_units: 5,
  #   },
  #   table_name: "Music",
  #   })
  #
  #   resp.to_h outputs the following:
  #   {
  #   table_description: {
  #   attribute_definitions: [
  #   {
  #   attribute_name: "Artist",
  #   attribute_type: "S",
  #   },
  #   {
  #   attribute_name: "SongTitle",
  #   attribute_type: "S",
  #   },
  #   ],
  #   creation_date_time: Time.parse("1421866952.062"),
  #   item_count: 0,
  #   key_schema: [
  #   {
  #   attribute_name: "Artist",
  #   key_type: "HASH",
  #   },
  #   {
  #   attribute_name: "SongTitle",
  #   key_type: "RANGE",
  #   },
  #   ],
  #   provisioned_throughput: {
  #   read_capacity_units: 5,
  #   write_capacity_units: 5,
  #   },
  #   table_name: "Music",
  #   table_size_bytes: 0,
  #   table_status: "CREATING",
  #   },
  #   }
  # @example Request syntax with placeholder values
  #
  #   resp = client.create_table({
  #   attribute_definitions: [ # required
  #   {
  #   attribute_name: "KeySchemaAttributeName", # required
  #   attribute_type: "S", # required, accepts S, N, B
  #   },
  #   ],
  #   table_name: "TableName", # required
  #   key_schema: [ # required
  #   {
  #   attribute_name: "KeySchemaAttributeName", # required
  #   key_type: "HASH", # required, accepts HASH, RANGE
  #   },
  #   ],
  #   local_secondary_indexes: [
  #   {
  #   index_name: "IndexName", # required
  #   key_schema: [ # required
  #   {
  #   attribute_name: "KeySchemaAttributeName", # required
  #   key_type: "HASH", # required, accepts HASH, RANGE
  #   },
  #   ],
  #   projection: { # required
  #   projection_type: "ALL", # accepts ALL, KEYS_ONLY, INCLUDE
  #   non_key_attributes: ["NonKeyAttributeName"],
  #   },
  #   },
  #   ],
  #   global_secondary_indexes: [
  #   {
  #   index_name: "IndexName", # required
  #   key_schema: [ # required
  #   {
  #   attribute_name: "KeySchemaAttributeName", # required
  #   key_type: "HASH", # required, accepts HASH, RANGE
  #   },
  #   ],
  #   projection: { # required
  #   projection_type: "ALL", # accepts ALL, KEYS_ONLY, INCLUDE
  #   non_key_attributes: ["NonKeyAttributeName"],
  #   },
  #   provisioned_throughput: {
  #   read_capacity_units: 1, # required
  #   write_capacity_units: 1, # required
  #   },
  #   },
  #   ],
  #   billing_mode: "PROVISIONED", # accepts PROVISIONED, PAY_PER_REQUEST
  #   provisioned_throughput: {
  #   read_capacity_units: 1, # required
  #   write_capacity_units: 1, # required
  #   },
  #   stream_specification: {
  #   stream_enabled: false, # required
  #   stream_view_type: "NEW_IMAGE", # accepts NEW_IMAGE, OLD_IMAGE, NEW_AND_OLD_IMAGES, KEYS_ONLY
  #   },
  #   sse_specification: {
  #   enabled: false,
  #   sse_type: "AES256", # accepts AES256, KMS
  #   kms_master_key_id: "KMSMasterKeyId",
  #   },
  #   tags: [
  #   {
  #   key: "TagKeyString", # required
  #   value: "TagValueString", # required
  #   },
  #   ],
  #   table_class: "STANDARD", # accepts STANDARD, STANDARD_INFREQUENT_ACCESS
  #   deletion_protection_enabled: false,
  #   })
  # @example Response structure
  #
  #   resp.table_description.attribute_definitions #=> Array
  #   resp.table_description.attribute_definitions[0].attribute_name #=> String
  #   resp.table_description.attribute_definitions[0].attribute_type #=> String, one of "S", "N", "B"
  #   resp.table_description.table_name #=> String
  #   resp.table_description.key_schema #=> Array
  #   resp.table_description.key_schema[0].attribute_name #=> String
  #   resp.table_description.key_schema[0].key_type #=> String, one of "HASH", "RANGE"
  #   resp.table_description.table_status #=> String, one of "CREATING", "UPDATING", "DELETING", "ACTIVE", "INACCESSIBLE_ENCRYPTION_CREDENTIALS", "ARCHIVING", "ARCHIVED"
  #   resp.table_description.creation_date_time #=> Time
  #   resp.table_description.provisioned_throughput.last_increase_date_time #=> Time
  #   resp.table_description.provisioned_throughput.last_decrease_date_time #=> Time
  #   resp.table_description.provisioned_throughput.number_of_decreases_today #=> Integer
  #   resp.table_description.provisioned_throughput.read_capacity_units #=> Integer
  #   resp.table_description.provisioned_throughput.write_capacity_units #=> Integer
  #   resp.table_description.table_size_bytes #=> Integer
  #   resp.table_description.item_count #=> Integer
  #   resp.table_description.table_arn #=> String
  #   resp.table_description.table_id #=> String
  #   resp.table_description.billing_mode_summary.billing_mode #=> String, one of "PROVISIONED", "PAY_PER_REQUEST"
  #   resp.table_description.billing_mode_summary.last_update_to_pay_per_request_date_time #=> Time
  #   resp.table_description.local_secondary_indexes #=> Array
  #   resp.table_description.local_secondary_indexes[0].index_name #=> String
  #   resp.table_description.local_secondary_indexes[0].key_schema #=> Array
  #   resp.table_description.local_secondary_indexes[0].key_schema[0].attribute_name #=> String
  #   resp.table_description.local_secondary_indexes[0].key_schema[0].key_type #=> String, one of "HASH", "RANGE"
  #   resp.table_description.local_secondary_indexes[0].projection.projection_type #=> String, one of "ALL", "KEYS_ONLY", "INCLUDE"
  #   resp.table_description.local_secondary_indexes[0].projection.non_key_attributes #=> Array
  #   resp.table_description.local_secondary_indexes[0].projection.non_key_attributes[0] #=> String
  #   resp.table_description.local_secondary_indexes[0].index_size_bytes #=> Integer
  #   resp.table_description.local_secondary_indexes[0].item_count #=> Integer
  #   resp.table_description.local_secondary_indexes[0].index_arn #=> String
  #   resp.table_description.global_secondary_indexes #=> Array
  #   resp.table_description.global_secondary_indexes[0].index_name #=> String
  #   resp.table_description.global_secondary_indexes[0].key_schema #=> Array
  #   resp.table_description.global_secondary_indexes[0].key_schema[0].attribute_name #=> String
  #   resp.table_description.global_secondary_indexes[0].key_schema[0].key_type #=> String, one of "HASH", "RANGE"
  #   resp.table_description.global_secondary_indexes[0].projection.projection_type #=> String, one of "ALL", "KEYS_ONLY", "INCLUDE"
  #   resp.table_description.global_secondary_indexes[0].projection.non_key_attributes #=> Array
  #   resp.table_description.global_secondary_indexes[0].projection.non_key_attributes[0] #=> String
  #   resp.table_description.global_secondary_indexes[0].index_status #=> String, one of "CREATING", "UPDATING", "DELETING", "ACTIVE"
  #   resp.table_description.global_secondary_indexes[0].backfilling #=> Boolean
  #   resp.table_description.global_secondary_indexes[0].provisioned_throughput.last_increase_date_time #=> Time
  #   resp.table_description.global_secondary_indexes[0].provisioned_throughput.last_decrease_date_time #=> Time
  #   resp.table_description.global_secondary_indexes[0].provisioned_throughput.number_of_decreases_today #=> Integer
  #   resp.table_description.global_secondary_indexes[0].provisioned_throughput.read_capacity_units #=> Integer
  #   resp.table_description.global_secondary_indexes[0].provisioned_throughput.write_capacity_units #=> Integer
  #   resp.table_description.global_secondary_indexes[0].index_size_bytes #=> Integer
  #   resp.table_description.global_secondary_indexes[0].item_count #=> Integer
  #   resp.table_description.global_secondary_indexes[0].index_arn #=> String
  #   resp.table_description.stream_specification.stream_enabled #=> Boolean
  #   resp.table_description.stream_specification.stream_view_type #=> String, one of "NEW_IMAGE", "OLD_IMAGE", "NEW_AND_OLD_IMAGES", "KEYS_ONLY"
  #   resp.table_description.latest_stream_label #=> String
  #   resp.table_description.latest_stream_arn #=> String
  #   resp.table_description.global_table_version #=> String
  #   resp.table_description.replicas #=> Array
  #   resp.table_description.replicas[0].region_name #=> String
  #   resp.table_description.replicas[0].replica_status #=> String, one of "CREATING", "CREATION_FAILED", "UPDATING", "DELETING", "ACTIVE", "REGION_DISABLED", "INACCESSIBLE_ENCRYPTION_CREDENTIALS"
  #   resp.table_description.replicas[0].replica_status_description #=> String
  #   resp.table_description.replicas[0].replica_status_percent_progress #=> String
  #   resp.table_description.replicas[0].kms_master_key_id #=> String
  #   resp.table_description.replicas[0].provisioned_throughput_override.read_capacity_units #=> Integer
  #   resp.table_description.replicas[0].global_secondary_indexes #=> Array
  #   resp.table_description.replicas[0].global_secondary_indexes[0].index_name #=> String
  #   resp.table_description.replicas[0].global_secondary_indexes[0].provisioned_throughput_override.read_capacity_units #=> Integer
  #   resp.table_description.replicas[0].replica_inaccessible_date_time #=> Time
  #   resp.table_description.replicas[0].replica_table_class_summary.table_class #=> String, one of "STANDARD", "STANDARD_INFREQUENT_ACCESS"
  #   resp.table_description.replicas[0].replica_table_class_summary.last_update_date_time #=> Time
  #   resp.table_description.restore_summary.source_backup_arn #=> String
  #   resp.table_description.restore_summary.source_table_arn #=> String
  #   resp.table_description.restore_summary.restore_date_time #=> Time
  #   resp.table_description.restore_summary.restore_in_progress #=> Boolean
  #   resp.table_description.sse_description.status #=> String, one of "ENABLING", "ENABLED", "DISABLING", "DISABLED", "UPDATING"
  #   resp.table_description.sse_description.sse_type #=> String, one of "AES256", "KMS"
  #   resp.table_description.sse_description.kms_master_key_arn #=> String
  #   resp.table_description.sse_description.inaccessible_encryption_date_time #=> Time
  #   resp.table_description.archival_summary.archival_date_time #=> Time
  #   resp.table_description.archival_summary.archival_reason #=> String
  #   resp.table_description.archival_summary.archival_backup_arn #=> String
  #   resp.table_description.table_class_summary.table_class #=> String, one of "STANDARD", "STANDARD_INFREQUENT_ACCESS"
  #   resp.table_description.table_class_summary.last_update_date_time #=> Time
  #   resp.table_description.deletion_protection_enabled #=> Boolean
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @overload create_table
  # @param params [Hash] ({})
  # @return [Types::CreateTableOutput] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::CreateTableOutput#table_description #table_description} => Types::TableDescription
  # @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/CreateTable AWS API Documentation
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client.rb#1697
  def create_table(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Deletes an existing backup of a table.
  #
  # You can call `DeleteBackup` at a maximum rate of 10 times per second.
  #
  # @example Request syntax with placeholder values
  #
  #   resp = client.delete_backup({
  #   backup_arn: "BackupArn", # required
  #   })
  # @example Response structure
  #
  #   resp.backup_description.backup_details.backup_arn #=> String
  #   resp.backup_description.backup_details.backup_name #=> String
  #   resp.backup_description.backup_details.backup_size_bytes #=> Integer
  #   resp.backup_description.backup_details.backup_status #=> String, one of "CREATING", "DELETED", "AVAILABLE"
  #   resp.backup_description.backup_details.backup_type #=> String, one of "USER", "SYSTEM", "AWS_BACKUP"
  #   resp.backup_description.backup_details.backup_creation_date_time #=> Time
  #   resp.backup_description.backup_details.backup_expiry_date_time #=> Time
  #   resp.backup_description.source_table_details.table_name #=> String
  #   resp.backup_description.source_table_details.table_id #=> String
  #   resp.backup_description.source_table_details.table_arn #=> String
  #   resp.backup_description.source_table_details.table_size_bytes #=> Integer
  #   resp.backup_description.source_table_details.key_schema #=> Array
  #   resp.backup_description.source_table_details.key_schema[0].attribute_name #=> String
  #   resp.backup_description.source_table_details.key_schema[0].key_type #=> String, one of "HASH", "RANGE"
  #   resp.backup_description.source_table_details.table_creation_date_time #=> Time
  #   resp.backup_description.source_table_details.provisioned_throughput.read_capacity_units #=> Integer
  #   resp.backup_description.source_table_details.provisioned_throughput.write_capacity_units #=> Integer
  #   resp.backup_description.source_table_details.item_count #=> Integer
  #   resp.backup_description.source_table_details.billing_mode #=> String, one of "PROVISIONED", "PAY_PER_REQUEST"
  #   resp.backup_description.source_table_feature_details.local_secondary_indexes #=> Array
  #   resp.backup_description.source_table_feature_details.local_secondary_indexes[0].index_name #=> String
  #   resp.backup_description.source_table_feature_details.local_secondary_indexes[0].key_schema #=> Array
  #   resp.backup_description.source_table_feature_details.local_secondary_indexes[0].key_schema[0].attribute_name #=> String
  #   resp.backup_description.source_table_feature_details.local_secondary_indexes[0].key_schema[0].key_type #=> String, one of "HASH", "RANGE"
  #   resp.backup_description.source_table_feature_details.local_secondary_indexes[0].projection.projection_type #=> String, one of "ALL", "KEYS_ONLY", "INCLUDE"
  #   resp.backup_description.source_table_feature_details.local_secondary_indexes[0].projection.non_key_attributes #=> Array
  #   resp.backup_description.source_table_feature_details.local_secondary_indexes[0].projection.non_key_attributes[0] #=> String
  #   resp.backup_description.source_table_feature_details.global_secondary_indexes #=> Array
  #   resp.backup_description.source_table_feature_details.global_secondary_indexes[0].index_name #=> String
  #   resp.backup_description.source_table_feature_details.global_secondary_indexes[0].key_schema #=> Array
  #   resp.backup_description.source_table_feature_details.global_secondary_indexes[0].key_schema[0].attribute_name #=> String
  #   resp.backup_description.source_table_feature_details.global_secondary_indexes[0].key_schema[0].key_type #=> String, one of "HASH", "RANGE"
  #   resp.backup_description.source_table_feature_details.global_secondary_indexes[0].projection.projection_type #=> String, one of "ALL", "KEYS_ONLY", "INCLUDE"
  #   resp.backup_description.source_table_feature_details.global_secondary_indexes[0].projection.non_key_attributes #=> Array
  #   resp.backup_description.source_table_feature_details.global_secondary_indexes[0].projection.non_key_attributes[0] #=> String
  #   resp.backup_description.source_table_feature_details.global_secondary_indexes[0].provisioned_throughput.read_capacity_units #=> Integer
  #   resp.backup_description.source_table_feature_details.global_secondary_indexes[0].provisioned_throughput.write_capacity_units #=> Integer
  #   resp.backup_description.source_table_feature_details.stream_description.stream_enabled #=> Boolean
  #   resp.backup_description.source_table_feature_details.stream_description.stream_view_type #=> String, one of "NEW_IMAGE", "OLD_IMAGE", "NEW_AND_OLD_IMAGES", "KEYS_ONLY"
  #   resp.backup_description.source_table_feature_details.time_to_live_description.time_to_live_status #=> String, one of "ENABLING", "DISABLING", "ENABLED", "DISABLED"
  #   resp.backup_description.source_table_feature_details.time_to_live_description.attribute_name #=> String
  #   resp.backup_description.source_table_feature_details.sse_description.status #=> String, one of "ENABLING", "ENABLED", "DISABLING", "DISABLED", "UPDATING"
  #   resp.backup_description.source_table_feature_details.sse_description.sse_type #=> String, one of "AES256", "KMS"
  #   resp.backup_description.source_table_feature_details.sse_description.kms_master_key_arn #=> String
  #   resp.backup_description.source_table_feature_details.sse_description.inaccessible_encryption_date_time #=> Time
  # @option params
  # @overload delete_backup
  # @param params [Hash] ({})
  # @return [Types::DeleteBackupOutput] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::DeleteBackupOutput#backup_description #backup_description} => Types::BackupDescription
  # @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/DeleteBackup AWS API Documentation
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client.rb#1771
  def delete_backup(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Deletes a single item in a table by primary key. You can perform a
  # conditional delete operation that deletes the item if it exists, or if
  # it has an expected attribute value.
  #
  # In addition to deleting an item, you can also return the item's
  # attribute values in the same operation, using the `ReturnValues`
  # parameter.
  #
  # Unless you specify conditions, the `DeleteItem` is an idempotent
  # operation; running it multiple times on the same item or attribute
  # does *not* result in an error response.
  #
  # Conditional deletes are useful for deleting items only if specific
  # conditions are met. If those conditions are met, DynamoDB performs the
  # delete. Otherwise, the item is not deleted.
  #
  # @example Example: To delete an item
  #
  #   # This example deletes an item from the Music table.
  #
  #   resp = client.delete_item({
  #   key: {
  #   "Artist" => "No One You Know",
  #   "SongTitle" => "Scared of My Shadow",
  #   },
  #   table_name: "Music",
  #   })
  #
  #   resp.to_h outputs the following:
  #   {
  #   consumed_capacity: {
  #   capacity_units: 1,
  #   table_name: "Music",
  #   },
  #   }
  # @example Request syntax with placeholder values
  #
  #   resp = client.delete_item({
  #   table_name: "TableName", # required
  #   key: { # required
  #   "AttributeName" => "value", # value <Hash,Array,String,Numeric,Boolean,IO,Set,nil>
  #   },
  #   expected: {
  #   "AttributeName" => {
  #   value: "value", # value <Hash,Array,String,Numeric,Boolean,IO,Set,nil>
  #   exists: false,
  #   comparison_operator: "EQ", # accepts EQ, NE, IN, LE, LT, GE, GT, BETWEEN, NOT_NULL, NULL, CONTAINS, NOT_CONTAINS, BEGINS_WITH
  #   attribute_value_list: ["value"], # value <Hash,Array,String,Numeric,Boolean,IO,Set,nil>
  #   },
  #   },
  #   conditional_operator: "AND", # accepts AND, OR
  #   return_values: "NONE", # accepts NONE, ALL_OLD, UPDATED_OLD, ALL_NEW, UPDATED_NEW
  #   return_consumed_capacity: "INDEXES", # accepts INDEXES, TOTAL, NONE
  #   return_item_collection_metrics: "SIZE", # accepts SIZE, NONE
  #   condition_expression: "ConditionExpression",
  #   expression_attribute_names: {
  #   "ExpressionAttributeNameVariable" => "AttributeName",
  #   },
  #   expression_attribute_values: {
  #   "ExpressionAttributeValueVariable" => "value", # value <Hash,Array,String,Numeric,Boolean,IO,Set,nil>
  #   },
  #   return_values_on_condition_check_failure: "ALL_OLD", # accepts ALL_OLD, NONE
  #   })
  # @example Response structure
  #
  #   resp.attributes #=> Hash
  #   resp.attributes["AttributeName"] #=> <Hash,Array,String,Numeric,Boolean,IO,Set,nil>
  #   resp.consumed_capacity.table_name #=> String
  #   resp.consumed_capacity.capacity_units #=> Float
  #   resp.consumed_capacity.read_capacity_units #=> Float
  #   resp.consumed_capacity.write_capacity_units #=> Float
  #   resp.consumed_capacity.table.read_capacity_units #=> Float
  #   resp.consumed_capacity.table.write_capacity_units #=> Float
  #   resp.consumed_capacity.table.capacity_units #=> Float
  #   resp.consumed_capacity.local_secondary_indexes #=> Hash
  #   resp.consumed_capacity.local_secondary_indexes["IndexName"].read_capacity_units #=> Float
  #   resp.consumed_capacity.local_secondary_indexes["IndexName"].write_capacity_units #=> Float
  #   resp.consumed_capacity.local_secondary_indexes["IndexName"].capacity_units #=> Float
  #   resp.consumed_capacity.global_secondary_indexes #=> Hash
  #   resp.consumed_capacity.global_secondary_indexes["IndexName"].read_capacity_units #=> Float
  #   resp.consumed_capacity.global_secondary_indexes["IndexName"].write_capacity_units #=> Float
  #   resp.consumed_capacity.global_secondary_indexes["IndexName"].capacity_units #=> Float
  #   resp.item_collection_metrics.item_collection_key #=> Hash
  #   resp.item_collection_metrics.item_collection_key["AttributeName"] #=> <Hash,Array,String,Numeric,Boolean,IO,Set,nil>
  #   resp.item_collection_metrics.size_estimate_range_gb #=> Array
  #   resp.item_collection_metrics.size_estimate_range_gb[0] #=> Float
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @overload delete_item
  # @param params [Hash] ({})
  # @return [Types::DeleteItemOutput] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::DeleteItemOutput#attributes #attributes} => Hash&lt;String,Types::AttributeValue&gt;
  #   * {Types::DeleteItemOutput#consumed_capacity #consumed_capacity} => Types::ConsumedCapacity
  #   * {Types::DeleteItemOutput#item_collection_metrics #item_collection_metrics} => Types::ItemCollectionMetrics
  # @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/DeleteItem AWS API Documentation
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client.rb#2056
  def delete_item(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # The `DeleteTable` operation deletes a table and all of its items.
  # After a `DeleteTable` request, the specified table is in the
  # `DELETING` state until DynamoDB completes the deletion. If the table
  # is in the `ACTIVE` state, you can delete it. If a table is in
  # `CREATING` or `UPDATING` states, then DynamoDB returns a
  # `ResourceInUseException`. If the specified table does not exist,
  # DynamoDB returns a `ResourceNotFoundException`. If table is already in
  # the `DELETING` state, no error is returned.
  #
  # This operation only applies to [Version 2019.11.21 (Current)][1] of
  # global tables.
  #
  # <note markdown="1"> DynamoDB might continue to accept data read and write operations, such
  # as `GetItem` and `PutItem`, on a table in the `DELETING` state until
  # the table deletion is complete.
  #
  #  </note>
  #
  # When you delete a table, any indexes on that table are also deleted.
  #
  # If you have DynamoDB Streams enabled on the table, then the
  # corresponding stream on that table goes into the `DISABLED` state, and
  # the stream is automatically deleted after 24 hours.
  #
  # Use the `DescribeTable` action to check the status of the table.
  #
  #
  #
  # [1]: https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/globaltables.V2.html
  #
  # @example Example: To delete a table
  #
  #   # This example deletes the Music table.
  #
  #   resp = client.delete_table({
  #   table_name: "Music",
  #   })
  #
  #   resp.to_h outputs the following:
  #   {
  #   table_description: {
  #   item_count: 0,
  #   provisioned_throughput: {
  #   number_of_decreases_today: 1,
  #   read_capacity_units: 5,
  #   write_capacity_units: 5,
  #   },
  #   table_name: "Music",
  #   table_size_bytes: 0,
  #   table_status: "DELETING",
  #   },
  #   }
  # @example Request syntax with placeholder values
  #
  #   resp = client.delete_table({
  #   table_name: "TableName", # required
  #   })
  # @example Response structure
  #
  #   resp.table_description.attribute_definitions #=> Array
  #   resp.table_description.attribute_definitions[0].attribute_name #=> String
  #   resp.table_description.attribute_definitions[0].attribute_type #=> String, one of "S", "N", "B"
  #   resp.table_description.table_name #=> String
  #   resp.table_description.key_schema #=> Array
  #   resp.table_description.key_schema[0].attribute_name #=> String
  #   resp.table_description.key_schema[0].key_type #=> String, one of "HASH", "RANGE"
  #   resp.table_description.table_status #=> String, one of "CREATING", "UPDATING", "DELETING", "ACTIVE", "INACCESSIBLE_ENCRYPTION_CREDENTIALS", "ARCHIVING", "ARCHIVED"
  #   resp.table_description.creation_date_time #=> Time
  #   resp.table_description.provisioned_throughput.last_increase_date_time #=> Time
  #   resp.table_description.provisioned_throughput.last_decrease_date_time #=> Time
  #   resp.table_description.provisioned_throughput.number_of_decreases_today #=> Integer
  #   resp.table_description.provisioned_throughput.read_capacity_units #=> Integer
  #   resp.table_description.provisioned_throughput.write_capacity_units #=> Integer
  #   resp.table_description.table_size_bytes #=> Integer
  #   resp.table_description.item_count #=> Integer
  #   resp.table_description.table_arn #=> String
  #   resp.table_description.table_id #=> String
  #   resp.table_description.billing_mode_summary.billing_mode #=> String, one of "PROVISIONED", "PAY_PER_REQUEST"
  #   resp.table_description.billing_mode_summary.last_update_to_pay_per_request_date_time #=> Time
  #   resp.table_description.local_secondary_indexes #=> Array
  #   resp.table_description.local_secondary_indexes[0].index_name #=> String
  #   resp.table_description.local_secondary_indexes[0].key_schema #=> Array
  #   resp.table_description.local_secondary_indexes[0].key_schema[0].attribute_name #=> String
  #   resp.table_description.local_secondary_indexes[0].key_schema[0].key_type #=> String, one of "HASH", "RANGE"
  #   resp.table_description.local_secondary_indexes[0].projection.projection_type #=> String, one of "ALL", "KEYS_ONLY", "INCLUDE"
  #   resp.table_description.local_secondary_indexes[0].projection.non_key_attributes #=> Array
  #   resp.table_description.local_secondary_indexes[0].projection.non_key_attributes[0] #=> String
  #   resp.table_description.local_secondary_indexes[0].index_size_bytes #=> Integer
  #   resp.table_description.local_secondary_indexes[0].item_count #=> Integer
  #   resp.table_description.local_secondary_indexes[0].index_arn #=> String
  #   resp.table_description.global_secondary_indexes #=> Array
  #   resp.table_description.global_secondary_indexes[0].index_name #=> String
  #   resp.table_description.global_secondary_indexes[0].key_schema #=> Array
  #   resp.table_description.global_secondary_indexes[0].key_schema[0].attribute_name #=> String
  #   resp.table_description.global_secondary_indexes[0].key_schema[0].key_type #=> String, one of "HASH", "RANGE"
  #   resp.table_description.global_secondary_indexes[0].projection.projection_type #=> String, one of "ALL", "KEYS_ONLY", "INCLUDE"
  #   resp.table_description.global_secondary_indexes[0].projection.non_key_attributes #=> Array
  #   resp.table_description.global_secondary_indexes[0].projection.non_key_attributes[0] #=> String
  #   resp.table_description.global_secondary_indexes[0].index_status #=> String, one of "CREATING", "UPDATING", "DELETING", "ACTIVE"
  #   resp.table_description.global_secondary_indexes[0].backfilling #=> Boolean
  #   resp.table_description.global_secondary_indexes[0].provisioned_throughput.last_increase_date_time #=> Time
  #   resp.table_description.global_secondary_indexes[0].provisioned_throughput.last_decrease_date_time #=> Time
  #   resp.table_description.global_secondary_indexes[0].provisioned_throughput.number_of_decreases_today #=> Integer
  #   resp.table_description.global_secondary_indexes[0].provisioned_throughput.read_capacity_units #=> Integer
  #   resp.table_description.global_secondary_indexes[0].provisioned_throughput.write_capacity_units #=> Integer
  #   resp.table_description.global_secondary_indexes[0].index_size_bytes #=> Integer
  #   resp.table_description.global_secondary_indexes[0].item_count #=> Integer
  #   resp.table_description.global_secondary_indexes[0].index_arn #=> String
  #   resp.table_description.stream_specification.stream_enabled #=> Boolean
  #   resp.table_description.stream_specification.stream_view_type #=> String, one of "NEW_IMAGE", "OLD_IMAGE", "NEW_AND_OLD_IMAGES", "KEYS_ONLY"
  #   resp.table_description.latest_stream_label #=> String
  #   resp.table_description.latest_stream_arn #=> String
  #   resp.table_description.global_table_version #=> String
  #   resp.table_description.replicas #=> Array
  #   resp.table_description.replicas[0].region_name #=> String
  #   resp.table_description.replicas[0].replica_status #=> String, one of "CREATING", "CREATION_FAILED", "UPDATING", "DELETING", "ACTIVE", "REGION_DISABLED", "INACCESSIBLE_ENCRYPTION_CREDENTIALS"
  #   resp.table_description.replicas[0].replica_status_description #=> String
  #   resp.table_description.replicas[0].replica_status_percent_progress #=> String
  #   resp.table_description.replicas[0].kms_master_key_id #=> String
  #   resp.table_description.replicas[0].provisioned_throughput_override.read_capacity_units #=> Integer
  #   resp.table_description.replicas[0].global_secondary_indexes #=> Array
  #   resp.table_description.replicas[0].global_secondary_indexes[0].index_name #=> String
  #   resp.table_description.replicas[0].global_secondary_indexes[0].provisioned_throughput_override.read_capacity_units #=> Integer
  #   resp.table_description.replicas[0].replica_inaccessible_date_time #=> Time
  #   resp.table_description.replicas[0].replica_table_class_summary.table_class #=> String, one of "STANDARD", "STANDARD_INFREQUENT_ACCESS"
  #   resp.table_description.replicas[0].replica_table_class_summary.last_update_date_time #=> Time
  #   resp.table_description.restore_summary.source_backup_arn #=> String
  #   resp.table_description.restore_summary.source_table_arn #=> String
  #   resp.table_description.restore_summary.restore_date_time #=> Time
  #   resp.table_description.restore_summary.restore_in_progress #=> Boolean
  #   resp.table_description.sse_description.status #=> String, one of "ENABLING", "ENABLED", "DISABLING", "DISABLED", "UPDATING"
  #   resp.table_description.sse_description.sse_type #=> String, one of "AES256", "KMS"
  #   resp.table_description.sse_description.kms_master_key_arn #=> String
  #   resp.table_description.sse_description.inaccessible_encryption_date_time #=> Time
  #   resp.table_description.archival_summary.archival_date_time #=> Time
  #   resp.table_description.archival_summary.archival_reason #=> String
  #   resp.table_description.archival_summary.archival_backup_arn #=> String
  #   resp.table_description.table_class_summary.table_class #=> String, one of "STANDARD", "STANDARD_INFREQUENT_ACCESS"
  #   resp.table_description.table_class_summary.last_update_date_time #=> Time
  #   resp.table_description.deletion_protection_enabled #=> Boolean
  # @option params
  # @overload delete_table
  # @param params [Hash] ({})
  # @return [Types::DeleteTableOutput] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::DeleteTableOutput#table_description #table_description} => Types::TableDescription
  # @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/DeleteTable AWS API Documentation
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client.rb#2216
  def delete_table(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Describes an existing backup of a table.
  #
  # You can call `DescribeBackup` at a maximum rate of 10 times per
  # second.
  #
  # @example Request syntax with placeholder values
  #
  #   resp = client.describe_backup({
  #   backup_arn: "BackupArn", # required
  #   })
  # @example Response structure
  #
  #   resp.backup_description.backup_details.backup_arn #=> String
  #   resp.backup_description.backup_details.backup_name #=> String
  #   resp.backup_description.backup_details.backup_size_bytes #=> Integer
  #   resp.backup_description.backup_details.backup_status #=> String, one of "CREATING", "DELETED", "AVAILABLE"
  #   resp.backup_description.backup_details.backup_type #=> String, one of "USER", "SYSTEM", "AWS_BACKUP"
  #   resp.backup_description.backup_details.backup_creation_date_time #=> Time
  #   resp.backup_description.backup_details.backup_expiry_date_time #=> Time
  #   resp.backup_description.source_table_details.table_name #=> String
  #   resp.backup_description.source_table_details.table_id #=> String
  #   resp.backup_description.source_table_details.table_arn #=> String
  #   resp.backup_description.source_table_details.table_size_bytes #=> Integer
  #   resp.backup_description.source_table_details.key_schema #=> Array
  #   resp.backup_description.source_table_details.key_schema[0].attribute_name #=> String
  #   resp.backup_description.source_table_details.key_schema[0].key_type #=> String, one of "HASH", "RANGE"
  #   resp.backup_description.source_table_details.table_creation_date_time #=> Time
  #   resp.backup_description.source_table_details.provisioned_throughput.read_capacity_units #=> Integer
  #   resp.backup_description.source_table_details.provisioned_throughput.write_capacity_units #=> Integer
  #   resp.backup_description.source_table_details.item_count #=> Integer
  #   resp.backup_description.source_table_details.billing_mode #=> String, one of "PROVISIONED", "PAY_PER_REQUEST"
  #   resp.backup_description.source_table_feature_details.local_secondary_indexes #=> Array
  #   resp.backup_description.source_table_feature_details.local_secondary_indexes[0].index_name #=> String
  #   resp.backup_description.source_table_feature_details.local_secondary_indexes[0].key_schema #=> Array
  #   resp.backup_description.source_table_feature_details.local_secondary_indexes[0].key_schema[0].attribute_name #=> String
  #   resp.backup_description.source_table_feature_details.local_secondary_indexes[0].key_schema[0].key_type #=> String, one of "HASH", "RANGE"
  #   resp.backup_description.source_table_feature_details.local_secondary_indexes[0].projection.projection_type #=> String, one of "ALL", "KEYS_ONLY", "INCLUDE"
  #   resp.backup_description.source_table_feature_details.local_secondary_indexes[0].projection.non_key_attributes #=> Array
  #   resp.backup_description.source_table_feature_details.local_secondary_indexes[0].projection.non_key_attributes[0] #=> String
  #   resp.backup_description.source_table_feature_details.global_secondary_indexes #=> Array
  #   resp.backup_description.source_table_feature_details.global_secondary_indexes[0].index_name #=> String
  #   resp.backup_description.source_table_feature_details.global_secondary_indexes[0].key_schema #=> Array
  #   resp.backup_description.source_table_feature_details.global_secondary_indexes[0].key_schema[0].attribute_name #=> String
  #   resp.backup_description.source_table_feature_details.global_secondary_indexes[0].key_schema[0].key_type #=> String, one of "HASH", "RANGE"
  #   resp.backup_description.source_table_feature_details.global_secondary_indexes[0].projection.projection_type #=> String, one of "ALL", "KEYS_ONLY", "INCLUDE"
  #   resp.backup_description.source_table_feature_details.global_secondary_indexes[0].projection.non_key_attributes #=> Array
  #   resp.backup_description.source_table_feature_details.global_secondary_indexes[0].projection.non_key_attributes[0] #=> String
  #   resp.backup_description.source_table_feature_details.global_secondary_indexes[0].provisioned_throughput.read_capacity_units #=> Integer
  #   resp.backup_description.source_table_feature_details.global_secondary_indexes[0].provisioned_throughput.write_capacity_units #=> Integer
  #   resp.backup_description.source_table_feature_details.stream_description.stream_enabled #=> Boolean
  #   resp.backup_description.source_table_feature_details.stream_description.stream_view_type #=> String, one of "NEW_IMAGE", "OLD_IMAGE", "NEW_AND_OLD_IMAGES", "KEYS_ONLY"
  #   resp.backup_description.source_table_feature_details.time_to_live_description.time_to_live_status #=> String, one of "ENABLING", "DISABLING", "ENABLED", "DISABLED"
  #   resp.backup_description.source_table_feature_details.time_to_live_description.attribute_name #=> String
  #   resp.backup_description.source_table_feature_details.sse_description.status #=> String, one of "ENABLING", "ENABLED", "DISABLING", "DISABLED", "UPDATING"
  #   resp.backup_description.source_table_feature_details.sse_description.sse_type #=> String, one of "AES256", "KMS"
  #   resp.backup_description.source_table_feature_details.sse_description.kms_master_key_arn #=> String
  #   resp.backup_description.source_table_feature_details.sse_description.inaccessible_encryption_date_time #=> Time
  # @option params
  # @overload describe_backup
  # @param params [Hash] ({})
  # @return [Types::DescribeBackupOutput] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::DescribeBackupOutput#backup_description #backup_description} => Types::BackupDescription
  # @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/DescribeBackup AWS API Documentation
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client.rb#2291
  def describe_backup(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Checks the status of continuous backups and point in time recovery on
  # the specified table. Continuous backups are `ENABLED` on all tables at
  # table creation. If point in time recovery is enabled,
  # `PointInTimeRecoveryStatus` will be set to ENABLED.
  #
  # After continuous backups and point in time recovery are enabled, you
  # can restore to any point in time within `EarliestRestorableDateTime`
  # and `LatestRestorableDateTime`.
  #
  # `LatestRestorableDateTime` is typically 5 minutes before the current
  # time. You can restore your table to any point in time during the last
  # 35 days.
  #
  # You can call `DescribeContinuousBackups` at a maximum rate of 10 times
  # per second.
  #
  # @example Request syntax with placeholder values
  #
  #   resp = client.describe_continuous_backups({
  #   table_name: "TableName", # required
  #   })
  # @example Response structure
  #
  #   resp.continuous_backups_description.continuous_backups_status #=> String, one of "ENABLED", "DISABLED"
  #   resp.continuous_backups_description.point_in_time_recovery_description.point_in_time_recovery_status #=> String, one of "ENABLED", "DISABLED"
  #   resp.continuous_backups_description.point_in_time_recovery_description.earliest_restorable_date_time #=> Time
  #   resp.continuous_backups_description.point_in_time_recovery_description.latest_restorable_date_time #=> Time
  # @option params
  # @overload describe_continuous_backups
  # @param params [Hash] ({})
  # @return [Types::DescribeContinuousBackupsOutput] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::DescribeContinuousBackupsOutput#continuous_backups_description #continuous_backups_description} => Types::ContinuousBackupsDescription
  # @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/DescribeContinuousBackups AWS API Documentation
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client.rb#2337
  def describe_continuous_backups(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Returns information about contributor insights for a given table or
  # global secondary index.
  #
  # @example Request syntax with placeholder values
  #
  #   resp = client.describe_contributor_insights({
  #   table_name: "TableName", # required
  #   index_name: "IndexName",
  #   })
  # @example Response structure
  #
  #   resp.table_name #=> String
  #   resp.index_name #=> String
  #   resp.contributor_insights_rule_list #=> Array
  #   resp.contributor_insights_rule_list[0] #=> String
  #   resp.contributor_insights_status #=> String, one of "ENABLING", "ENABLED", "DISABLING", "DISABLED", "FAILED"
  #   resp.last_update_date_time #=> Time
  #   resp.failure_exception.exception_name #=> String
  #   resp.failure_exception.exception_description #=> String
  # @option params
  # @option params
  # @overload describe_contributor_insights
  # @param params [Hash] ({})
  # @return [Types::DescribeContributorInsightsOutput] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::DescribeContributorInsightsOutput#table_name #table_name} => String
  #   * {Types::DescribeContributorInsightsOutput#index_name #index_name} => String
  #   * {Types::DescribeContributorInsightsOutput#contributor_insights_rule_list #contributor_insights_rule_list} => Array&lt;String&gt;
  #   * {Types::DescribeContributorInsightsOutput#contributor_insights_status #contributor_insights_status} => String
  #   * {Types::DescribeContributorInsightsOutput#last_update_date_time #last_update_date_time} => Time
  #   * {Types::DescribeContributorInsightsOutput#failure_exception #failure_exception} => Types::FailureException
  # @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/DescribeContributorInsights AWS API Documentation
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client.rb#2382
  def describe_contributor_insights(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Returns the regional endpoint information. For more information on
  # policy permissions, please see [Internetwork traffic privacy][1].
  #
  #
  #
  # [1]: https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/inter-network-traffic-privacy.html#inter-network-traffic-DescribeEndpoints
  #
  # @example Response structure
  #
  #   resp.endpoints #=> Array
  #   resp.endpoints[0].address #=> String
  #   resp.endpoints[0].cache_period_in_minutes #=> Integer
  # @overload describe_endpoints
  # @param params [Hash] ({})
  # @return [Types::DescribeEndpointsResponse] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::DescribeEndpointsResponse#endpoints #endpoints} => Array&lt;Types::Endpoint&gt;
  # @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/DescribeEndpoints AWS API Documentation
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client.rb#2408
  def describe_endpoints(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Describes an existing table export.
  #
  # @example Request syntax with placeholder values
  #
  #   resp = client.describe_export({
  #   export_arn: "ExportArn", # required
  #   })
  # @example Response structure
  #
  #   resp.export_description.export_arn #=> String
  #   resp.export_description.export_status #=> String, one of "IN_PROGRESS", "COMPLETED", "FAILED"
  #   resp.export_description.start_time #=> Time
  #   resp.export_description.end_time #=> Time
  #   resp.export_description.export_manifest #=> String
  #   resp.export_description.table_arn #=> String
  #   resp.export_description.table_id #=> String
  #   resp.export_description.export_time #=> Time
  #   resp.export_description.client_token #=> String
  #   resp.export_description.s3_bucket #=> String
  #   resp.export_description.s3_bucket_owner #=> String
  #   resp.export_description.s3_prefix #=> String
  #   resp.export_description.s3_sse_algorithm #=> String, one of "AES256", "KMS"
  #   resp.export_description.s3_sse_kms_key_id #=> String
  #   resp.export_description.failure_code #=> String
  #   resp.export_description.failure_message #=> String
  #   resp.export_description.export_format #=> String, one of "DYNAMODB_JSON", "ION"
  #   resp.export_description.billed_size_bytes #=> Integer
  #   resp.export_description.item_count #=> Integer
  #   resp.export_description.export_type #=> String, one of "FULL_EXPORT", "INCREMENTAL_EXPORT"
  #   resp.export_description.incremental_export_specification.export_from_time #=> Time
  #   resp.export_description.incremental_export_specification.export_to_time #=> Time
  #   resp.export_description.incremental_export_specification.export_view_type #=> String, one of "NEW_IMAGE", "NEW_AND_OLD_IMAGES"
  # @option params
  # @overload describe_export
  # @param params [Hash] ({})
  # @return [Types::DescribeExportOutput] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::DescribeExportOutput#export_description #export_description} => Types::ExportDescription
  # @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/DescribeExport AWS API Documentation
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client.rb#2458
  def describe_export(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Returns information about the specified global table.
  #
  # This operation only applies to [Version 2017.11.29 (Legacy)][1] of
  # global tables. We recommend using [Version 2019.11.21 (Current)][2]
  # when creating new global tables, as it provides greater flexibility,
  # higher efficiency and consumes less write capacity than 2017.11.29
  # (Legacy). To determine which version you are using, see [Determining
  # the version][3]. To update existing global tables from version
  # 2017.11.29 (Legacy) to version 2019.11.21 (Current), see [ Updating
  # global tables][4].
  #
  #
  #
  # [1]: https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/globaltables.V1.html
  # [2]: https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/globaltables.V2.html
  # [3]: https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/globaltables.DetermineVersion.html
  # [4]: https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/V2globaltables_upgrade.html
  #
  # @example Request syntax with placeholder values
  #
  #   resp = client.describe_global_table({
  #   global_table_name: "TableName", # required
  #   })
  # @example Response structure
  #
  #   resp.global_table_description.replication_group #=> Array
  #   resp.global_table_description.replication_group[0].region_name #=> String
  #   resp.global_table_description.replication_group[0].replica_status #=> String, one of "CREATING", "CREATION_FAILED", "UPDATING", "DELETING", "ACTIVE", "REGION_DISABLED", "INACCESSIBLE_ENCRYPTION_CREDENTIALS"
  #   resp.global_table_description.replication_group[0].replica_status_description #=> String
  #   resp.global_table_description.replication_group[0].replica_status_percent_progress #=> String
  #   resp.global_table_description.replication_group[0].kms_master_key_id #=> String
  #   resp.global_table_description.replication_group[0].provisioned_throughput_override.read_capacity_units #=> Integer
  #   resp.global_table_description.replication_group[0].global_secondary_indexes #=> Array
  #   resp.global_table_description.replication_group[0].global_secondary_indexes[0].index_name #=> String
  #   resp.global_table_description.replication_group[0].global_secondary_indexes[0].provisioned_throughput_override.read_capacity_units #=> Integer
  #   resp.global_table_description.replication_group[0].replica_inaccessible_date_time #=> Time
  #   resp.global_table_description.replication_group[0].replica_table_class_summary.table_class #=> String, one of "STANDARD", "STANDARD_INFREQUENT_ACCESS"
  #   resp.global_table_description.replication_group[0].replica_table_class_summary.last_update_date_time #=> Time
  #   resp.global_table_description.global_table_arn #=> String
  #   resp.global_table_description.creation_date_time #=> Time
  #   resp.global_table_description.global_table_status #=> String, one of "CREATING", "ACTIVE", "DELETING", "UPDATING"
  #   resp.global_table_description.global_table_name #=> String
  # @option params
  # @overload describe_global_table
  # @param params [Hash] ({})
  # @return [Types::DescribeGlobalTableOutput] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::DescribeGlobalTableOutput#global_table_description #global_table_description} => Types::GlobalTableDescription
  # @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/DescribeGlobalTable AWS API Documentation
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client.rb#2518
  def describe_global_table(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Describes Region-specific settings for a global table.
  #
  # This operation only applies to [Version 2017.11.29 (Legacy)][1] of
  # global tables. We recommend using [Version 2019.11.21 (Current)][2]
  # when creating new global tables, as it provides greater flexibility,
  # higher efficiency and consumes less write capacity than 2017.11.29
  # (Legacy). To determine which version you are using, see [Determining
  # the version][3]. To update existing global tables from version
  # 2017.11.29 (Legacy) to version 2019.11.21 (Current), see [ Updating
  # global tables][4].
  #
  #
  #
  # [1]: https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/globaltables.V1.html
  # [2]: https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/globaltables.V2.html
  # [3]: https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/globaltables.DetermineVersion.html
  # [4]: https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/V2globaltables_upgrade.html
  #
  # @example Request syntax with placeholder values
  #
  #   resp = client.describe_global_table_settings({
  #   global_table_name: "TableName", # required
  #   })
  # @example Response structure
  #
  #   resp.global_table_name #=> String
  #   resp.replica_settings #=> Array
  #   resp.replica_settings[0].region_name #=> String
  #   resp.replica_settings[0].replica_status #=> String, one of "CREATING", "CREATION_FAILED", "UPDATING", "DELETING", "ACTIVE", "REGION_DISABLED", "INACCESSIBLE_ENCRYPTION_CREDENTIALS"
  #   resp.replica_settings[0].replica_billing_mode_summary.billing_mode #=> String, one of "PROVISIONED", "PAY_PER_REQUEST"
  #   resp.replica_settings[0].replica_billing_mode_summary.last_update_to_pay_per_request_date_time #=> Time
  #   resp.replica_settings[0].replica_provisioned_read_capacity_units #=> Integer
  #   resp.replica_settings[0].replica_provisioned_read_capacity_auto_scaling_settings.minimum_units #=> Integer
  #   resp.replica_settings[0].replica_provisioned_read_capacity_auto_scaling_settings.maximum_units #=> Integer
  #   resp.replica_settings[0].replica_provisioned_read_capacity_auto_scaling_settings.auto_scaling_disabled #=> Boolean
  #   resp.replica_settings[0].replica_provisioned_read_capacity_auto_scaling_settings.auto_scaling_role_arn #=> String
  #   resp.replica_settings[0].replica_provisioned_read_capacity_auto_scaling_settings.scaling_policies #=> Array
  #   resp.replica_settings[0].replica_provisioned_read_capacity_auto_scaling_settings.scaling_policies[0].policy_name #=> String
  #   resp.replica_settings[0].replica_provisioned_read_capacity_auto_scaling_settings.scaling_policies[0].target_tracking_scaling_policy_configuration.disable_scale_in #=> Boolean
  #   resp.replica_settings[0].replica_provisioned_read_capacity_auto_scaling_settings.scaling_policies[0].target_tracking_scaling_policy_configuration.scale_in_cooldown #=> Integer
  #   resp.replica_settings[0].replica_provisioned_read_capacity_auto_scaling_settings.scaling_policies[0].target_tracking_scaling_policy_configuration.scale_out_cooldown #=> Integer
  #   resp.replica_settings[0].replica_provisioned_read_capacity_auto_scaling_settings.scaling_policies[0].target_tracking_scaling_policy_configuration.target_value #=> Float
  #   resp.replica_settings[0].replica_provisioned_write_capacity_units #=> Integer
  #   resp.replica_settings[0].replica_provisioned_write_capacity_auto_scaling_settings.minimum_units #=> Integer
  #   resp.replica_settings[0].replica_provisioned_write_capacity_auto_scaling_settings.maximum_units #=> Integer
  #   resp.replica_settings[0].replica_provisioned_write_capacity_auto_scaling_settings.auto_scaling_disabled #=> Boolean
  #   resp.replica_settings[0].replica_provisioned_write_capacity_auto_scaling_settings.auto_scaling_role_arn #=> String
  #   resp.replica_settings[0].replica_provisioned_write_capacity_auto_scaling_settings.scaling_policies #=> Array
  #   resp.replica_settings[0].replica_provisioned_write_capacity_auto_scaling_settings.scaling_policies[0].policy_name #=> String
  #   resp.replica_settings[0].replica_provisioned_write_capacity_auto_scaling_settings.scaling_policies[0].target_tracking_scaling_policy_configuration.disable_scale_in #=> Boolean
  #   resp.replica_settings[0].replica_provisioned_write_capacity_auto_scaling_settings.scaling_policies[0].target_tracking_scaling_policy_configuration.scale_in_cooldown #=> Integer
  #   resp.replica_settings[0].replica_provisioned_write_capacity_auto_scaling_settings.scaling_policies[0].target_tracking_scaling_policy_configuration.scale_out_cooldown #=> Integer
  #   resp.replica_settings[0].replica_provisioned_write_capacity_auto_scaling_settings.scaling_policies[0].target_tracking_scaling_policy_configuration.target_value #=> Float
  #   resp.replica_settings[0].replica_global_secondary_index_settings #=> Array
  #   resp.replica_settings[0].replica_global_secondary_index_settings[0].index_name #=> String
  #   resp.replica_settings[0].replica_global_secondary_index_settings[0].index_status #=> String, one of "CREATING", "UPDATING", "DELETING", "ACTIVE"
  #   resp.replica_settings[0].replica_global_secondary_index_settings[0].provisioned_read_capacity_units #=> Integer
  #   resp.replica_settings[0].replica_global_secondary_index_settings[0].provisioned_read_capacity_auto_scaling_settings.minimum_units #=> Integer
  #   resp.replica_settings[0].replica_global_secondary_index_settings[0].provisioned_read_capacity_auto_scaling_settings.maximum_units #=> Integer
  #   resp.replica_settings[0].replica_global_secondary_index_settings[0].provisioned_read_capacity_auto_scaling_settings.auto_scaling_disabled #=> Boolean
  #   resp.replica_settings[0].replica_global_secondary_index_settings[0].provisioned_read_capacity_auto_scaling_settings.auto_scaling_role_arn #=> String
  #   resp.replica_settings[0].replica_global_secondary_index_settings[0].provisioned_read_capacity_auto_scaling_settings.scaling_policies #=> Array
  #   resp.replica_settings[0].replica_global_secondary_index_settings[0].provisioned_read_capacity_auto_scaling_settings.scaling_policies[0].policy_name #=> String
  #   resp.replica_settings[0].replica_global_secondary_index_settings[0].provisioned_read_capacity_auto_scaling_settings.scaling_policies[0].target_tracking_scaling_policy_configuration.disable_scale_in #=> Boolean
  #   resp.replica_settings[0].replica_global_secondary_index_settings[0].provisioned_read_capacity_auto_scaling_settings.scaling_policies[0].target_tracking_scaling_policy_configuration.scale_in_cooldown #=> Integer
  #   resp.replica_settings[0].replica_global_secondary_index_settings[0].provisioned_read_capacity_auto_scaling_settings.scaling_policies[0].target_tracking_scaling_policy_configuration.scale_out_cooldown #=> Integer
  #   resp.replica_settings[0].replica_global_secondary_index_settings[0].provisioned_read_capacity_auto_scaling_settings.scaling_policies[0].target_tracking_scaling_policy_configuration.target_value #=> Float
  #   resp.replica_settings[0].replica_global_secondary_index_settings[0].provisioned_write_capacity_units #=> Integer
  #   resp.replica_settings[0].replica_global_secondary_index_settings[0].provisioned_write_capacity_auto_scaling_settings.minimum_units #=> Integer
  #   resp.replica_settings[0].replica_global_secondary_index_settings[0].provisioned_write_capacity_auto_scaling_settings.maximum_units #=> Integer
  #   resp.replica_settings[0].replica_global_secondary_index_settings[0].provisioned_write_capacity_auto_scaling_settings.auto_scaling_disabled #=> Boolean
  #   resp.replica_settings[0].replica_global_secondary_index_settings[0].provisioned_write_capacity_auto_scaling_settings.auto_scaling_role_arn #=> String
  #   resp.replica_settings[0].replica_global_secondary_index_settings[0].provisioned_write_capacity_auto_scaling_settings.scaling_policies #=> Array
  #   resp.replica_settings[0].replica_global_secondary_index_settings[0].provisioned_write_capacity_auto_scaling_settings.scaling_policies[0].policy_name #=> String
  #   resp.replica_settings[0].replica_global_secondary_index_settings[0].provisioned_write_capacity_auto_scaling_settings.scaling_policies[0].target_tracking_scaling_policy_configuration.disable_scale_in #=> Boolean
  #   resp.replica_settings[0].replica_global_secondary_index_settings[0].provisioned_write_capacity_auto_scaling_settings.scaling_policies[0].target_tracking_scaling_policy_configuration.scale_in_cooldown #=> Integer
  #   resp.replica_settings[0].replica_global_secondary_index_settings[0].provisioned_write_capacity_auto_scaling_settings.scaling_policies[0].target_tracking_scaling_policy_configuration.scale_out_cooldown #=> Integer
  #   resp.replica_settings[0].replica_global_secondary_index_settings[0].provisioned_write_capacity_auto_scaling_settings.scaling_policies[0].target_tracking_scaling_policy_configuration.target_value #=> Float
  #   resp.replica_settings[0].replica_table_class_summary.table_class #=> String, one of "STANDARD", "STANDARD_INFREQUENT_ACCESS"
  #   resp.replica_settings[0].replica_table_class_summary.last_update_date_time #=> Time
  # @option params
  # @overload describe_global_table_settings
  # @param params [Hash] ({})
  # @return [Types::DescribeGlobalTableSettingsOutput] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::DescribeGlobalTableSettingsOutput#global_table_name #global_table_name} => String
  #   * {Types::DescribeGlobalTableSettingsOutput#replica_settings #replica_settings} => Array&lt;Types::ReplicaSettingsDescription&gt;
  # @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/DescribeGlobalTableSettings AWS API Documentation
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client.rb#2617
  def describe_global_table_settings(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Represents the properties of the import.
  #
  # @example Request syntax with placeholder values
  #
  #   resp = client.describe_import({
  #   import_arn: "ImportArn", # required
  #   })
  # @example Response structure
  #
  #   resp.import_table_description.import_arn #=> String
  #   resp.import_table_description.import_status #=> String, one of "IN_PROGRESS", "COMPLETED", "CANCELLING", "CANCELLED", "FAILED"
  #   resp.import_table_description.table_arn #=> String
  #   resp.import_table_description.table_id #=> String
  #   resp.import_table_description.client_token #=> String
  #   resp.import_table_description.s3_bucket_source.s3_bucket_owner #=> String
  #   resp.import_table_description.s3_bucket_source.s3_bucket #=> String
  #   resp.import_table_description.s3_bucket_source.s3_key_prefix #=> String
  #   resp.import_table_description.error_count #=> Integer
  #   resp.import_table_description.cloud_watch_log_group_arn #=> String
  #   resp.import_table_description.input_format #=> String, one of "DYNAMODB_JSON", "ION", "CSV"
  #   resp.import_table_description.input_format_options.csv.delimiter #=> String
  #   resp.import_table_description.input_format_options.csv.header_list #=> Array
  #   resp.import_table_description.input_format_options.csv.header_list[0] #=> String
  #   resp.import_table_description.input_compression_type #=> String, one of "GZIP", "ZSTD", "NONE"
  #   resp.import_table_description.table_creation_parameters.table_name #=> String
  #   resp.import_table_description.table_creation_parameters.attribute_definitions #=> Array
  #   resp.import_table_description.table_creation_parameters.attribute_definitions[0].attribute_name #=> String
  #   resp.import_table_description.table_creation_parameters.attribute_definitions[0].attribute_type #=> String, one of "S", "N", "B"
  #   resp.import_table_description.table_creation_parameters.key_schema #=> Array
  #   resp.import_table_description.table_creation_parameters.key_schema[0].attribute_name #=> String
  #   resp.import_table_description.table_creation_parameters.key_schema[0].key_type #=> String, one of "HASH", "RANGE"
  #   resp.import_table_description.table_creation_parameters.billing_mode #=> String, one of "PROVISIONED", "PAY_PER_REQUEST"
  #   resp.import_table_description.table_creation_parameters.provisioned_throughput.read_capacity_units #=> Integer
  #   resp.import_table_description.table_creation_parameters.provisioned_throughput.write_capacity_units #=> Integer
  #   resp.import_table_description.table_creation_parameters.sse_specification.enabled #=> Boolean
  #   resp.import_table_description.table_creation_parameters.sse_specification.sse_type #=> String, one of "AES256", "KMS"
  #   resp.import_table_description.table_creation_parameters.sse_specification.kms_master_key_id #=> String
  #   resp.import_table_description.table_creation_parameters.global_secondary_indexes #=> Array
  #   resp.import_table_description.table_creation_parameters.global_secondary_indexes[0].index_name #=> String
  #   resp.import_table_description.table_creation_parameters.global_secondary_indexes[0].key_schema #=> Array
  #   resp.import_table_description.table_creation_parameters.global_secondary_indexes[0].key_schema[0].attribute_name #=> String
  #   resp.import_table_description.table_creation_parameters.global_secondary_indexes[0].key_schema[0].key_type #=> String, one of "HASH", "RANGE"
  #   resp.import_table_description.table_creation_parameters.global_secondary_indexes[0].projection.projection_type #=> String, one of "ALL", "KEYS_ONLY", "INCLUDE"
  #   resp.import_table_description.table_creation_parameters.global_secondary_indexes[0].projection.non_key_attributes #=> Array
  #   resp.import_table_description.table_creation_parameters.global_secondary_indexes[0].projection.non_key_attributes[0] #=> String
  #   resp.import_table_description.table_creation_parameters.global_secondary_indexes[0].provisioned_throughput.read_capacity_units #=> Integer
  #   resp.import_table_description.table_creation_parameters.global_secondary_indexes[0].provisioned_throughput.write_capacity_units #=> Integer
  #   resp.import_table_description.start_time #=> Time
  #   resp.import_table_description.end_time #=> Time
  #   resp.import_table_description.processed_size_bytes #=> Integer
  #   resp.import_table_description.processed_item_count #=> Integer
  #   resp.import_table_description.imported_item_count #=> Integer
  #   resp.import_table_description.failure_code #=> String
  #   resp.import_table_description.failure_message #=> String
  # @option params
  # @overload describe_import
  # @param params [Hash] ({})
  # @return [Types::DescribeImportOutput] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::DescribeImportOutput#import_table_description #import_table_description} => Types::ImportTableDescription
  # @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/DescribeImport AWS API Documentation
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client.rb#2690
  def describe_import(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Returns information about the status of Kinesis streaming.
  #
  # @example Request syntax with placeholder values
  #
  #   resp = client.describe_kinesis_streaming_destination({
  #   table_name: "TableName", # required
  #   })
  # @example Response structure
  #
  #   resp.table_name #=> String
  #   resp.kinesis_data_stream_destinations #=> Array
  #   resp.kinesis_data_stream_destinations[0].stream_arn #=> String
  #   resp.kinesis_data_stream_destinations[0].destination_status #=> String, one of "ENABLING", "ACTIVE", "DISABLING", "DISABLED", "ENABLE_FAILED"
  #   resp.kinesis_data_stream_destinations[0].destination_status_description #=> String
  # @option params
  # @overload describe_kinesis_streaming_destination
  # @param params [Hash] ({})
  # @return [Types::DescribeKinesisStreamingDestinationOutput] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::DescribeKinesisStreamingDestinationOutput#table_name #table_name} => String
  #   * {Types::DescribeKinesisStreamingDestinationOutput#kinesis_data_stream_destinations #kinesis_data_stream_destinations} => Array&lt;Types::KinesisDataStreamDestination&gt;
  # @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/DescribeKinesisStreamingDestination AWS API Documentation
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client.rb#2723
  def describe_kinesis_streaming_destination(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Returns the current provisioned-capacity quotas for your Amazon Web
  # Services account in a Region, both for the Region as a whole and for
  # any one DynamoDB table that you create there.
  #
  # When you establish an Amazon Web Services account, the account has
  # initial quotas on the maximum read capacity units and write capacity
  # units that you can provision across all of your DynamoDB tables in a
  # given Region. Also, there are per-table quotas that apply when you
  # create a table there. For more information, see [Service, Account, and
  # Table Quotas][1] page in the *Amazon DynamoDB Developer Guide*.
  #
  # Although you can increase these quotas by filing a case at [Amazon Web
  # Services Support Center][2], obtaining the increase is not
  # instantaneous. The `DescribeLimits` action lets you write code to
  # compare the capacity you are currently using to those quotas imposed
  # by your account so that you have enough time to apply for an increase
  # before you hit a quota.
  #
  # For example, you could use one of the Amazon Web Services SDKs to do
  # the following:
  #
  # 1.  Call `DescribeLimits` for a particular Region to obtain your
  #     current account quotas on provisioned capacity there.
  #
  # 2.  Create a variable to hold the aggregate read capacity units
  #     provisioned for all your tables in that Region, and one to hold
  #     the aggregate write capacity units. Zero them both.
  #
  # 3.  Call `ListTables` to obtain a list of all your DynamoDB tables.
  #
  # 4.  For each table name listed by `ListTables`, do the following:
  #
  #     * Call `DescribeTable` with the table name.
  #
  #     * Use the data returned by `DescribeTable` to add the read
  #       capacity units and write capacity units provisioned for the
  #       table itself to your variables.
  #
  #     * If the table has one or more global secondary indexes (GSIs),
  #       loop over these GSIs and add their provisioned capacity values
  #       to your variables as well.
  #
  # 5.  Report the account quotas for that Region returned by
  #     `DescribeLimits`, along with the total current provisioned
  #     capacity levels you have calculated.
  #
  # This will let you see whether you are getting close to your
  # account-level quotas.
  #
  # The per-table quotas apply only when you are creating a new table.
  # They restrict the sum of the provisioned capacity of the new table
  # itself and all its global secondary indexes.
  #
  # For existing tables and their GSIs, DynamoDB doesn't let you increase
  # provisioned capacity extremely rapidly, but the only quota that
  # applies is that the aggregate provisioned capacity over all your
  # tables and GSIs cannot exceed either of the per-account quotas.
  #
  # <note markdown="1"> `DescribeLimits` should only be called periodically. You can expect
  # throttling errors if you call it more than once in a minute.
  #
  #  </note>
  #
  # The `DescribeLimits` Request element has no content.
  #
  #
  #
  # [1]: https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Limits.html
  # [2]: https://console.aws.amazon.com/support/home#/
  #
  # @example Example: To determine capacity limits per table and account, in the current AWS region
  #
  #   # The following example returns the maximum read and write capacity units per table, and for the AWS account, in the
  #   # current AWS region.
  #
  #   resp = client.describe_limits({
  #   })
  #
  #   resp.to_h outputs the following:
  #   {
  #   account_max_read_capacity_units: 20000,
  #   account_max_write_capacity_units: 20000,
  #   table_max_read_capacity_units: 10000,
  #   table_max_write_capacity_units: 10000,
  #   }
  # @example Response structure
  #
  #   resp.account_max_read_capacity_units #=> Integer
  #   resp.account_max_write_capacity_units #=> Integer
  #   resp.table_max_read_capacity_units #=> Integer
  #   resp.table_max_write_capacity_units #=> Integer
  # @overload describe_limits
  # @param params [Hash] ({})
  # @return [Types::DescribeLimitsOutput] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::DescribeLimitsOutput#account_max_read_capacity_units #account_max_read_capacity_units} => Integer
  #   * {Types::DescribeLimitsOutput#account_max_write_capacity_units #account_max_write_capacity_units} => Integer
  #   * {Types::DescribeLimitsOutput#table_max_read_capacity_units #table_max_read_capacity_units} => Integer
  #   * {Types::DescribeLimitsOutput#table_max_write_capacity_units #table_max_write_capacity_units} => Integer
  # @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/DescribeLimits AWS API Documentation
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client.rb#2833
  def describe_limits(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Returns information about the table, including the current status of
  # the table, when it was created, the primary key schema, and any
  # indexes on the table.
  #
  # This operation only applies to [Version 2019.11.21 (Current)][1] of
  # global tables.
  #
  # <note markdown="1"> If you issue a `DescribeTable` request immediately after a
  # `CreateTable` request, DynamoDB might return a
  # `ResourceNotFoundException`. This is because `DescribeTable` uses an
  # eventually consistent query, and the metadata for your table might not
  # be available at that moment. Wait for a few seconds, and then try the
  # `DescribeTable` request again.
  #
  #  </note>
  #
  #
  #
  # [1]: https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/globaltables.V2.html
  #
  # The following waiters are defined for this operation (see {Client#wait_until} for detailed usage):
  #
  #   * table_exists
  #   * table_not_exists
  #
  # @example Example: To describe a table
  #
  #   # This example describes the Music table.
  #
  #   resp = client.describe_table({
  #   table_name: "Music",
  #   })
  #
  #   resp.to_h outputs the following:
  #   {
  #   table: {
  #   attribute_definitions: [
  #   {
  #   attribute_name: "Artist",
  #   attribute_type: "S",
  #   },
  #   {
  #   attribute_name: "SongTitle",
  #   attribute_type: "S",
  #   },
  #   ],
  #   creation_date_time: Time.parse("1421866952.062"),
  #   item_count: 0,
  #   key_schema: [
  #   {
  #   attribute_name: "Artist",
  #   key_type: "HASH",
  #   },
  #   {
  #   attribute_name: "SongTitle",
  #   key_type: "RANGE",
  #   },
  #   ],
  #   provisioned_throughput: {
  #   number_of_decreases_today: 1,
  #   read_capacity_units: 5,
  #   write_capacity_units: 5,
  #   },
  #   table_name: "Music",
  #   table_size_bytes: 0,
  #   table_status: "ACTIVE",
  #   },
  #   }
  # @example Request syntax with placeholder values
  #
  #   resp = client.describe_table({
  #   table_name: "TableName", # required
  #   })
  # @example Response structure
  #
  #   resp.table.attribute_definitions #=> Array
  #   resp.table.attribute_definitions[0].attribute_name #=> String
  #   resp.table.attribute_definitions[0].attribute_type #=> String, one of "S", "N", "B"
  #   resp.table.table_name #=> String
  #   resp.table.key_schema #=> Array
  #   resp.table.key_schema[0].attribute_name #=> String
  #   resp.table.key_schema[0].key_type #=> String, one of "HASH", "RANGE"
  #   resp.table.table_status #=> String, one of "CREATING", "UPDATING", "DELETING", "ACTIVE", "INACCESSIBLE_ENCRYPTION_CREDENTIALS", "ARCHIVING", "ARCHIVED"
  #   resp.table.creation_date_time #=> Time
  #   resp.table.provisioned_throughput.last_increase_date_time #=> Time
  #   resp.table.provisioned_throughput.last_decrease_date_time #=> Time
  #   resp.table.provisioned_throughput.number_of_decreases_today #=> Integer
  #   resp.table.provisioned_throughput.read_capacity_units #=> Integer
  #   resp.table.provisioned_throughput.write_capacity_units #=> Integer
  #   resp.table.table_size_bytes #=> Integer
  #   resp.table.item_count #=> Integer
  #   resp.table.table_arn #=> String
  #   resp.table.table_id #=> String
  #   resp.table.billing_mode_summary.billing_mode #=> String, one of "PROVISIONED", "PAY_PER_REQUEST"
  #   resp.table.billing_mode_summary.last_update_to_pay_per_request_date_time #=> Time
  #   resp.table.local_secondary_indexes #=> Array
  #   resp.table.local_secondary_indexes[0].index_name #=> String
  #   resp.table.local_secondary_indexes[0].key_schema #=> Array
  #   resp.table.local_secondary_indexes[0].key_schema[0].attribute_name #=> String
  #   resp.table.local_secondary_indexes[0].key_schema[0].key_type #=> String, one of "HASH", "RANGE"
  #   resp.table.local_secondary_indexes[0].projection.projection_type #=> String, one of "ALL", "KEYS_ONLY", "INCLUDE"
  #   resp.table.local_secondary_indexes[0].projection.non_key_attributes #=> Array
  #   resp.table.local_secondary_indexes[0].projection.non_key_attributes[0] #=> String
  #   resp.table.local_secondary_indexes[0].index_size_bytes #=> Integer
  #   resp.table.local_secondary_indexes[0].item_count #=> Integer
  #   resp.table.local_secondary_indexes[0].index_arn #=> String
  #   resp.table.global_secondary_indexes #=> Array
  #   resp.table.global_secondary_indexes[0].index_name #=> String
  #   resp.table.global_secondary_indexes[0].key_schema #=> Array
  #   resp.table.global_secondary_indexes[0].key_schema[0].attribute_name #=> String
  #   resp.table.global_secondary_indexes[0].key_schema[0].key_type #=> String, one of "HASH", "RANGE"
  #   resp.table.global_secondary_indexes[0].projection.projection_type #=> String, one of "ALL", "KEYS_ONLY", "INCLUDE"
  #   resp.table.global_secondary_indexes[0].projection.non_key_attributes #=> Array
  #   resp.table.global_secondary_indexes[0].projection.non_key_attributes[0] #=> String
  #   resp.table.global_secondary_indexes[0].index_status #=> String, one of "CREATING", "UPDATING", "DELETING", "ACTIVE"
  #   resp.table.global_secondary_indexes[0].backfilling #=> Boolean
  #   resp.table.global_secondary_indexes[0].provisioned_throughput.last_increase_date_time #=> Time
  #   resp.table.global_secondary_indexes[0].provisioned_throughput.last_decrease_date_time #=> Time
  #   resp.table.global_secondary_indexes[0].provisioned_throughput.number_of_decreases_today #=> Integer
  #   resp.table.global_secondary_indexes[0].provisioned_throughput.read_capacity_units #=> Integer
  #   resp.table.global_secondary_indexes[0].provisioned_throughput.write_capacity_units #=> Integer
  #   resp.table.global_secondary_indexes[0].index_size_bytes #=> Integer
  #   resp.table.global_secondary_indexes[0].item_count #=> Integer
  #   resp.table.global_secondary_indexes[0].index_arn #=> String
  #   resp.table.stream_specification.stream_enabled #=> Boolean
  #   resp.table.stream_specification.stream_view_type #=> String, one of "NEW_IMAGE", "OLD_IMAGE", "NEW_AND_OLD_IMAGES", "KEYS_ONLY"
  #   resp.table.latest_stream_label #=> String
  #   resp.table.latest_stream_arn #=> String
  #   resp.table.global_table_version #=> String
  #   resp.table.replicas #=> Array
  #   resp.table.replicas[0].region_name #=> String
  #   resp.table.replicas[0].replica_status #=> String, one of "CREATING", "CREATION_FAILED", "UPDATING", "DELETING", "ACTIVE", "REGION_DISABLED", "INACCESSIBLE_ENCRYPTION_CREDENTIALS"
  #   resp.table.replicas[0].replica_status_description #=> String
  #   resp.table.replicas[0].replica_status_percent_progress #=> String
  #   resp.table.replicas[0].kms_master_key_id #=> String
  #   resp.table.replicas[0].provisioned_throughput_override.read_capacity_units #=> Integer
  #   resp.table.replicas[0].global_secondary_indexes #=> Array
  #   resp.table.replicas[0].global_secondary_indexes[0].index_name #=> String
  #   resp.table.replicas[0].global_secondary_indexes[0].provisioned_throughput_override.read_capacity_units #=> Integer
  #   resp.table.replicas[0].replica_inaccessible_date_time #=> Time
  #   resp.table.replicas[0].replica_table_class_summary.table_class #=> String, one of "STANDARD", "STANDARD_INFREQUENT_ACCESS"
  #   resp.table.replicas[0].replica_table_class_summary.last_update_date_time #=> Time
  #   resp.table.restore_summary.source_backup_arn #=> String
  #   resp.table.restore_summary.source_table_arn #=> String
  #   resp.table.restore_summary.restore_date_time #=> Time
  #   resp.table.restore_summary.restore_in_progress #=> Boolean
  #   resp.table.sse_description.status #=> String, one of "ENABLING", "ENABLED", "DISABLING", "DISABLED", "UPDATING"
  #   resp.table.sse_description.sse_type #=> String, one of "AES256", "KMS"
  #   resp.table.sse_description.kms_master_key_arn #=> String
  #   resp.table.sse_description.inaccessible_encryption_date_time #=> Time
  #   resp.table.archival_summary.archival_date_time #=> Time
  #   resp.table.archival_summary.archival_reason #=> String
  #   resp.table.archival_summary.archival_backup_arn #=> String
  #   resp.table.table_class_summary.table_class #=> String, one of "STANDARD", "STANDARD_INFREQUENT_ACCESS"
  #   resp.table.table_class_summary.last_update_date_time #=> Time
  #   resp.table.deletion_protection_enabled #=> Boolean
  # @option params
  # @overload describe_table
  # @param params [Hash] ({})
  # @return [Types::DescribeTableOutput] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::DescribeTableOutput#table #table} => Types::TableDescription
  # @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/DescribeTable AWS API Documentation
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client.rb#3010
  def describe_table(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Describes auto scaling settings across replicas of the global table at
  # once.
  #
  # This operation only applies to [Version 2019.11.21 (Current)][1] of
  # global tables.
  #
  #
  #
  # [1]: https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/globaltables.V2.html
  #
  # @example Request syntax with placeholder values
  #
  #   resp = client.describe_table_replica_auto_scaling({
  #   table_name: "TableName", # required
  #   })
  # @example Response structure
  #
  #   resp.table_auto_scaling_description.table_name #=> String
  #   resp.table_auto_scaling_description.table_status #=> String, one of "CREATING", "UPDATING", "DELETING", "ACTIVE", "INACCESSIBLE_ENCRYPTION_CREDENTIALS", "ARCHIVING", "ARCHIVED"
  #   resp.table_auto_scaling_description.replicas #=> Array
  #   resp.table_auto_scaling_description.replicas[0].region_name #=> String
  #   resp.table_auto_scaling_description.replicas[0].global_secondary_indexes #=> Array
  #   resp.table_auto_scaling_description.replicas[0].global_secondary_indexes[0].index_name #=> String
  #   resp.table_auto_scaling_description.replicas[0].global_secondary_indexes[0].index_status #=> String, one of "CREATING", "UPDATING", "DELETING", "ACTIVE"
  #   resp.table_auto_scaling_description.replicas[0].global_secondary_indexes[0].provisioned_read_capacity_auto_scaling_settings.minimum_units #=> Integer
  #   resp.table_auto_scaling_description.replicas[0].global_secondary_indexes[0].provisioned_read_capacity_auto_scaling_settings.maximum_units #=> Integer
  #   resp.table_auto_scaling_description.replicas[0].global_secondary_indexes[0].provisioned_read_capacity_auto_scaling_settings.auto_scaling_disabled #=> Boolean
  #   resp.table_auto_scaling_description.replicas[0].global_secondary_indexes[0].provisioned_read_capacity_auto_scaling_settings.auto_scaling_role_arn #=> String
  #   resp.table_auto_scaling_description.replicas[0].global_secondary_indexes[0].provisioned_read_capacity_auto_scaling_settings.scaling_policies #=> Array
  #   resp.table_auto_scaling_description.replicas[0].global_secondary_indexes[0].provisioned_read_capacity_auto_scaling_settings.scaling_policies[0].policy_name #=> String
  #   resp.table_auto_scaling_description.replicas[0].global_secondary_indexes[0].provisioned_read_capacity_auto_scaling_settings.scaling_policies[0].target_tracking_scaling_policy_configuration.disable_scale_in #=> Boolean
  #   resp.table_auto_scaling_description.replicas[0].global_secondary_indexes[0].provisioned_read_capacity_auto_scaling_settings.scaling_policies[0].target_tracking_scaling_policy_configuration.scale_in_cooldown #=> Integer
  #   resp.table_auto_scaling_description.replicas[0].global_secondary_indexes[0].provisioned_read_capacity_auto_scaling_settings.scaling_policies[0].target_tracking_scaling_policy_configuration.scale_out_cooldown #=> Integer
  #   resp.table_auto_scaling_description.replicas[0].global_secondary_indexes[0].provisioned_read_capacity_auto_scaling_settings.scaling_policies[0].target_tracking_scaling_policy_configuration.target_value #=> Float
  #   resp.table_auto_scaling_description.replicas[0].global_secondary_indexes[0].provisioned_write_capacity_auto_scaling_settings.minimum_units #=> Integer
  #   resp.table_auto_scaling_description.replicas[0].global_secondary_indexes[0].provisioned_write_capacity_auto_scaling_settings.maximum_units #=> Integer
  #   resp.table_auto_scaling_description.replicas[0].global_secondary_indexes[0].provisioned_write_capacity_auto_scaling_settings.auto_scaling_disabled #=> Boolean
  #   resp.table_auto_scaling_description.replicas[0].global_secondary_indexes[0].provisioned_write_capacity_auto_scaling_settings.auto_scaling_role_arn #=> String
  #   resp.table_auto_scaling_description.replicas[0].global_secondary_indexes[0].provisioned_write_capacity_auto_scaling_settings.scaling_policies #=> Array
  #   resp.table_auto_scaling_description.replicas[0].global_secondary_indexes[0].provisioned_write_capacity_auto_scaling_settings.scaling_policies[0].policy_name #=> String
  #   resp.table_auto_scaling_description.replicas[0].global_secondary_indexes[0].provisioned_write_capacity_auto_scaling_settings.scaling_policies[0].target_tracking_scaling_policy_configuration.disable_scale_in #=> Boolean
  #   resp.table_auto_scaling_description.replicas[0].global_secondary_indexes[0].provisioned_write_capacity_auto_scaling_settings.scaling_policies[0].target_tracking_scaling_policy_configuration.scale_in_cooldown #=> Integer
  #   resp.table_auto_scaling_description.replicas[0].global_secondary_indexes[0].provisioned_write_capacity_auto_scaling_settings.scaling_policies[0].target_tracking_scaling_policy_configuration.scale_out_cooldown #=> Integer
  #   resp.table_auto_scaling_description.replicas[0].global_secondary_indexes[0].provisioned_write_capacity_auto_scaling_settings.scaling_policies[0].target_tracking_scaling_policy_configuration.target_value #=> Float
  #   resp.table_auto_scaling_description.replicas[0].replica_provisioned_read_capacity_auto_scaling_settings.minimum_units #=> Integer
  #   resp.table_auto_scaling_description.replicas[0].replica_provisioned_read_capacity_auto_scaling_settings.maximum_units #=> Integer
  #   resp.table_auto_scaling_description.replicas[0].replica_provisioned_read_capacity_auto_scaling_settings.auto_scaling_disabled #=> Boolean
  #   resp.table_auto_scaling_description.replicas[0].replica_provisioned_read_capacity_auto_scaling_settings.auto_scaling_role_arn #=> String
  #   resp.table_auto_scaling_description.replicas[0].replica_provisioned_read_capacity_auto_scaling_settings.scaling_policies #=> Array
  #   resp.table_auto_scaling_description.replicas[0].replica_provisioned_read_capacity_auto_scaling_settings.scaling_policies[0].policy_name #=> String
  #   resp.table_auto_scaling_description.replicas[0].replica_provisioned_read_capacity_auto_scaling_settings.scaling_policies[0].target_tracking_scaling_policy_configuration.disable_scale_in #=> Boolean
  #   resp.table_auto_scaling_description.replicas[0].replica_provisioned_read_capacity_auto_scaling_settings.scaling_policies[0].target_tracking_scaling_policy_configuration.scale_in_cooldown #=> Integer
  #   resp.table_auto_scaling_description.replicas[0].replica_provisioned_read_capacity_auto_scaling_settings.scaling_policies[0].target_tracking_scaling_policy_configuration.scale_out_cooldown #=> Integer
  #   resp.table_auto_scaling_description.replicas[0].replica_provisioned_read_capacity_auto_scaling_settings.scaling_policies[0].target_tracking_scaling_policy_configuration.target_value #=> Float
  #   resp.table_auto_scaling_description.replicas[0].replica_provisioned_write_capacity_auto_scaling_settings.minimum_units #=> Integer
  #   resp.table_auto_scaling_description.replicas[0].replica_provisioned_write_capacity_auto_scaling_settings.maximum_units #=> Integer
  #   resp.table_auto_scaling_description.replicas[0].replica_provisioned_write_capacity_auto_scaling_settings.auto_scaling_disabled #=> Boolean
  #   resp.table_auto_scaling_description.replicas[0].replica_provisioned_write_capacity_auto_scaling_settings.auto_scaling_role_arn #=> String
  #   resp.table_auto_scaling_description.replicas[0].replica_provisioned_write_capacity_auto_scaling_settings.scaling_policies #=> Array
  #   resp.table_auto_scaling_description.replicas[0].replica_provisioned_write_capacity_auto_scaling_settings.scaling_policies[0].policy_name #=> String
  #   resp.table_auto_scaling_description.replicas[0].replica_provisioned_write_capacity_auto_scaling_settings.scaling_policies[0].target_tracking_scaling_policy_configuration.disable_scale_in #=> Boolean
  #   resp.table_auto_scaling_description.replicas[0].replica_provisioned_write_capacity_auto_scaling_settings.scaling_policies[0].target_tracking_scaling_policy_configuration.scale_in_cooldown #=> Integer
  #   resp.table_auto_scaling_description.replicas[0].replica_provisioned_write_capacity_auto_scaling_settings.scaling_policies[0].target_tracking_scaling_policy_configuration.scale_out_cooldown #=> Integer
  #   resp.table_auto_scaling_description.replicas[0].replica_provisioned_write_capacity_auto_scaling_settings.scaling_policies[0].target_tracking_scaling_policy_configuration.target_value #=> Float
  #   resp.table_auto_scaling_description.replicas[0].replica_status #=> String, one of "CREATING", "CREATION_FAILED", "UPDATING", "DELETING", "ACTIVE", "REGION_DISABLED", "INACCESSIBLE_ENCRYPTION_CREDENTIALS"
  # @option params
  # @overload describe_table_replica_auto_scaling
  # @param params [Hash] ({})
  # @return [Types::DescribeTableReplicaAutoScalingOutput] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::DescribeTableReplicaAutoScalingOutput#table_auto_scaling_description #table_auto_scaling_description} => Types::TableAutoScalingDescription
  # @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/DescribeTableReplicaAutoScaling AWS API Documentation
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client.rb#3093
  def describe_table_replica_auto_scaling(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Gives a description of the Time to Live (TTL) status on the specified
  # table.
  #
  # @example Request syntax with placeholder values
  #
  #   resp = client.describe_time_to_live({
  #   table_name: "TableName", # required
  #   })
  # @example Response structure
  #
  #   resp.time_to_live_description.time_to_live_status #=> String, one of "ENABLING", "DISABLING", "ENABLED", "DISABLED"
  #   resp.time_to_live_description.attribute_name #=> String
  # @option params
  # @overload describe_time_to_live
  # @param params [Hash] ({})
  # @return [Types::DescribeTimeToLiveOutput] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::DescribeTimeToLiveOutput#time_to_live_description #time_to_live_description} => Types::TimeToLiveDescription
  # @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/DescribeTimeToLive AWS API Documentation
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client.rb#3123
  def describe_time_to_live(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Stops replication from the DynamoDB table to the Kinesis data stream.
  # This is done without deleting either of the resources.
  #
  # @example Request syntax with placeholder values
  #
  #   resp = client.disable_kinesis_streaming_destination({
  #   table_name: "TableName", # required
  #   stream_arn: "StreamArn", # required
  #   })
  # @example Response structure
  #
  #   resp.table_name #=> String
  #   resp.stream_arn #=> String
  #   resp.destination_status #=> String, one of "ENABLING", "ACTIVE", "DISABLING", "DISABLED", "ENABLE_FAILED"
  # @option params
  # @option params
  # @overload disable_kinesis_streaming_destination
  # @param params [Hash] ({})
  # @return [Types::KinesisStreamingDestinationOutput] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::KinesisStreamingDestinationOutput#table_name #table_name} => String
  #   * {Types::KinesisStreamingDestinationOutput#stream_arn #stream_arn} => String
  #   * {Types::KinesisStreamingDestinationOutput#destination_status #destination_status} => String
  # @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/DisableKinesisStreamingDestination AWS API Documentation
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client.rb#3160
  def disable_kinesis_streaming_destination(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Starts table data replication to the specified Kinesis data stream at
  # a timestamp chosen during the enable workflow. If this operation
  # doesn't return results immediately, use
  # DescribeKinesisStreamingDestination to check if streaming to the
  # Kinesis data stream is ACTIVE.
  #
  # @example Request syntax with placeholder values
  #
  #   resp = client.enable_kinesis_streaming_destination({
  #   table_name: "TableName", # required
  #   stream_arn: "StreamArn", # required
  #   })
  # @example Response structure
  #
  #   resp.table_name #=> String
  #   resp.stream_arn #=> String
  #   resp.destination_status #=> String, one of "ENABLING", "ACTIVE", "DISABLING", "DISABLED", "ENABLE_FAILED"
  # @option params
  # @option params
  # @overload enable_kinesis_streaming_destination
  # @param params [Hash] ({})
  # @return [Types::KinesisStreamingDestinationOutput] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::KinesisStreamingDestinationOutput#table_name #table_name} => String
  #   * {Types::KinesisStreamingDestinationOutput#stream_arn #stream_arn} => String
  #   * {Types::KinesisStreamingDestinationOutput#destination_status #destination_status} => String
  # @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/EnableKinesisStreamingDestination AWS API Documentation
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client.rb#3200
  def enable_kinesis_streaming_destination(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # This operation allows you to perform reads and singleton writes on
  # data stored in DynamoDB, using PartiQL.
  #
  # For PartiQL reads (`SELECT` statement), if the total number of
  # processed items exceeds the maximum dataset size limit of 1 MB, the
  # read stops and results are returned to the user as a
  # `LastEvaluatedKey` value to continue the read in a subsequent
  # operation. If the filter criteria in `WHERE` clause does not match any
  # data, the read will return an empty result set.
  #
  # A single `SELECT` statement response can return up to the maximum
  # number of items (if using the Limit parameter) or a maximum of 1 MB of
  # data (and then apply any filtering to the results using `WHERE`
  # clause). If `LastEvaluatedKey` is present in the response, you need to
  # paginate the result set. If `NextToken` is present, you need to
  # paginate the result set and include `NextToken`.
  #
  # @example Request syntax with placeholder values
  #
  #   resp = client.execute_statement({
  #   statement: "PartiQLStatement", # required
  #   parameters: ["value"], # value <Hash,Array,String,Numeric,Boolean,IO,Set,nil>
  #   consistent_read: false,
  #   next_token: "PartiQLNextToken",
  #   return_consumed_capacity: "INDEXES", # accepts INDEXES, TOTAL, NONE
  #   limit: 1,
  #   return_values_on_condition_check_failure: "ALL_OLD", # accepts ALL_OLD, NONE
  #   })
  # @example Response structure
  #
  #   resp.items #=> Array
  #   resp.items[0] #=> Hash
  #   resp.items[0]["AttributeName"] #=> <Hash,Array,String,Numeric,Boolean,IO,Set,nil>
  #   resp.next_token #=> String
  #   resp.consumed_capacity.table_name #=> String
  #   resp.consumed_capacity.capacity_units #=> Float
  #   resp.consumed_capacity.read_capacity_units #=> Float
  #   resp.consumed_capacity.write_capacity_units #=> Float
  #   resp.consumed_capacity.table.read_capacity_units #=> Float
  #   resp.consumed_capacity.table.write_capacity_units #=> Float
  #   resp.consumed_capacity.table.capacity_units #=> Float
  #   resp.consumed_capacity.local_secondary_indexes #=> Hash
  #   resp.consumed_capacity.local_secondary_indexes["IndexName"].read_capacity_units #=> Float
  #   resp.consumed_capacity.local_secondary_indexes["IndexName"].write_capacity_units #=> Float
  #   resp.consumed_capacity.local_secondary_indexes["IndexName"].capacity_units #=> Float
  #   resp.consumed_capacity.global_secondary_indexes #=> Hash
  #   resp.consumed_capacity.global_secondary_indexes["IndexName"].read_capacity_units #=> Float
  #   resp.consumed_capacity.global_secondary_indexes["IndexName"].write_capacity_units #=> Float
  #   resp.consumed_capacity.global_secondary_indexes["IndexName"].capacity_units #=> Float
  #   resp.last_evaluated_key #=> Hash
  #   resp.last_evaluated_key["AttributeName"] #=> <Hash,Array,String,Numeric,Boolean,IO,Set,nil>
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @overload execute_statement
  # @param params [Hash] ({})
  # @return [Types::ExecuteStatementOutput] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::ExecuteStatementOutput#items #items} => Array&lt;Hash&lt;String,Types::AttributeValue&gt;&gt;
  #   * {Types::ExecuteStatementOutput#next_token #next_token} => String
  #   * {Types::ExecuteStatementOutput#consumed_capacity #consumed_capacity} => Types::ConsumedCapacity
  #   * {Types::ExecuteStatementOutput#last_evaluated_key #last_evaluated_key} => Hash&lt;String,Types::AttributeValue&gt;
  # @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/ExecuteStatement AWS API Documentation
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client.rb#3321
  def execute_statement(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # This operation allows you to perform transactional reads or writes on
  # data stored in DynamoDB, using PartiQL.
  #
  # <note markdown="1"> The entire transaction must consist of either read statements or write
  # statements, you cannot mix both in one transaction. The EXISTS
  # function is an exception and can be used to check the condition of
  # specific attributes of the item in a similar manner to
  # `ConditionCheck` in the [TransactWriteItems][1] API.
  #
  #  </note>
  #
  #
  #
  # [1]: https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/transaction-apis.html#transaction-apis-txwriteitems
  #
  # @example Request syntax with placeholder values
  #
  #   resp = client.execute_transaction({
  #   transact_statements: [ # required
  #   {
  #   statement: "PartiQLStatement", # required
  #   parameters: ["value"], # value <Hash,Array,String,Numeric,Boolean,IO,Set,nil>
  #   return_values_on_condition_check_failure: "ALL_OLD", # accepts ALL_OLD, NONE
  #   },
  #   ],
  #   client_request_token: "ClientRequestToken",
  #   return_consumed_capacity: "INDEXES", # accepts INDEXES, TOTAL, NONE
  #   })
  # @example Response structure
  #
  #   resp.responses #=> Array
  #   resp.responses[0].item #=> Hash
  #   resp.responses[0].item["AttributeName"] #=> <Hash,Array,String,Numeric,Boolean,IO,Set,nil>
  #   resp.consumed_capacity #=> Array
  #   resp.consumed_capacity[0].table_name #=> String
  #   resp.consumed_capacity[0].capacity_units #=> Float
  #   resp.consumed_capacity[0].read_capacity_units #=> Float
  #   resp.consumed_capacity[0].write_capacity_units #=> Float
  #   resp.consumed_capacity[0].table.read_capacity_units #=> Float
  #   resp.consumed_capacity[0].table.write_capacity_units #=> Float
  #   resp.consumed_capacity[0].table.capacity_units #=> Float
  #   resp.consumed_capacity[0].local_secondary_indexes #=> Hash
  #   resp.consumed_capacity[0].local_secondary_indexes["IndexName"].read_capacity_units #=> Float
  #   resp.consumed_capacity[0].local_secondary_indexes["IndexName"].write_capacity_units #=> Float
  #   resp.consumed_capacity[0].local_secondary_indexes["IndexName"].capacity_units #=> Float
  #   resp.consumed_capacity[0].global_secondary_indexes #=> Hash
  #   resp.consumed_capacity[0].global_secondary_indexes["IndexName"].read_capacity_units #=> Float
  #   resp.consumed_capacity[0].global_secondary_indexes["IndexName"].write_capacity_units #=> Float
  #   resp.consumed_capacity[0].global_secondary_indexes["IndexName"].capacity_units #=> Float
  # @option params
  # @option params
  # @option params
  # @overload execute_transaction
  # @param params [Hash] ({})
  # @return [Types::ExecuteTransactionOutput] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::ExecuteTransactionOutput#responses #responses} => Array&lt;Types::ItemResponse&gt;
  #   * {Types::ExecuteTransactionOutput#consumed_capacity #consumed_capacity} => Array&lt;Types::ConsumedCapacity&gt;
  # @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/ExecuteTransaction AWS API Documentation
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client.rb#3406
  def execute_transaction(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Exports table data to an S3 bucket. The table must have point in time
  # recovery enabled, and you can export data from any time within the
  # point in time recovery window.
  #
  # @example Request syntax with placeholder values
  #
  #   resp = client.export_table_to_point_in_time({
  #   table_arn: "TableArn", # required
  #   export_time: Time.now,
  #   client_token: "ClientToken",
  #   s3_bucket: "S3Bucket", # required
  #   s3_bucket_owner: "S3BucketOwner",
  #   s3_prefix: "S3Prefix",
  #   s3_sse_algorithm: "AES256", # accepts AES256, KMS
  #   s3_sse_kms_key_id: "S3SseKmsKeyId",
  #   export_format: "DYNAMODB_JSON", # accepts DYNAMODB_JSON, ION
  #   export_type: "FULL_EXPORT", # accepts FULL_EXPORT, INCREMENTAL_EXPORT
  #   incremental_export_specification: {
  #   export_from_time: Time.now,
  #   export_to_time: Time.now,
  #   export_view_type: "NEW_IMAGE", # accepts NEW_IMAGE, NEW_AND_OLD_IMAGES
  #   },
  #   })
  # @example Response structure
  #
  #   resp.export_description.export_arn #=> String
  #   resp.export_description.export_status #=> String, one of "IN_PROGRESS", "COMPLETED", "FAILED"
  #   resp.export_description.start_time #=> Time
  #   resp.export_description.end_time #=> Time
  #   resp.export_description.export_manifest #=> String
  #   resp.export_description.table_arn #=> String
  #   resp.export_description.table_id #=> String
  #   resp.export_description.export_time #=> Time
  #   resp.export_description.client_token #=> String
  #   resp.export_description.s3_bucket #=> String
  #   resp.export_description.s3_bucket_owner #=> String
  #   resp.export_description.s3_prefix #=> String
  #   resp.export_description.s3_sse_algorithm #=> String, one of "AES256", "KMS"
  #   resp.export_description.s3_sse_kms_key_id #=> String
  #   resp.export_description.failure_code #=> String
  #   resp.export_description.failure_message #=> String
  #   resp.export_description.export_format #=> String, one of "DYNAMODB_JSON", "ION"
  #   resp.export_description.billed_size_bytes #=> Integer
  #   resp.export_description.item_count #=> Integer
  #   resp.export_description.export_type #=> String, one of "FULL_EXPORT", "INCREMENTAL_EXPORT"
  #   resp.export_description.incremental_export_specification.export_from_time #=> Time
  #   resp.export_description.incremental_export_specification.export_to_time #=> Time
  #   resp.export_description.incremental_export_specification.export_view_type #=> String, one of "NEW_IMAGE", "NEW_AND_OLD_IMAGES"
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @overload export_table_to_point_in_time
  # @param params [Hash] ({})
  # @return [Types::ExportTableToPointInTimeOutput] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::ExportTableToPointInTimeOutput#export_description #export_description} => Types::ExportDescription
  # @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/ExportTableToPointInTime AWS API Documentation
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client.rb#3532
  def export_table_to_point_in_time(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # The `GetItem` operation returns a set of attributes for the item with
  # the given primary key. If there is no matching item, `GetItem` does
  # not return any data and there will be no `Item` element in the
  # response.
  #
  # `GetItem` provides an eventually consistent read by default. If your
  # application requires a strongly consistent read, set `ConsistentRead`
  # to `true`. Although a strongly consistent read might take more time
  # than an eventually consistent read, it always returns the last updated
  # value.
  #
  # @example Example: To read an item from a table
  #
  #   # This example retrieves an item from the Music table. The table has a partition key and a sort key (Artist and
  #   # SongTitle), so you must specify both of these attributes.
  #
  #   resp = client.get_item({
  #   key: {
  #   "Artist" => "Acme Band",
  #   "SongTitle" => "Happy Day",
  #   },
  #   table_name: "Music",
  #   })
  #
  #   resp.to_h outputs the following:
  #   {
  #   item: {
  #   "AlbumTitle" => "Songs About Life",
  #   "Artist" => "Acme Band",
  #   "SongTitle" => "Happy Day",
  #   },
  #   }
  # @example Request syntax with placeholder values
  #
  #   resp = client.get_item({
  #   table_name: "TableName", # required
  #   key: { # required
  #   "AttributeName" => "value", # value <Hash,Array,String,Numeric,Boolean,IO,Set,nil>
  #   },
  #   attributes_to_get: ["AttributeName"],
  #   consistent_read: false,
  #   return_consumed_capacity: "INDEXES", # accepts INDEXES, TOTAL, NONE
  #   projection_expression: "ProjectionExpression",
  #   expression_attribute_names: {
  #   "ExpressionAttributeNameVariable" => "AttributeName",
  #   },
  #   })
  # @example Response structure
  #
  #   resp.item #=> Hash
  #   resp.item["AttributeName"] #=> <Hash,Array,String,Numeric,Boolean,IO,Set,nil>
  #   resp.consumed_capacity.table_name #=> String
  #   resp.consumed_capacity.capacity_units #=> Float
  #   resp.consumed_capacity.read_capacity_units #=> Float
  #   resp.consumed_capacity.write_capacity_units #=> Float
  #   resp.consumed_capacity.table.read_capacity_units #=> Float
  #   resp.consumed_capacity.table.write_capacity_units #=> Float
  #   resp.consumed_capacity.table.capacity_units #=> Float
  #   resp.consumed_capacity.local_secondary_indexes #=> Hash
  #   resp.consumed_capacity.local_secondary_indexes["IndexName"].read_capacity_units #=> Float
  #   resp.consumed_capacity.local_secondary_indexes["IndexName"].write_capacity_units #=> Float
  #   resp.consumed_capacity.local_secondary_indexes["IndexName"].capacity_units #=> Float
  #   resp.consumed_capacity.global_secondary_indexes #=> Hash
  #   resp.consumed_capacity.global_secondary_indexes["IndexName"].read_capacity_units #=> Float
  #   resp.consumed_capacity.global_secondary_indexes["IndexName"].write_capacity_units #=> Float
  #   resp.consumed_capacity.global_secondary_indexes["IndexName"].capacity_units #=> Float
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @overload get_item
  # @param params [Hash] ({})
  # @return [Types::GetItemOutput] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::GetItemOutput#item #item} => Hash&lt;String,Types::AttributeValue&gt;
  #   * {Types::GetItemOutput#consumed_capacity #consumed_capacity} => Types::ConsumedCapacity
  # @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/GetItem AWS API Documentation
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client.rb#3726
  def get_item(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Imports table data from an S3 bucket.
  #
  # @example Request syntax with placeholder values
  #
  #   resp = client.import_table({
  #   client_token: "ClientToken",
  #   s3_bucket_source: { # required
  #   s3_bucket_owner: "S3BucketOwner",
  #   s3_bucket: "S3Bucket", # required
  #   s3_key_prefix: "S3Prefix",
  #   },
  #   input_format: "DYNAMODB_JSON", # required, accepts DYNAMODB_JSON, ION, CSV
  #   input_format_options: {
  #   csv: {
  #   delimiter: "CsvDelimiter",
  #   header_list: ["CsvHeader"],
  #   },
  #   },
  #   input_compression_type: "GZIP", # accepts GZIP, ZSTD, NONE
  #   table_creation_parameters: { # required
  #   table_name: "TableName", # required
  #   attribute_definitions: [ # required
  #   {
  #   attribute_name: "KeySchemaAttributeName", # required
  #   attribute_type: "S", # required, accepts S, N, B
  #   },
  #   ],
  #   key_schema: [ # required
  #   {
  #   attribute_name: "KeySchemaAttributeName", # required
  #   key_type: "HASH", # required, accepts HASH, RANGE
  #   },
  #   ],
  #   billing_mode: "PROVISIONED", # accepts PROVISIONED, PAY_PER_REQUEST
  #   provisioned_throughput: {
  #   read_capacity_units: 1, # required
  #   write_capacity_units: 1, # required
  #   },
  #   sse_specification: {
  #   enabled: false,
  #   sse_type: "AES256", # accepts AES256, KMS
  #   kms_master_key_id: "KMSMasterKeyId",
  #   },
  #   global_secondary_indexes: [
  #   {
  #   index_name: "IndexName", # required
  #   key_schema: [ # required
  #   {
  #   attribute_name: "KeySchemaAttributeName", # required
  #   key_type: "HASH", # required, accepts HASH, RANGE
  #   },
  #   ],
  #   projection: { # required
  #   projection_type: "ALL", # accepts ALL, KEYS_ONLY, INCLUDE
  #   non_key_attributes: ["NonKeyAttributeName"],
  #   },
  #   provisioned_throughput: {
  #   read_capacity_units: 1, # required
  #   write_capacity_units: 1, # required
  #   },
  #   },
  #   ],
  #   },
  #   })
  # @example Response structure
  #
  #   resp.import_table_description.import_arn #=> String
  #   resp.import_table_description.import_status #=> String, one of "IN_PROGRESS", "COMPLETED", "CANCELLING", "CANCELLED", "FAILED"
  #   resp.import_table_description.table_arn #=> String
  #   resp.import_table_description.table_id #=> String
  #   resp.import_table_description.client_token #=> String
  #   resp.import_table_description.s3_bucket_source.s3_bucket_owner #=> String
  #   resp.import_table_description.s3_bucket_source.s3_bucket #=> String
  #   resp.import_table_description.s3_bucket_source.s3_key_prefix #=> String
  #   resp.import_table_description.error_count #=> Integer
  #   resp.import_table_description.cloud_watch_log_group_arn #=> String
  #   resp.import_table_description.input_format #=> String, one of "DYNAMODB_JSON", "ION", "CSV"
  #   resp.import_table_description.input_format_options.csv.delimiter #=> String
  #   resp.import_table_description.input_format_options.csv.header_list #=> Array
  #   resp.import_table_description.input_format_options.csv.header_list[0] #=> String
  #   resp.import_table_description.input_compression_type #=> String, one of "GZIP", "ZSTD", "NONE"
  #   resp.import_table_description.table_creation_parameters.table_name #=> String
  #   resp.import_table_description.table_creation_parameters.attribute_definitions #=> Array
  #   resp.import_table_description.table_creation_parameters.attribute_definitions[0].attribute_name #=> String
  #   resp.import_table_description.table_creation_parameters.attribute_definitions[0].attribute_type #=> String, one of "S", "N", "B"
  #   resp.import_table_description.table_creation_parameters.key_schema #=> Array
  #   resp.import_table_description.table_creation_parameters.key_schema[0].attribute_name #=> String
  #   resp.import_table_description.table_creation_parameters.key_schema[0].key_type #=> String, one of "HASH", "RANGE"
  #   resp.import_table_description.table_creation_parameters.billing_mode #=> String, one of "PROVISIONED", "PAY_PER_REQUEST"
  #   resp.import_table_description.table_creation_parameters.provisioned_throughput.read_capacity_units #=> Integer
  #   resp.import_table_description.table_creation_parameters.provisioned_throughput.write_capacity_units #=> Integer
  #   resp.import_table_description.table_creation_parameters.sse_specification.enabled #=> Boolean
  #   resp.import_table_description.table_creation_parameters.sse_specification.sse_type #=> String, one of "AES256", "KMS"
  #   resp.import_table_description.table_creation_parameters.sse_specification.kms_master_key_id #=> String
  #   resp.import_table_description.table_creation_parameters.global_secondary_indexes #=> Array
  #   resp.import_table_description.table_creation_parameters.global_secondary_indexes[0].index_name #=> String
  #   resp.import_table_description.table_creation_parameters.global_secondary_indexes[0].key_schema #=> Array
  #   resp.import_table_description.table_creation_parameters.global_secondary_indexes[0].key_schema[0].attribute_name #=> String
  #   resp.import_table_description.table_creation_parameters.global_secondary_indexes[0].key_schema[0].key_type #=> String, one of "HASH", "RANGE"
  #   resp.import_table_description.table_creation_parameters.global_secondary_indexes[0].projection.projection_type #=> String, one of "ALL", "KEYS_ONLY", "INCLUDE"
  #   resp.import_table_description.table_creation_parameters.global_secondary_indexes[0].projection.non_key_attributes #=> Array
  #   resp.import_table_description.table_creation_parameters.global_secondary_indexes[0].projection.non_key_attributes[0] #=> String
  #   resp.import_table_description.table_creation_parameters.global_secondary_indexes[0].provisioned_throughput.read_capacity_units #=> Integer
  #   resp.import_table_description.table_creation_parameters.global_secondary_indexes[0].provisioned_throughput.write_capacity_units #=> Integer
  #   resp.import_table_description.start_time #=> Time
  #   resp.import_table_description.end_time #=> Time
  #   resp.import_table_description.processed_size_bytes #=> Integer
  #   resp.import_table_description.processed_item_count #=> Integer
  #   resp.import_table_description.imported_item_count #=> Integer
  #   resp.import_table_description.failure_code #=> String
  #   resp.import_table_description.failure_message #=> String
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @overload import_table
  # @param params [Hash] ({})
  # @return [Types::ImportTableOutput] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::ImportTableOutput#import_table_description #import_table_description} => Types::ImportTableDescription
  # @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/ImportTable AWS API Documentation
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client.rb#3887
  def import_table(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # List DynamoDB backups that are associated with an Amazon Web Services
  # account and weren't made with Amazon Web Services Backup. To list
  # these backups for a given table, specify `TableName`. `ListBackups`
  # returns a paginated list of results with at most 1 MB worth of items
  # in a page. You can also specify a maximum number of entries to be
  # returned in a page.
  #
  # In the request, start time is inclusive, but end time is exclusive.
  # Note that these boundaries are for the time at which the original
  # backup was requested.
  #
  # You can call `ListBackups` a maximum of five times per second.
  #
  # If you want to retrieve the complete list of backups made with Amazon
  # Web Services Backup, use the [Amazon Web Services Backup list API.][1]
  #
  #
  #
  # [1]: https://docs.aws.amazon.com/aws-backup/latest/devguide/API_ListBackupJobs.html
  #
  # @example Request syntax with placeholder values
  #
  #   resp = client.list_backups({
  #   table_name: "TableName",
  #   limit: 1,
  #   time_range_lower_bound: Time.now,
  #   time_range_upper_bound: Time.now,
  #   exclusive_start_backup_arn: "BackupArn",
  #   backup_type: "USER", # accepts USER, SYSTEM, AWS_BACKUP, ALL
  #   })
  # @example Response structure
  #
  #   resp.backup_summaries #=> Array
  #   resp.backup_summaries[0].table_name #=> String
  #   resp.backup_summaries[0].table_id #=> String
  #   resp.backup_summaries[0].table_arn #=> String
  #   resp.backup_summaries[0].backup_arn #=> String
  #   resp.backup_summaries[0].backup_name #=> String
  #   resp.backup_summaries[0].backup_creation_date_time #=> Time
  #   resp.backup_summaries[0].backup_expiry_date_time #=> Time
  #   resp.backup_summaries[0].backup_status #=> String, one of "CREATING", "DELETED", "AVAILABLE"
  #   resp.backup_summaries[0].backup_type #=> String, one of "USER", "SYSTEM", "AWS_BACKUP"
  #   resp.backup_summaries[0].backup_size_bytes #=> Integer
  #   resp.last_evaluated_backup_arn #=> String
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @overload list_backups
  # @param params [Hash] ({})
  # @return [Types::ListBackupsOutput] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::ListBackupsOutput#backup_summaries #backup_summaries} => Array&lt;Types::BackupSummary&gt;
  #   * {Types::ListBackupsOutput#last_evaluated_backup_arn #last_evaluated_backup_arn} => String
  # @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/ListBackups AWS API Documentation
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client.rb#3980
  def list_backups(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Returns a list of ContributorInsightsSummary for a table and all its
  # global secondary indexes.
  #
  # The returned {Seahorse::Client::Response response} is a pageable response and is Enumerable. For details on usage see {Aws::PageableResponse PageableResponse}.
  #
  # @example Request syntax with placeholder values
  #
  #   resp = client.list_contributor_insights({
  #   table_name: "TableName",
  #   next_token: "NextTokenString",
  #   max_results: 1,
  #   })
  # @example Response structure
  #
  #   resp.contributor_insights_summaries #=> Array
  #   resp.contributor_insights_summaries[0].table_name #=> String
  #   resp.contributor_insights_summaries[0].index_name #=> String
  #   resp.contributor_insights_summaries[0].contributor_insights_status #=> String, one of "ENABLING", "ENABLED", "DISABLING", "DISABLED", "FAILED"
  #   resp.next_token #=> String
  # @option params
  # @option params
  # @option params
  # @overload list_contributor_insights
  # @param params [Hash] ({})
  # @return [Types::ListContributorInsightsOutput] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::ListContributorInsightsOutput#contributor_insights_summaries #contributor_insights_summaries} => Array&lt;Types::ContributorInsightsSummary&gt;
  #   * {Types::ListContributorInsightsOutput#next_token #next_token} => String
  # @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/ListContributorInsights AWS API Documentation
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client.rb#4024
  def list_contributor_insights(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Lists completed exports within the past 90 days.
  #
  # The returned {Seahorse::Client::Response response} is a pageable response and is Enumerable. For details on usage see {Aws::PageableResponse PageableResponse}.
  #
  # @example Request syntax with placeholder values
  #
  #   resp = client.list_exports({
  #   table_arn: "TableArn",
  #   max_results: 1,
  #   next_token: "ExportNextToken",
  #   })
  # @example Response structure
  #
  #   resp.export_summaries #=> Array
  #   resp.export_summaries[0].export_arn #=> String
  #   resp.export_summaries[0].export_status #=> String, one of "IN_PROGRESS", "COMPLETED", "FAILED"
  #   resp.export_summaries[0].export_type #=> String, one of "FULL_EXPORT", "INCREMENTAL_EXPORT"
  #   resp.next_token #=> String
  # @option params
  # @option params
  # @option params
  # @overload list_exports
  # @param params [Hash] ({})
  # @return [Types::ListExportsOutput] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::ListExportsOutput#export_summaries #export_summaries} => Array&lt;Types::ExportSummary&gt;
  #   * {Types::ListExportsOutput#next_token #next_token} => String
  # @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/ListExports AWS API Documentation
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client.rb#4069
  def list_exports(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Lists all global tables that have a replica in the specified Region.
  #
  # This operation only applies to [Version 2017.11.29 (Legacy)][1] of
  # global tables. We recommend using [Version 2019.11.21 (Current)][2]
  # when creating new global tables, as it provides greater flexibility,
  # higher efficiency and consumes less write capacity than 2017.11.29
  # (Legacy). To determine which version you are using, see [Determining
  # the version][3]. To update existing global tables from version
  # 2017.11.29 (Legacy) to version 2019.11.21 (Current), see [ Updating
  # global tables][4].
  #
  #
  #
  # [1]: https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/globaltables.V1.html
  # [2]: https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/globaltables.V2.html
  # [3]: https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/globaltables.DetermineVersion.html
  # [4]: https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/V2globaltables_upgrade.html
  #
  # @example Request syntax with placeholder values
  #
  #   resp = client.list_global_tables({
  #   exclusive_start_global_table_name: "TableName",
  #   limit: 1,
  #   region_name: "RegionName",
  #   })
  # @example Response structure
  #
  #   resp.global_tables #=> Array
  #   resp.global_tables[0].global_table_name #=> String
  #   resp.global_tables[0].replication_group #=> Array
  #   resp.global_tables[0].replication_group[0].region_name #=> String
  #   resp.last_evaluated_global_table_name #=> String
  # @option params
  # @option params
  # @option params
  # @overload list_global_tables
  # @param params [Hash] ({})
  # @return [Types::ListGlobalTablesOutput] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::ListGlobalTablesOutput#global_tables #global_tables} => Array&lt;Types::GlobalTable&gt;
  #   * {Types::ListGlobalTablesOutput#last_evaluated_global_table_name #last_evaluated_global_table_name} => String
  # @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/ListGlobalTables AWS API Documentation
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client.rb#4133
  def list_global_tables(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Lists completed imports within the past 90 days.
  #
  # The returned {Seahorse::Client::Response response} is a pageable response and is Enumerable. For details on usage see {Aws::PageableResponse PageableResponse}.
  #
  # @example Request syntax with placeholder values
  #
  #   resp = client.list_imports({
  #   table_arn: "TableArn",
  #   page_size: 1,
  #   next_token: "ImportNextToken",
  #   })
  # @example Response structure
  #
  #   resp.import_summary_list #=> Array
  #   resp.import_summary_list[0].import_arn #=> String
  #   resp.import_summary_list[0].import_status #=> String, one of "IN_PROGRESS", "COMPLETED", "CANCELLING", "CANCELLED", "FAILED"
  #   resp.import_summary_list[0].table_arn #=> String
  #   resp.import_summary_list[0].s3_bucket_source.s3_bucket_owner #=> String
  #   resp.import_summary_list[0].s3_bucket_source.s3_bucket #=> String
  #   resp.import_summary_list[0].s3_bucket_source.s3_key_prefix #=> String
  #   resp.import_summary_list[0].cloud_watch_log_group_arn #=> String
  #   resp.import_summary_list[0].input_format #=> String, one of "DYNAMODB_JSON", "ION", "CSV"
  #   resp.import_summary_list[0].start_time #=> Time
  #   resp.import_summary_list[0].end_time #=> Time
  #   resp.next_token #=> String
  # @option params
  # @option params
  # @option params
  # @overload list_imports
  # @param params [Hash] ({})
  # @return [Types::ListImportsOutput] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::ListImportsOutput#import_summary_list #import_summary_list} => Array&lt;Types::ImportSummary&gt;
  #   * {Types::ListImportsOutput#next_token #next_token} => String
  # @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/ListImports AWS API Documentation
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client.rb#4186
  def list_imports(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Returns an array of table names associated with the current account
  # and endpoint. The output from `ListTables` is paginated, with each
  # page returning a maximum of 100 table names.
  #
  # The returned {Seahorse::Client::Response response} is a pageable response and is Enumerable. For details on usage see {Aws::PageableResponse PageableResponse}.
  #
  # @example Example: To list tables
  #
  #   # This example lists all of the tables associated with the current AWS account and endpoint.
  #
  #   resp = client.list_tables({
  #   })
  #
  #   resp.to_h outputs the following:
  #   {
  #   table_names: [
  #   "Forum",
  #   "ProductCatalog",
  #   "Reply",
  #   "Thread",
  #   ],
  #   }
  # @example Request syntax with placeholder values
  #
  #   resp = client.list_tables({
  #   exclusive_start_table_name: "TableName",
  #   limit: 1,
  #   })
  # @example Response structure
  #
  #   resp.table_names #=> Array
  #   resp.table_names[0] #=> String
  #   resp.last_evaluated_table_name #=> String
  # @option params
  # @option params
  # @overload list_tables
  # @param params [Hash] ({})
  # @return [Types::ListTablesOutput] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::ListTablesOutput#table_names #table_names} => Array&lt;String&gt;
  #   * {Types::ListTablesOutput#last_evaluated_table_name #last_evaluated_table_name} => String
  # @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/ListTables AWS API Documentation
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client.rb#4246
  def list_tables(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # List all tags on an Amazon DynamoDB resource. You can call
  # ListTagsOfResource up to 10 times per second, per account.
  #
  # For an overview on tagging DynamoDB resources, see [Tagging for
  # DynamoDB][1] in the *Amazon DynamoDB Developer Guide*.
  #
  #
  #
  # [1]: https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Tagging.html
  #
  # @example Request syntax with placeholder values
  #
  #   resp = client.list_tags_of_resource({
  #   resource_arn: "ResourceArnString", # required
  #   next_token: "NextTokenString",
  #   })
  # @example Response structure
  #
  #   resp.tags #=> Array
  #   resp.tags[0].key #=> String
  #   resp.tags[0].value #=> String
  #   resp.next_token #=> String
  # @option params
  # @option params
  # @overload list_tags_of_resource
  # @param params [Hash] ({})
  # @return [Types::ListTagsOfResourceOutput] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::ListTagsOfResourceOutput#tags #tags} => Array&lt;Types::Tag&gt;
  #   * {Types::ListTagsOfResourceOutput#next_token #next_token} => String
  # @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/ListTagsOfResource AWS API Documentation
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client.rb#4293
  def list_tags_of_resource(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Creates a new item, or replaces an old item with a new item. If an
  # item that has the same primary key as the new item already exists in
  # the specified table, the new item completely replaces the existing
  # item. You can perform a conditional put operation (add a new item if
  # one with the specified primary key doesn't exist), or replace an
  # existing item if it has certain attribute values. You can return the
  # item's attribute values in the same operation, using the
  # `ReturnValues` parameter.
  #
  # When you add an item, the primary key attributes are the only required
  # attributes.
  #
  # Empty String and Binary attribute values are allowed. Attribute values
  # of type String and Binary must have a length greater than zero if the
  # attribute is used as a key attribute for a table or index. Set type
  # attributes cannot be empty.
  #
  # Invalid Requests with empty values will be rejected with a
  # `ValidationException` exception.
  #
  # <note markdown="1"> To prevent a new item from replacing an existing item, use a
  # conditional expression that contains the `attribute_not_exists`
  # function with the name of the attribute being used as the partition
  # key for the table. Since every record must contain that attribute, the
  # `attribute_not_exists` function will only succeed if no matching item
  # exists.
  #
  #  </note>
  #
  # For more information about `PutItem`, see [Working with Items][1] in
  # the *Amazon DynamoDB Developer Guide*.
  #
  #
  #
  # [1]: https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/WorkingWithItems.html
  #
  # @example Example: To add an item to a table
  #
  #   # This example adds a new item to the Music table.
  #
  #   resp = client.put_item({
  #   item: {
  #   "AlbumTitle" => "Somewhat Famous",
  #   "Artist" => "No One You Know",
  #   "SongTitle" => "Call Me Today",
  #   },
  #   return_consumed_capacity: "TOTAL",
  #   table_name: "Music",
  #   })
  #
  #   resp.to_h outputs the following:
  #   {
  #   consumed_capacity: {
  #   capacity_units: 1,
  #   table_name: "Music",
  #   },
  #   }
  # @example Request syntax with placeholder values
  #
  #   resp = client.put_item({
  #   table_name: "TableName", # required
  #   item: { # required
  #   "AttributeName" => "value", # value <Hash,Array,String,Numeric,Boolean,IO,Set,nil>
  #   },
  #   expected: {
  #   "AttributeName" => {
  #   value: "value", # value <Hash,Array,String,Numeric,Boolean,IO,Set,nil>
  #   exists: false,
  #   comparison_operator: "EQ", # accepts EQ, NE, IN, LE, LT, GE, GT, BETWEEN, NOT_NULL, NULL, CONTAINS, NOT_CONTAINS, BEGINS_WITH
  #   attribute_value_list: ["value"], # value <Hash,Array,String,Numeric,Boolean,IO,Set,nil>
  #   },
  #   },
  #   return_values: "NONE", # accepts NONE, ALL_OLD, UPDATED_OLD, ALL_NEW, UPDATED_NEW
  #   return_consumed_capacity: "INDEXES", # accepts INDEXES, TOTAL, NONE
  #   return_item_collection_metrics: "SIZE", # accepts SIZE, NONE
  #   conditional_operator: "AND", # accepts AND, OR
  #   condition_expression: "ConditionExpression",
  #   expression_attribute_names: {
  #   "ExpressionAttributeNameVariable" => "AttributeName",
  #   },
  #   expression_attribute_values: {
  #   "ExpressionAttributeValueVariable" => "value", # value <Hash,Array,String,Numeric,Boolean,IO,Set,nil>
  #   },
  #   return_values_on_condition_check_failure: "ALL_OLD", # accepts ALL_OLD, NONE
  #   })
  # @example Response structure
  #
  #   resp.attributes #=> Hash
  #   resp.attributes["AttributeName"] #=> <Hash,Array,String,Numeric,Boolean,IO,Set,nil>
  #   resp.consumed_capacity.table_name #=> String
  #   resp.consumed_capacity.capacity_units #=> Float
  #   resp.consumed_capacity.read_capacity_units #=> Float
  #   resp.consumed_capacity.write_capacity_units #=> Float
  #   resp.consumed_capacity.table.read_capacity_units #=> Float
  #   resp.consumed_capacity.table.write_capacity_units #=> Float
  #   resp.consumed_capacity.table.capacity_units #=> Float
  #   resp.consumed_capacity.local_secondary_indexes #=> Hash
  #   resp.consumed_capacity.local_secondary_indexes["IndexName"].read_capacity_units #=> Float
  #   resp.consumed_capacity.local_secondary_indexes["IndexName"].write_capacity_units #=> Float
  #   resp.consumed_capacity.local_secondary_indexes["IndexName"].capacity_units #=> Float
  #   resp.consumed_capacity.global_secondary_indexes #=> Hash
  #   resp.consumed_capacity.global_secondary_indexes["IndexName"].read_capacity_units #=> Float
  #   resp.consumed_capacity.global_secondary_indexes["IndexName"].write_capacity_units #=> Float
  #   resp.consumed_capacity.global_secondary_indexes["IndexName"].capacity_units #=> Float
  #   resp.item_collection_metrics.item_collection_key #=> Hash
  #   resp.item_collection_metrics.item_collection_key["AttributeName"] #=> <Hash,Array,String,Numeric,Boolean,IO,Set,nil>
  #   resp.item_collection_metrics.size_estimate_range_gb #=> Array
  #   resp.item_collection_metrics.size_estimate_range_gb[0] #=> Float
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @overload put_item
  # @param params [Hash] ({})
  # @return [Types::PutItemOutput] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::PutItemOutput#attributes #attributes} => Hash&lt;String,Types::AttributeValue&gt;
  #   * {Types::PutItemOutput#consumed_capacity #consumed_capacity} => Types::ConsumedCapacity
  #   * {Types::PutItemOutput#item_collection_metrics #item_collection_metrics} => Types::ItemCollectionMetrics
  # @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/PutItem AWS API Documentation
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client.rb#4621
  def put_item(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # You must provide the name of the partition key attribute and a single
  # value for that attribute. `Query` returns all items with that
  # partition key value. Optionally, you can provide a sort key attribute
  # and use a comparison operator to refine the search results.
  #
  # Use the `KeyConditionExpression` parameter to provide a specific value
  # for the partition key. The `Query` operation will return all of the
  # items from the table or index with that partition key value. You can
  # optionally narrow the scope of the `Query` operation by specifying a
  # sort key value and a comparison operator in `KeyConditionExpression`.
  # To further refine the `Query` results, you can optionally provide a
  # `FilterExpression`. A `FilterExpression` determines which items within
  # the results should be returned to you. All of the other results are
  # discarded.
  #
  # A `Query` operation always returns a result set. If no matching items
  # are found, the result set will be empty. Queries that do not return
  # results consume the minimum number of read capacity units for that
  # type of read operation.
  #
  # <note markdown="1"> DynamoDB calculates the number of read capacity units consumed based
  # on item size, not on the amount of data that is returned to an
  # application. The number of capacity units consumed will be the same
  # whether you request all of the attributes (the default behavior) or
  # just some of them (using a projection expression). The number will
  # also be the same whether or not you use a `FilterExpression`.
  #
  #  </note>
  #
  # `Query` results are always sorted by the sort key value. If the data
  # type of the sort key is Number, the results are returned in numeric
  # order; otherwise, the results are returned in order of UTF-8 bytes. By
  # default, the sort order is ascending. To reverse the order, set the
  # `ScanIndexForward` parameter to false.
  #
  # A single `Query` operation will read up to the maximum number of items
  # set (if using the `Limit` parameter) or a maximum of 1 MB of data and
  # then apply any filtering to the results using `FilterExpression`. If
  # `LastEvaluatedKey` is present in the response, you will need to
  # paginate the result set. For more information, see [Paginating the
  # Results][1] in the *Amazon DynamoDB Developer Guide*.
  #
  # `FilterExpression` is applied after a `Query` finishes, but before the
  # results are returned. A `FilterExpression` cannot contain partition
  # key or sort key attributes. You need to specify those attributes in
  # the `KeyConditionExpression`.
  #
  # <note markdown="1"> A `Query` operation can return an empty result set and a
  # `LastEvaluatedKey` if all the items read for the page of results are
  # filtered out.
  #
  #  </note>
  #
  # You can query a table, a local secondary index, or a global secondary
  # index. For a query on a table or on a local secondary index, you can
  # set the `ConsistentRead` parameter to `true` and obtain a strongly
  # consistent result. Global secondary indexes support eventually
  # consistent reads only, so do not specify `ConsistentRead` when
  # querying a global secondary index.
  #
  #
  #
  # [1]: https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Query.html#Query.Pagination
  #
  # The returned {Seahorse::Client::Response response} is a pageable response and is Enumerable. For details on usage see {Aws::PageableResponse PageableResponse}.
  #
  # @example Example: To query an item
  #
  #   # This example queries items in the Music table. The table has a partition key and sort key (Artist and SongTitle), but
  #   # this query only specifies the partition key value. It returns song titles by the artist named "No One You Know".
  #
  #   resp = client.query({
  #   expression_attribute_values: {
  #   ":v1" => "No One You Know",
  #   },
  #   key_condition_expression: "Artist = :v1",
  #   projection_expression: "SongTitle",
  #   table_name: "Music",
  #   })
  #
  #   resp.to_h outputs the following:
  #   {
  #   consumed_capacity: {
  #   },
  #   count: 2,
  #   items: [
  #   {
  #   "SongTitle" => "Call Me Today",
  #   },
  #   ],
  #   scanned_count: 2,
  #   }
  # @example Request syntax with placeholder values
  #
  #   resp = client.query({
  #   table_name: "TableName", # required
  #   index_name: "IndexName",
  #   select: "ALL_ATTRIBUTES", # accepts ALL_ATTRIBUTES, ALL_PROJECTED_ATTRIBUTES, SPECIFIC_ATTRIBUTES, COUNT
  #   attributes_to_get: ["AttributeName"],
  #   limit: 1,
  #   consistent_read: false,
  #   key_conditions: {
  #   "AttributeName" => {
  #   attribute_value_list: ["value"], # value <Hash,Array,String,Numeric,Boolean,IO,Set,nil>
  #   comparison_operator: "EQ", # required, accepts EQ, NE, IN, LE, LT, GE, GT, BETWEEN, NOT_NULL, NULL, CONTAINS, NOT_CONTAINS, BEGINS_WITH
  #   },
  #   },
  #   query_filter: {
  #   "AttributeName" => {
  #   attribute_value_list: ["value"], # value <Hash,Array,String,Numeric,Boolean,IO,Set,nil>
  #   comparison_operator: "EQ", # required, accepts EQ, NE, IN, LE, LT, GE, GT, BETWEEN, NOT_NULL, NULL, CONTAINS, NOT_CONTAINS, BEGINS_WITH
  #   },
  #   },
  #   conditional_operator: "AND", # accepts AND, OR
  #   scan_index_forward: false,
  #   exclusive_start_key: {
  #   "AttributeName" => "value", # value <Hash,Array,String,Numeric,Boolean,IO,Set,nil>
  #   },
  #   return_consumed_capacity: "INDEXES", # accepts INDEXES, TOTAL, NONE
  #   projection_expression: "ProjectionExpression",
  #   filter_expression: "ConditionExpression",
  #   key_condition_expression: "KeyExpression",
  #   expression_attribute_names: {
  #   "ExpressionAttributeNameVariable" => "AttributeName",
  #   },
  #   expression_attribute_values: {
  #   "ExpressionAttributeValueVariable" => "value", # value <Hash,Array,String,Numeric,Boolean,IO,Set,nil>
  #   },
  #   })
  # @example Response structure
  #
  #   resp.items #=> Array
  #   resp.items[0] #=> Hash
  #   resp.items[0]["AttributeName"] #=> <Hash,Array,String,Numeric,Boolean,IO,Set,nil>
  #   resp.count #=> Integer
  #   resp.scanned_count #=> Integer
  #   resp.last_evaluated_key #=> Hash
  #   resp.last_evaluated_key["AttributeName"] #=> <Hash,Array,String,Numeric,Boolean,IO,Set,nil>
  #   resp.consumed_capacity.table_name #=> String
  #   resp.consumed_capacity.capacity_units #=> Float
  #   resp.consumed_capacity.read_capacity_units #=> Float
  #   resp.consumed_capacity.write_capacity_units #=> Float
  #   resp.consumed_capacity.table.read_capacity_units #=> Float
  #   resp.consumed_capacity.table.write_capacity_units #=> Float
  #   resp.consumed_capacity.table.capacity_units #=> Float
  #   resp.consumed_capacity.local_secondary_indexes #=> Hash
  #   resp.consumed_capacity.local_secondary_indexes["IndexName"].read_capacity_units #=> Float
  #   resp.consumed_capacity.local_secondary_indexes["IndexName"].write_capacity_units #=> Float
  #   resp.consumed_capacity.local_secondary_indexes["IndexName"].capacity_units #=> Float
  #   resp.consumed_capacity.global_secondary_indexes #=> Hash
  #   resp.consumed_capacity.global_secondary_indexes["IndexName"].read_capacity_units #=> Float
  #   resp.consumed_capacity.global_secondary_indexes["IndexName"].write_capacity_units #=> Float
  #   resp.consumed_capacity.global_secondary_indexes["IndexName"].capacity_units #=> Float
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @overload query
  # @param params [Hash] ({})
  # @return [Types::QueryOutput] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::QueryOutput#items #items} => Array&lt;Hash&lt;String,Types::AttributeValue&gt;&gt;
  #   * {Types::QueryOutput#count #count} => Integer
  #   * {Types::QueryOutput#scanned_count #scanned_count} => Integer
  #   * {Types::QueryOutput#last_evaluated_key #last_evaluated_key} => Hash&lt;String,Types::AttributeValue&gt;
  #   * {Types::QueryOutput#consumed_capacity #consumed_capacity} => Types::ConsumedCapacity
  # @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/Query AWS API Documentation
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client.rb#5158
  def query(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Creates a new table from an existing backup. Any number of users can
  # execute up to 50 concurrent restores (any type of restore) in a given
  # account.
  #
  # You can call `RestoreTableFromBackup` at a maximum rate of 10 times
  # per second.
  #
  # You must manually set up the following on the restored table:
  #
  # * Auto scaling policies
  #
  # * IAM policies
  #
  # * Amazon CloudWatch metrics and alarms
  #
  # * Tags
  #
  # * Stream settings
  #
  # * Time to Live (TTL) settings
  #
  # @example Request syntax with placeholder values
  #
  #   resp = client.restore_table_from_backup({
  #   target_table_name: "TableName", # required
  #   backup_arn: "BackupArn", # required
  #   billing_mode_override: "PROVISIONED", # accepts PROVISIONED, PAY_PER_REQUEST
  #   global_secondary_index_override: [
  #   {
  #   index_name: "IndexName", # required
  #   key_schema: [ # required
  #   {
  #   attribute_name: "KeySchemaAttributeName", # required
  #   key_type: "HASH", # required, accepts HASH, RANGE
  #   },
  #   ],
  #   projection: { # required
  #   projection_type: "ALL", # accepts ALL, KEYS_ONLY, INCLUDE
  #   non_key_attributes: ["NonKeyAttributeName"],
  #   },
  #   provisioned_throughput: {
  #   read_capacity_units: 1, # required
  #   write_capacity_units: 1, # required
  #   },
  #   },
  #   ],
  #   local_secondary_index_override: [
  #   {
  #   index_name: "IndexName", # required
  #   key_schema: [ # required
  #   {
  #   attribute_name: "KeySchemaAttributeName", # required
  #   key_type: "HASH", # required, accepts HASH, RANGE
  #   },
  #   ],
  #   projection: { # required
  #   projection_type: "ALL", # accepts ALL, KEYS_ONLY, INCLUDE
  #   non_key_attributes: ["NonKeyAttributeName"],
  #   },
  #   },
  #   ],
  #   provisioned_throughput_override: {
  #   read_capacity_units: 1, # required
  #   write_capacity_units: 1, # required
  #   },
  #   sse_specification_override: {
  #   enabled: false,
  #   sse_type: "AES256", # accepts AES256, KMS
  #   kms_master_key_id: "KMSMasterKeyId",
  #   },
  #   })
  # @example Response structure
  #
  #   resp.table_description.attribute_definitions #=> Array
  #   resp.table_description.attribute_definitions[0].attribute_name #=> String
  #   resp.table_description.attribute_definitions[0].attribute_type #=> String, one of "S", "N", "B"
  #   resp.table_description.table_name #=> String
  #   resp.table_description.key_schema #=> Array
  #   resp.table_description.key_schema[0].attribute_name #=> String
  #   resp.table_description.key_schema[0].key_type #=> String, one of "HASH", "RANGE"
  #   resp.table_description.table_status #=> String, one of "CREATING", "UPDATING", "DELETING", "ACTIVE", "INACCESSIBLE_ENCRYPTION_CREDENTIALS", "ARCHIVING", "ARCHIVED"
  #   resp.table_description.creation_date_time #=> Time
  #   resp.table_description.provisioned_throughput.last_increase_date_time #=> Time
  #   resp.table_description.provisioned_throughput.last_decrease_date_time #=> Time
  #   resp.table_description.provisioned_throughput.number_of_decreases_today #=> Integer
  #   resp.table_description.provisioned_throughput.read_capacity_units #=> Integer
  #   resp.table_description.provisioned_throughput.write_capacity_units #=> Integer
  #   resp.table_description.table_size_bytes #=> Integer
  #   resp.table_description.item_count #=> Integer
  #   resp.table_description.table_arn #=> String
  #   resp.table_description.table_id #=> String
  #   resp.table_description.billing_mode_summary.billing_mode #=> String, one of "PROVISIONED", "PAY_PER_REQUEST"
  #   resp.table_description.billing_mode_summary.last_update_to_pay_per_request_date_time #=> Time
  #   resp.table_description.local_secondary_indexes #=> Array
  #   resp.table_description.local_secondary_indexes[0].index_name #=> String
  #   resp.table_description.local_secondary_indexes[0].key_schema #=> Array
  #   resp.table_description.local_secondary_indexes[0].key_schema[0].attribute_name #=> String
  #   resp.table_description.local_secondary_indexes[0].key_schema[0].key_type #=> String, one of "HASH", "RANGE"
  #   resp.table_description.local_secondary_indexes[0].projection.projection_type #=> String, one of "ALL", "KEYS_ONLY", "INCLUDE"
  #   resp.table_description.local_secondary_indexes[0].projection.non_key_attributes #=> Array
  #   resp.table_description.local_secondary_indexes[0].projection.non_key_attributes[0] #=> String
  #   resp.table_description.local_secondary_indexes[0].index_size_bytes #=> Integer
  #   resp.table_description.local_secondary_indexes[0].item_count #=> Integer
  #   resp.table_description.local_secondary_indexes[0].index_arn #=> String
  #   resp.table_description.global_secondary_indexes #=> Array
  #   resp.table_description.global_secondary_indexes[0].index_name #=> String
  #   resp.table_description.global_secondary_indexes[0].key_schema #=> Array
  #   resp.table_description.global_secondary_indexes[0].key_schema[0].attribute_name #=> String
  #   resp.table_description.global_secondary_indexes[0].key_schema[0].key_type #=> String, one of "HASH", "RANGE"
  #   resp.table_description.global_secondary_indexes[0].projection.projection_type #=> String, one of "ALL", "KEYS_ONLY", "INCLUDE"
  #   resp.table_description.global_secondary_indexes[0].projection.non_key_attributes #=> Array
  #   resp.table_description.global_secondary_indexes[0].projection.non_key_attributes[0] #=> String
  #   resp.table_description.global_secondary_indexes[0].index_status #=> String, one of "CREATING", "UPDATING", "DELETING", "ACTIVE"
  #   resp.table_description.global_secondary_indexes[0].backfilling #=> Boolean
  #   resp.table_description.global_secondary_indexes[0].provisioned_throughput.last_increase_date_time #=> Time
  #   resp.table_description.global_secondary_indexes[0].provisioned_throughput.last_decrease_date_time #=> Time
  #   resp.table_description.global_secondary_indexes[0].provisioned_throughput.number_of_decreases_today #=> Integer
  #   resp.table_description.global_secondary_indexes[0].provisioned_throughput.read_capacity_units #=> Integer
  #   resp.table_description.global_secondary_indexes[0].provisioned_throughput.write_capacity_units #=> Integer
  #   resp.table_description.global_secondary_indexes[0].index_size_bytes #=> Integer
  #   resp.table_description.global_secondary_indexes[0].item_count #=> Integer
  #   resp.table_description.global_secondary_indexes[0].index_arn #=> String
  #   resp.table_description.stream_specification.stream_enabled #=> Boolean
  #   resp.table_description.stream_specification.stream_view_type #=> String, one of "NEW_IMAGE", "OLD_IMAGE", "NEW_AND_OLD_IMAGES", "KEYS_ONLY"
  #   resp.table_description.latest_stream_label #=> String
  #   resp.table_description.latest_stream_arn #=> String
  #   resp.table_description.global_table_version #=> String
  #   resp.table_description.replicas #=> Array
  #   resp.table_description.replicas[0].region_name #=> String
  #   resp.table_description.replicas[0].replica_status #=> String, one of "CREATING", "CREATION_FAILED", "UPDATING", "DELETING", "ACTIVE", "REGION_DISABLED", "INACCESSIBLE_ENCRYPTION_CREDENTIALS"
  #   resp.table_description.replicas[0].replica_status_description #=> String
  #   resp.table_description.replicas[0].replica_status_percent_progress #=> String
  #   resp.table_description.replicas[0].kms_master_key_id #=> String
  #   resp.table_description.replicas[0].provisioned_throughput_override.read_capacity_units #=> Integer
  #   resp.table_description.replicas[0].global_secondary_indexes #=> Array
  #   resp.table_description.replicas[0].global_secondary_indexes[0].index_name #=> String
  #   resp.table_description.replicas[0].global_secondary_indexes[0].provisioned_throughput_override.read_capacity_units #=> Integer
  #   resp.table_description.replicas[0].replica_inaccessible_date_time #=> Time
  #   resp.table_description.replicas[0].replica_table_class_summary.table_class #=> String, one of "STANDARD", "STANDARD_INFREQUENT_ACCESS"
  #   resp.table_description.replicas[0].replica_table_class_summary.last_update_date_time #=> Time
  #   resp.table_description.restore_summary.source_backup_arn #=> String
  #   resp.table_description.restore_summary.source_table_arn #=> String
  #   resp.table_description.restore_summary.restore_date_time #=> Time
  #   resp.table_description.restore_summary.restore_in_progress #=> Boolean
  #   resp.table_description.sse_description.status #=> String, one of "ENABLING", "ENABLED", "DISABLING", "DISABLED", "UPDATING"
  #   resp.table_description.sse_description.sse_type #=> String, one of "AES256", "KMS"
  #   resp.table_description.sse_description.kms_master_key_arn #=> String
  #   resp.table_description.sse_description.inaccessible_encryption_date_time #=> Time
  #   resp.table_description.archival_summary.archival_date_time #=> Time
  #   resp.table_description.archival_summary.archival_reason #=> String
  #   resp.table_description.archival_summary.archival_backup_arn #=> String
  #   resp.table_description.table_class_summary.table_class #=> String, one of "STANDARD", "STANDARD_INFREQUENT_ACCESS"
  #   resp.table_description.table_class_summary.last_update_date_time #=> Time
  #   resp.table_description.deletion_protection_enabled #=> Boolean
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @overload restore_table_from_backup
  # @param params [Hash] ({})
  # @return [Types::RestoreTableFromBackupOutput] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::RestoreTableFromBackupOutput#table_description #table_description} => Types::TableDescription
  # @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/RestoreTableFromBackup AWS API Documentation
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client.rb#5352
  def restore_table_from_backup(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Restores the specified table to the specified point in time within
  # `EarliestRestorableDateTime` and `LatestRestorableDateTime`. You can
  # restore your table to any point in time during the last 35 days. Any
  # number of users can execute up to 4 concurrent restores (any type of
  # restore) in a given account.
  #
  # When you restore using point in time recovery, DynamoDB restores your
  # table data to the state based on the selected date and time
  # (day:hour:minute:second) to a new table.
  #
  # Along with data, the following are also included on the new restored
  # table using point in time recovery:
  #
  # * Global secondary indexes (GSIs)
  #
  # * Local secondary indexes (LSIs)
  #
  # * Provisioned read and write capacity
  #
  # * Encryption settings
  #
  #   All these settings come from the current settings of the source
  #   table at the time of restore.
  #
  # You must manually set up the following on the restored table:
  #
  # * Auto scaling policies
  #
  # * IAM policies
  #
  # * Amazon CloudWatch metrics and alarms
  #
  # * Tags
  #
  # * Stream settings
  #
  # * Time to Live (TTL) settings
  #
  # * Point in time recovery settings
  #
  # @example Request syntax with placeholder values
  #
  #   resp = client.restore_table_to_point_in_time({
  #   source_table_arn: "TableArn",
  #   source_table_name: "TableName",
  #   target_table_name: "TableName", # required
  #   use_latest_restorable_time: false,
  #   restore_date_time: Time.now,
  #   billing_mode_override: "PROVISIONED", # accepts PROVISIONED, PAY_PER_REQUEST
  #   global_secondary_index_override: [
  #   {
  #   index_name: "IndexName", # required
  #   key_schema: [ # required
  #   {
  #   attribute_name: "KeySchemaAttributeName", # required
  #   key_type: "HASH", # required, accepts HASH, RANGE
  #   },
  #   ],
  #   projection: { # required
  #   projection_type: "ALL", # accepts ALL, KEYS_ONLY, INCLUDE
  #   non_key_attributes: ["NonKeyAttributeName"],
  #   },
  #   provisioned_throughput: {
  #   read_capacity_units: 1, # required
  #   write_capacity_units: 1, # required
  #   },
  #   },
  #   ],
  #   local_secondary_index_override: [
  #   {
  #   index_name: "IndexName", # required
  #   key_schema: [ # required
  #   {
  #   attribute_name: "KeySchemaAttributeName", # required
  #   key_type: "HASH", # required, accepts HASH, RANGE
  #   },
  #   ],
  #   projection: { # required
  #   projection_type: "ALL", # accepts ALL, KEYS_ONLY, INCLUDE
  #   non_key_attributes: ["NonKeyAttributeName"],
  #   },
  #   },
  #   ],
  #   provisioned_throughput_override: {
  #   read_capacity_units: 1, # required
  #   write_capacity_units: 1, # required
  #   },
  #   sse_specification_override: {
  #   enabled: false,
  #   sse_type: "AES256", # accepts AES256, KMS
  #   kms_master_key_id: "KMSMasterKeyId",
  #   },
  #   })
  # @example Response structure
  #
  #   resp.table_description.attribute_definitions #=> Array
  #   resp.table_description.attribute_definitions[0].attribute_name #=> String
  #   resp.table_description.attribute_definitions[0].attribute_type #=> String, one of "S", "N", "B"
  #   resp.table_description.table_name #=> String
  #   resp.table_description.key_schema #=> Array
  #   resp.table_description.key_schema[0].attribute_name #=> String
  #   resp.table_description.key_schema[0].key_type #=> String, one of "HASH", "RANGE"
  #   resp.table_description.table_status #=> String, one of "CREATING", "UPDATING", "DELETING", "ACTIVE", "INACCESSIBLE_ENCRYPTION_CREDENTIALS", "ARCHIVING", "ARCHIVED"
  #   resp.table_description.creation_date_time #=> Time
  #   resp.table_description.provisioned_throughput.last_increase_date_time #=> Time
  #   resp.table_description.provisioned_throughput.last_decrease_date_time #=> Time
  #   resp.table_description.provisioned_throughput.number_of_decreases_today #=> Integer
  #   resp.table_description.provisioned_throughput.read_capacity_units #=> Integer
  #   resp.table_description.provisioned_throughput.write_capacity_units #=> Integer
  #   resp.table_description.table_size_bytes #=> Integer
  #   resp.table_description.item_count #=> Integer
  #   resp.table_description.table_arn #=> String
  #   resp.table_description.table_id #=> String
  #   resp.table_description.billing_mode_summary.billing_mode #=> String, one of "PROVISIONED", "PAY_PER_REQUEST"
  #   resp.table_description.billing_mode_summary.last_update_to_pay_per_request_date_time #=> Time
  #   resp.table_description.local_secondary_indexes #=> Array
  #   resp.table_description.local_secondary_indexes[0].index_name #=> String
  #   resp.table_description.local_secondary_indexes[0].key_schema #=> Array
  #   resp.table_description.local_secondary_indexes[0].key_schema[0].attribute_name #=> String
  #   resp.table_description.local_secondary_indexes[0].key_schema[0].key_type #=> String, one of "HASH", "RANGE"
  #   resp.table_description.local_secondary_indexes[0].projection.projection_type #=> String, one of "ALL", "KEYS_ONLY", "INCLUDE"
  #   resp.table_description.local_secondary_indexes[0].projection.non_key_attributes #=> Array
  #   resp.table_description.local_secondary_indexes[0].projection.non_key_attributes[0] #=> String
  #   resp.table_description.local_secondary_indexes[0].index_size_bytes #=> Integer
  #   resp.table_description.local_secondary_indexes[0].item_count #=> Integer
  #   resp.table_description.local_secondary_indexes[0].index_arn #=> String
  #   resp.table_description.global_secondary_indexes #=> Array
  #   resp.table_description.global_secondary_indexes[0].index_name #=> String
  #   resp.table_description.global_secondary_indexes[0].key_schema #=> Array
  #   resp.table_description.global_secondary_indexes[0].key_schema[0].attribute_name #=> String
  #   resp.table_description.global_secondary_indexes[0].key_schema[0].key_type #=> String, one of "HASH", "RANGE"
  #   resp.table_description.global_secondary_indexes[0].projection.projection_type #=> String, one of "ALL", "KEYS_ONLY", "INCLUDE"
  #   resp.table_description.global_secondary_indexes[0].projection.non_key_attributes #=> Array
  #   resp.table_description.global_secondary_indexes[0].projection.non_key_attributes[0] #=> String
  #   resp.table_description.global_secondary_indexes[0].index_status #=> String, one of "CREATING", "UPDATING", "DELETING", "ACTIVE"
  #   resp.table_description.global_secondary_indexes[0].backfilling #=> Boolean
  #   resp.table_description.global_secondary_indexes[0].provisioned_throughput.last_increase_date_time #=> Time
  #   resp.table_description.global_secondary_indexes[0].provisioned_throughput.last_decrease_date_time #=> Time
  #   resp.table_description.global_secondary_indexes[0].provisioned_throughput.number_of_decreases_today #=> Integer
  #   resp.table_description.global_secondary_indexes[0].provisioned_throughput.read_capacity_units #=> Integer
  #   resp.table_description.global_secondary_indexes[0].provisioned_throughput.write_capacity_units #=> Integer
  #   resp.table_description.global_secondary_indexes[0].index_size_bytes #=> Integer
  #   resp.table_description.global_secondary_indexes[0].item_count #=> Integer
  #   resp.table_description.global_secondary_indexes[0].index_arn #=> String
  #   resp.table_description.stream_specification.stream_enabled #=> Boolean
  #   resp.table_description.stream_specification.stream_view_type #=> String, one of "NEW_IMAGE", "OLD_IMAGE", "NEW_AND_OLD_IMAGES", "KEYS_ONLY"
  #   resp.table_description.latest_stream_label #=> String
  #   resp.table_description.latest_stream_arn #=> String
  #   resp.table_description.global_table_version #=> String
  #   resp.table_description.replicas #=> Array
  #   resp.table_description.replicas[0].region_name #=> String
  #   resp.table_description.replicas[0].replica_status #=> String, one of "CREATING", "CREATION_FAILED", "UPDATING", "DELETING", "ACTIVE", "REGION_DISABLED", "INACCESSIBLE_ENCRYPTION_CREDENTIALS"
  #   resp.table_description.replicas[0].replica_status_description #=> String
  #   resp.table_description.replicas[0].replica_status_percent_progress #=> String
  #   resp.table_description.replicas[0].kms_master_key_id #=> String
  #   resp.table_description.replicas[0].provisioned_throughput_override.read_capacity_units #=> Integer
  #   resp.table_description.replicas[0].global_secondary_indexes #=> Array
  #   resp.table_description.replicas[0].global_secondary_indexes[0].index_name #=> String
  #   resp.table_description.replicas[0].global_secondary_indexes[0].provisioned_throughput_override.read_capacity_units #=> Integer
  #   resp.table_description.replicas[0].replica_inaccessible_date_time #=> Time
  #   resp.table_description.replicas[0].replica_table_class_summary.table_class #=> String, one of "STANDARD", "STANDARD_INFREQUENT_ACCESS"
  #   resp.table_description.replicas[0].replica_table_class_summary.last_update_date_time #=> Time
  #   resp.table_description.restore_summary.source_backup_arn #=> String
  #   resp.table_description.restore_summary.source_table_arn #=> String
  #   resp.table_description.restore_summary.restore_date_time #=> Time
  #   resp.table_description.restore_summary.restore_in_progress #=> Boolean
  #   resp.table_description.sse_description.status #=> String, one of "ENABLING", "ENABLED", "DISABLING", "DISABLED", "UPDATING"
  #   resp.table_description.sse_description.sse_type #=> String, one of "AES256", "KMS"
  #   resp.table_description.sse_description.kms_master_key_arn #=> String
  #   resp.table_description.sse_description.inaccessible_encryption_date_time #=> Time
  #   resp.table_description.archival_summary.archival_date_time #=> Time
  #   resp.table_description.archival_summary.archival_reason #=> String
  #   resp.table_description.archival_summary.archival_backup_arn #=> String
  #   resp.table_description.table_class_summary.table_class #=> String, one of "STANDARD", "STANDARD_INFREQUENT_ACCESS"
  #   resp.table_description.table_class_summary.last_update_date_time #=> Time
  #   resp.table_description.deletion_protection_enabled #=> Boolean
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @overload restore_table_to_point_in_time
  # @param params [Hash] ({})
  # @return [Types::RestoreTableToPointInTimeOutput] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::RestoreTableToPointInTimeOutput#table_description #table_description} => Types::TableDescription
  # @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/RestoreTableToPointInTime AWS API Documentation
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client.rb#5580
  def restore_table_to_point_in_time(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # The `Scan` operation returns one or more items and item attributes by
  # accessing every item in a table or a secondary index. To have DynamoDB
  # return fewer items, you can provide a `FilterExpression` operation.
  #
  # If the total size of scanned items exceeds the maximum dataset size
  # limit of 1 MB, the scan completes and results are returned to the
  # user. The `LastEvaluatedKey` value is also returned and the requestor
  # can use the `LastEvaluatedKey` to continue the scan in a subsequent
  # operation. Each scan response also includes number of items that were
  # scanned (ScannedCount) as part of the request. If using a
  # `FilterExpression`, a scan result can result in no items meeting the
  # criteria and the `Count` will result in zero. If you did not use a
  # `FilterExpression` in the scan request, then `Count` is the same as
  # `ScannedCount`.
  #
  # <note markdown="1"> `Count` and `ScannedCount` only return the count of items specific to
  # a single scan request and, unless the table is less than 1MB, do not
  # represent the total number of items in the table.
  #
  #  </note>
  #
  # A single `Scan` operation first reads up to the maximum number of
  # items set (if using the `Limit` parameter) or a maximum of 1 MB of
  # data and then applies any filtering to the results if a
  # `FilterExpression` is provided. If `LastEvaluatedKey` is present in
  # the response, pagination is required to complete the full table scan.
  # For more information, see [Paginating the Results][1] in the *Amazon
  # DynamoDB Developer Guide*.
  #
  # `Scan` operations proceed sequentially; however, for faster
  # performance on a large table or secondary index, applications can
  # request a parallel `Scan` operation by providing the `Segment` and
  # `TotalSegments` parameters. For more information, see [Parallel
  # Scan][2] in the *Amazon DynamoDB Developer Guide*.
  #
  # By default, a `Scan` uses eventually consistent reads when accessing
  # the items in a table. Therefore, the results from an eventually
  # consistent `Scan` may not include the latest item changes at the time
  # the scan iterates through each item in the table. If you require a
  # strongly consistent read of each item as the scan iterates through the
  # items in the table, you can set the `ConsistentRead` parameter to
  # true. Strong consistency only relates to the consistency of the read
  # at the item level.
  #
  # <note markdown="1"> DynamoDB does not provide snapshot isolation for a scan operation when
  # the `ConsistentRead` parameter is set to true. Thus, a DynamoDB scan
  # operation does not guarantee that all reads in a scan see a consistent
  # snapshot of the table when the scan operation was requested.
  #
  #  </note>
  #
  #
  #
  # [1]: https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Scan.html#Scan.Pagination
  # [2]: https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Scan.html#Scan.ParallelScan
  #
  # The returned {Seahorse::Client::Response response} is a pageable response and is Enumerable. For details on usage see {Aws::PageableResponse PageableResponse}.
  #
  # @example Example: To scan a table
  #
  #   # This example scans the entire Music table, and then narrows the results to songs by the artist "No One You Know". For
  #   # each item, only the album title and song title are returned.
  #
  #   resp = client.scan({
  #   expression_attribute_names: {
  #   "#AT" => "AlbumTitle",
  #   "#ST" => "SongTitle",
  #   },
  #   expression_attribute_values: {
  #   ":a" => "No One You Know",
  #   },
  #   filter_expression: "Artist = :a",
  #   projection_expression: "#ST, #AT",
  #   table_name: "Music",
  #   })
  #
  #   resp.to_h outputs the following:
  #   {
  #   consumed_capacity: {
  #   },
  #   count: 2,
  #   items: [
  #   {
  #   "AlbumTitle" => "Somewhat Famous",
  #   "SongTitle" => "Call Me Today",
  #   },
  #   {
  #   "AlbumTitle" => "Blue Sky Blues",
  #   "SongTitle" => "Scared of My Shadow",
  #   },
  #   ],
  #   scanned_count: 3,
  #   }
  # @example Request syntax with placeholder values
  #
  #   resp = client.scan({
  #   table_name: "TableName", # required
  #   index_name: "IndexName",
  #   attributes_to_get: ["AttributeName"],
  #   limit: 1,
  #   select: "ALL_ATTRIBUTES", # accepts ALL_ATTRIBUTES, ALL_PROJECTED_ATTRIBUTES, SPECIFIC_ATTRIBUTES, COUNT
  #   scan_filter: {
  #   "AttributeName" => {
  #   attribute_value_list: ["value"], # value <Hash,Array,String,Numeric,Boolean,IO,Set,nil>
  #   comparison_operator: "EQ", # required, accepts EQ, NE, IN, LE, LT, GE, GT, BETWEEN, NOT_NULL, NULL, CONTAINS, NOT_CONTAINS, BEGINS_WITH
  #   },
  #   },
  #   conditional_operator: "AND", # accepts AND, OR
  #   exclusive_start_key: {
  #   "AttributeName" => "value", # value <Hash,Array,String,Numeric,Boolean,IO,Set,nil>
  #   },
  #   return_consumed_capacity: "INDEXES", # accepts INDEXES, TOTAL, NONE
  #   total_segments: 1,
  #   segment: 1,
  #   projection_expression: "ProjectionExpression",
  #   filter_expression: "ConditionExpression",
  #   expression_attribute_names: {
  #   "ExpressionAttributeNameVariable" => "AttributeName",
  #   },
  #   expression_attribute_values: {
  #   "ExpressionAttributeValueVariable" => "value", # value <Hash,Array,String,Numeric,Boolean,IO,Set,nil>
  #   },
  #   consistent_read: false,
  #   })
  # @example Response structure
  #
  #   resp.items #=> Array
  #   resp.items[0] #=> Hash
  #   resp.items[0]["AttributeName"] #=> <Hash,Array,String,Numeric,Boolean,IO,Set,nil>
  #   resp.count #=> Integer
  #   resp.scanned_count #=> Integer
  #   resp.last_evaluated_key #=> Hash
  #   resp.last_evaluated_key["AttributeName"] #=> <Hash,Array,String,Numeric,Boolean,IO,Set,nil>
  #   resp.consumed_capacity.table_name #=> String
  #   resp.consumed_capacity.capacity_units #=> Float
  #   resp.consumed_capacity.read_capacity_units #=> Float
  #   resp.consumed_capacity.write_capacity_units #=> Float
  #   resp.consumed_capacity.table.read_capacity_units #=> Float
  #   resp.consumed_capacity.table.write_capacity_units #=> Float
  #   resp.consumed_capacity.table.capacity_units #=> Float
  #   resp.consumed_capacity.local_secondary_indexes #=> Hash
  #   resp.consumed_capacity.local_secondary_indexes["IndexName"].read_capacity_units #=> Float
  #   resp.consumed_capacity.local_secondary_indexes["IndexName"].write_capacity_units #=> Float
  #   resp.consumed_capacity.local_secondary_indexes["IndexName"].capacity_units #=> Float
  #   resp.consumed_capacity.global_secondary_indexes #=> Hash
  #   resp.consumed_capacity.global_secondary_indexes["IndexName"].read_capacity_units #=> Float
  #   resp.consumed_capacity.global_secondary_indexes["IndexName"].write_capacity_units #=> Float
  #   resp.consumed_capacity.global_secondary_indexes["IndexName"].capacity_units #=> Float
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @overload scan
  # @param params [Hash] ({})
  # @return [Types::ScanOutput] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::ScanOutput#items #items} => Array&lt;Hash&lt;String,Types::AttributeValue&gt;&gt;
  #   * {Types::ScanOutput#count #count} => Integer
  #   * {Types::ScanOutput#scanned_count #scanned_count} => Integer
  #   * {Types::ScanOutput#last_evaluated_key #last_evaluated_key} => Hash&lt;String,Types::AttributeValue&gt;
  #   * {Types::ScanOutput#consumed_capacity #consumed_capacity} => Types::ConsumedCapacity
  # @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/Scan AWS API Documentation
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client.rb#6046
  def scan(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/customizations/client.rb#7
  def stub_data(operation_name, data = T.unsafe(nil)); end

  # Associate a set of tags with an Amazon DynamoDB resource. You can then
  # activate these user-defined tags so that they appear on the Billing
  # and Cost Management console for cost allocation tracking. You can call
  # TagResource up to five times per second, per account.
  #
  # For an overview on tagging DynamoDB resources, see [Tagging for
  # DynamoDB][1] in the *Amazon DynamoDB Developer Guide*.
  #
  #
  #
  # [1]: https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Tagging.html
  #
  # @example Request syntax with placeholder values
  #
  #   resp = client.tag_resource({
  #   resource_arn: "ResourceArnString", # required
  #   tags: [ # required
  #   {
  #   key: "TagKeyString", # required
  #   value: "TagValueString", # required
  #   },
  #   ],
  #   })
  # @option params
  # @option params
  # @overload tag_resource
  # @param params [Hash] ({})
  # @return [Struct] Returns an empty {Seahorse::Client::Response response}.
  # @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/TagResource AWS API Documentation
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client.rb#6088
  def tag_resource(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # `TransactGetItems` is a synchronous operation that atomically
  # retrieves multiple items from one or more tables (but not from
  # indexes) in a single account and Region. A `TransactGetItems` call can
  # contain up to 100 `TransactGetItem` objects, each of which contains a
  # `Get` structure that specifies an item to retrieve from a table in the
  # account and Region. A call to `TransactGetItems` cannot retrieve items
  # from tables in more than one Amazon Web Services account or Region.
  # The aggregate size of the items in the transaction cannot exceed 4 MB.
  #
  # DynamoDB rejects the entire `TransactGetItems` request if any of the
  # following is true:
  #
  # * A conflicting operation is in the process of updating an item to be
  #   read.
  #
  # * There is insufficient provisioned capacity for the transaction to be
  #   completed.
  #
  # * There is a user error, such as an invalid data format.
  #
  # * The aggregate size of the items in the transaction exceeded 4 MB.
  #
  # @example Request syntax with placeholder values
  #
  #   resp = client.transact_get_items({
  #   transact_items: [ # required
  #   {
  #   get: { # required
  #   key: { # required
  #   "AttributeName" => "value", # value <Hash,Array,String,Numeric,Boolean,IO,Set,nil>
  #   },
  #   table_name: "TableName", # required
  #   projection_expression: "ProjectionExpression",
  #   expression_attribute_names: {
  #   "ExpressionAttributeNameVariable" => "AttributeName",
  #   },
  #   },
  #   },
  #   ],
  #   return_consumed_capacity: "INDEXES", # accepts INDEXES, TOTAL, NONE
  #   })
  # @example Response structure
  #
  #   resp.consumed_capacity #=> Array
  #   resp.consumed_capacity[0].table_name #=> String
  #   resp.consumed_capacity[0].capacity_units #=> Float
  #   resp.consumed_capacity[0].read_capacity_units #=> Float
  #   resp.consumed_capacity[0].write_capacity_units #=> Float
  #   resp.consumed_capacity[0].table.read_capacity_units #=> Float
  #   resp.consumed_capacity[0].table.write_capacity_units #=> Float
  #   resp.consumed_capacity[0].table.capacity_units #=> Float
  #   resp.consumed_capacity[0].local_secondary_indexes #=> Hash
  #   resp.consumed_capacity[0].local_secondary_indexes["IndexName"].read_capacity_units #=> Float
  #   resp.consumed_capacity[0].local_secondary_indexes["IndexName"].write_capacity_units #=> Float
  #   resp.consumed_capacity[0].local_secondary_indexes["IndexName"].capacity_units #=> Float
  #   resp.consumed_capacity[0].global_secondary_indexes #=> Hash
  #   resp.consumed_capacity[0].global_secondary_indexes["IndexName"].read_capacity_units #=> Float
  #   resp.consumed_capacity[0].global_secondary_indexes["IndexName"].write_capacity_units #=> Float
  #   resp.consumed_capacity[0].global_secondary_indexes["IndexName"].capacity_units #=> Float
  #   resp.responses #=> Array
  #   resp.responses[0].item #=> Hash
  #   resp.responses[0].item["AttributeName"] #=> <Hash,Array,String,Numeric,Boolean,IO,Set,nil>
  # @option params
  # @option params
  # @overload transact_get_items
  # @param params [Hash] ({})
  # @return [Types::TransactGetItemsOutput] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::TransactGetItemsOutput#consumed_capacity #consumed_capacity} => Array&lt;Types::ConsumedCapacity&gt;
  #   * {Types::TransactGetItemsOutput#responses #responses} => Array&lt;Types::ItemResponse&gt;
  # @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/TransactGetItems AWS API Documentation
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client.rb#6175
  def transact_get_items(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # `TransactWriteItems` is a synchronous write operation that groups up
  # to 100 action requests. These actions can target items in different
  # tables, but not in different Amazon Web Services accounts or Regions,
  # and no two actions can target the same item. For example, you cannot
  # both `ConditionCheck` and `Update` the same item. The aggregate size
  # of the items in the transaction cannot exceed 4 MB.
  #
  # The actions are completed atomically so that either all of them
  # succeed, or all of them fail. They are defined by the following
  # objects:
  #
  # * `Put`  —   Initiates a `PutItem` operation to write a new item. This
  #   structure specifies the primary key of the item to be written, the
  #   name of the table to write it in, an optional condition expression
  #   that must be satisfied for the write to succeed, a list of the
  #   item's attributes, and a field indicating whether to retrieve the
  #   item's attributes if the condition is not met.
  #
  # * `Update`  —   Initiates an `UpdateItem` operation to update an
  #   existing item. This structure specifies the primary key of the item
  #   to be updated, the name of the table where it resides, an optional
  #   condition expression that must be satisfied for the update to
  #   succeed, an expression that defines one or more attributes to be
  #   updated, and a field indicating whether to retrieve the item's
  #   attributes if the condition is not met.
  #
  # * `Delete`  —   Initiates a `DeleteItem` operation to delete an
  #   existing item. This structure specifies the primary key of the item
  #   to be deleted, the name of the table where it resides, an optional
  #   condition expression that must be satisfied for the deletion to
  #   succeed, and a field indicating whether to retrieve the item's
  #   attributes if the condition is not met.
  #
  # * `ConditionCheck`  —   Applies a condition to an item that is not
  #   being modified by the transaction. This structure specifies the
  #   primary key of the item to be checked, the name of the table where
  #   it resides, a condition expression that must be satisfied for the
  #   transaction to succeed, and a field indicating whether to retrieve
  #   the item's attributes if the condition is not met.
  #
  # DynamoDB rejects the entire `TransactWriteItems` request if any of the
  # following is true:
  #
  # * A condition in one of the condition expressions is not met.
  #
  # * An ongoing operation is in the process of updating the same item.
  #
  # * There is insufficient provisioned capacity for the transaction to be
  #   completed.
  #
  # * An item size becomes too large (bigger than 400 KB), a local
  #   secondary index (LSI) becomes too large, or a similar validation
  #   error occurs because of changes made by the transaction.
  #
  # * The aggregate size of the items in the transaction exceeds 4 MB.
  #
  # * There is a user error, such as an invalid data format.
  #
  # @example Request syntax with placeholder values
  #
  #   resp = client.transact_write_items({
  #   transact_items: [ # required
  #   {
  #   condition_check: {
  #   key: { # required
  #   "AttributeName" => "value", # value <Hash,Array,String,Numeric,Boolean,IO,Set,nil>
  #   },
  #   table_name: "TableName", # required
  #   condition_expression: "ConditionExpression", # required
  #   expression_attribute_names: {
  #   "ExpressionAttributeNameVariable" => "AttributeName",
  #   },
  #   expression_attribute_values: {
  #   "ExpressionAttributeValueVariable" => "value", # value <Hash,Array,String,Numeric,Boolean,IO,Set,nil>
  #   },
  #   return_values_on_condition_check_failure: "ALL_OLD", # accepts ALL_OLD, NONE
  #   },
  #   put: {
  #   item: { # required
  #   "AttributeName" => "value", # value <Hash,Array,String,Numeric,Boolean,IO,Set,nil>
  #   },
  #   table_name: "TableName", # required
  #   condition_expression: "ConditionExpression",
  #   expression_attribute_names: {
  #   "ExpressionAttributeNameVariable" => "AttributeName",
  #   },
  #   expression_attribute_values: {
  #   "ExpressionAttributeValueVariable" => "value", # value <Hash,Array,String,Numeric,Boolean,IO,Set,nil>
  #   },
  #   return_values_on_condition_check_failure: "ALL_OLD", # accepts ALL_OLD, NONE
  #   },
  #   delete: {
  #   key: { # required
  #   "AttributeName" => "value", # value <Hash,Array,String,Numeric,Boolean,IO,Set,nil>
  #   },
  #   table_name: "TableName", # required
  #   condition_expression: "ConditionExpression",
  #   expression_attribute_names: {
  #   "ExpressionAttributeNameVariable" => "AttributeName",
  #   },
  #   expression_attribute_values: {
  #   "ExpressionAttributeValueVariable" => "value", # value <Hash,Array,String,Numeric,Boolean,IO,Set,nil>
  #   },
  #   return_values_on_condition_check_failure: "ALL_OLD", # accepts ALL_OLD, NONE
  #   },
  #   update: {
  #   key: { # required
  #   "AttributeName" => "value", # value <Hash,Array,String,Numeric,Boolean,IO,Set,nil>
  #   },
  #   update_expression: "UpdateExpression", # required
  #   table_name: "TableName", # required
  #   condition_expression: "ConditionExpression",
  #   expression_attribute_names: {
  #   "ExpressionAttributeNameVariable" => "AttributeName",
  #   },
  #   expression_attribute_values: {
  #   "ExpressionAttributeValueVariable" => "value", # value <Hash,Array,String,Numeric,Boolean,IO,Set,nil>
  #   },
  #   return_values_on_condition_check_failure: "ALL_OLD", # accepts ALL_OLD, NONE
  #   },
  #   },
  #   ],
  #   return_consumed_capacity: "INDEXES", # accepts INDEXES, TOTAL, NONE
  #   return_item_collection_metrics: "SIZE", # accepts SIZE, NONE
  #   client_request_token: "ClientRequestToken",
  #   })
  # @example Response structure
  #
  #   resp.consumed_capacity #=> Array
  #   resp.consumed_capacity[0].table_name #=> String
  #   resp.consumed_capacity[0].capacity_units #=> Float
  #   resp.consumed_capacity[0].read_capacity_units #=> Float
  #   resp.consumed_capacity[0].write_capacity_units #=> Float
  #   resp.consumed_capacity[0].table.read_capacity_units #=> Float
  #   resp.consumed_capacity[0].table.write_capacity_units #=> Float
  #   resp.consumed_capacity[0].table.capacity_units #=> Float
  #   resp.consumed_capacity[0].local_secondary_indexes #=> Hash
  #   resp.consumed_capacity[0].local_secondary_indexes["IndexName"].read_capacity_units #=> Float
  #   resp.consumed_capacity[0].local_secondary_indexes["IndexName"].write_capacity_units #=> Float
  #   resp.consumed_capacity[0].local_secondary_indexes["IndexName"].capacity_units #=> Float
  #   resp.consumed_capacity[0].global_secondary_indexes #=> Hash
  #   resp.consumed_capacity[0].global_secondary_indexes["IndexName"].read_capacity_units #=> Float
  #   resp.consumed_capacity[0].global_secondary_indexes["IndexName"].write_capacity_units #=> Float
  #   resp.consumed_capacity[0].global_secondary_indexes["IndexName"].capacity_units #=> Float
  #   resp.item_collection_metrics #=> Hash
  #   resp.item_collection_metrics["TableName"] #=> Array
  #   resp.item_collection_metrics["TableName"][0].item_collection_key #=> Hash
  #   resp.item_collection_metrics["TableName"][0].item_collection_key["AttributeName"] #=> <Hash,Array,String,Numeric,Boolean,IO,Set,nil>
  #   resp.item_collection_metrics["TableName"][0].size_estimate_range_gb #=> Array
  #   resp.item_collection_metrics["TableName"][0].size_estimate_range_gb[0] #=> Float
  # @option params
  # @option params
  # @option params
  # @option params
  # @overload transact_write_items
  # @param params [Hash] ({})
  # @return [Types::TransactWriteItemsOutput] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::TransactWriteItemsOutput#consumed_capacity #consumed_capacity} => Array&lt;Types::ConsumedCapacity&gt;
  #   * {Types::TransactWriteItemsOutput#item_collection_metrics #item_collection_metrics} => Hash&lt;String,Array&lt;Types::ItemCollectionMetrics&gt;&gt;
  # @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/TransactWriteItems AWS API Documentation
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client.rb#6397
  def transact_write_items(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Removes the association of tags from an Amazon DynamoDB resource. You
  # can call `UntagResource` up to five times per second, per account.
  #
  # For an overview on tagging DynamoDB resources, see [Tagging for
  # DynamoDB][1] in the *Amazon DynamoDB Developer Guide*.
  #
  #
  #
  # [1]: https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Tagging.html
  #
  # @example Request syntax with placeholder values
  #
  #   resp = client.untag_resource({
  #   resource_arn: "ResourceArnString", # required
  #   tag_keys: ["TagKeyString"], # required
  #   })
  # @option params
  # @option params
  # @overload untag_resource
  # @param params [Hash] ({})
  # @return [Struct] Returns an empty {Seahorse::Client::Response response}.
  # @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/UntagResource AWS API Documentation
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client.rb#6433
  def untag_resource(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # `UpdateContinuousBackups` enables or disables point in time recovery
  # for the specified table. A successful `UpdateContinuousBackups` call
  # returns the current `ContinuousBackupsDescription`. Continuous backups
  # are `ENABLED` on all tables at table creation. If point in time
  # recovery is enabled, `PointInTimeRecoveryStatus` will be set to
  # ENABLED.
  #
  # Once continuous backups and point in time recovery are enabled, you
  # can restore to any point in time within `EarliestRestorableDateTime`
  # and `LatestRestorableDateTime`.
  #
  # `LatestRestorableDateTime` is typically 5 minutes before the current
  # time. You can restore your table to any point in time during the last
  # 35 days.
  #
  # @example Request syntax with placeholder values
  #
  #   resp = client.update_continuous_backups({
  #   table_name: "TableName", # required
  #   point_in_time_recovery_specification: { # required
  #   point_in_time_recovery_enabled: false, # required
  #   },
  #   })
  # @example Response structure
  #
  #   resp.continuous_backups_description.continuous_backups_status #=> String, one of "ENABLED", "DISABLED"
  #   resp.continuous_backups_description.point_in_time_recovery_description.point_in_time_recovery_status #=> String, one of "ENABLED", "DISABLED"
  #   resp.continuous_backups_description.point_in_time_recovery_description.earliest_restorable_date_time #=> Time
  #   resp.continuous_backups_description.point_in_time_recovery_description.latest_restorable_date_time #=> Time
  # @option params
  # @option params
  # @overload update_continuous_backups
  # @param params [Hash] ({})
  # @return [Types::UpdateContinuousBackupsOutput] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::UpdateContinuousBackupsOutput#continuous_backups_description #continuous_backups_description} => Types::ContinuousBackupsDescription
  # @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/UpdateContinuousBackups AWS API Documentation
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client.rb#6483
  def update_continuous_backups(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Updates the status for contributor insights for a specific table or
  # index. CloudWatch Contributor Insights for DynamoDB graphs display the
  # partition key and (if applicable) sort key of frequently accessed
  # items and frequently throttled items in plaintext. If you require the
  # use of Amazon Web Services Key Management Service (KMS) to encrypt
  # this table’s partition key and sort key data with an Amazon Web
  # Services managed key or customer managed key, you should not enable
  # CloudWatch Contributor Insights for DynamoDB for this table.
  #
  # @example Request syntax with placeholder values
  #
  #   resp = client.update_contributor_insights({
  #   table_name: "TableName", # required
  #   index_name: "IndexName",
  #   contributor_insights_action: "ENABLE", # required, accepts ENABLE, DISABLE
  #   })
  # @example Response structure
  #
  #   resp.table_name #=> String
  #   resp.index_name #=> String
  #   resp.contributor_insights_status #=> String, one of "ENABLING", "ENABLED", "DISABLING", "DISABLED", "FAILED"
  # @option params
  # @option params
  # @option params
  # @overload update_contributor_insights
  # @param params [Hash] ({})
  # @return [Types::UpdateContributorInsightsOutput] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::UpdateContributorInsightsOutput#table_name #table_name} => String
  #   * {Types::UpdateContributorInsightsOutput#index_name #index_name} => String
  #   * {Types::UpdateContributorInsightsOutput#contributor_insights_status #contributor_insights_status} => String
  # @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/UpdateContributorInsights AWS API Documentation
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client.rb#6530
  def update_contributor_insights(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Adds or removes replicas in the specified global table. The global
  # table must already exist to be able to use this operation. Any replica
  # to be added must be empty, have the same name as the global table,
  # have the same key schema, have DynamoDB Streams enabled, and have the
  # same provisioned and maximum write capacity units.
  #
  # This operation only applies to [Version 2017.11.29 (Legacy)][1] of
  # global tables. We recommend using [Version 2019.11.21 (Current)][2]
  # when creating new global tables, as it provides greater flexibility,
  # higher efficiency and consumes less write capacity than 2017.11.29
  # (Legacy). To determine which version you are using, see [Determining
  # the version][3]. To update existing global tables from version
  # 2017.11.29 (Legacy) to version 2019.11.21 (Current), see [ Updating
  # global tables][4].
  #
  # <note markdown="1"> This operation only applies to [Version 2017.11.29][1] of global
  # tables. If you are using global tables [Version 2019.11.21][2] you can
  # use [DescribeTable][5] instead.
  #
  #  Although you can use `UpdateGlobalTable` to add replicas and remove
  # replicas in a single request, for simplicity we recommend that you
  # issue separate requests for adding or removing replicas.
  #
  #  </note>
  #
  # If global secondary indexes are specified, then the following
  # conditions must also be met:
  #
  # * The global secondary indexes must have the same name.
  #
  # * The global secondary indexes must have the same hash key and sort
  #   key (if present).
  #
  # * The global secondary indexes must have the same provisioned and
  #   maximum write capacity units.
  #
  #
  #
  # [1]: https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/globaltables.V1.html
  # [2]: https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/globaltables.V2.html
  # [3]: https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/globaltables.DetermineVersion.html
  # [4]: https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/V2globaltables_upgrade.html
  # [5]: https://docs.aws.amazon.com/amazondynamodb/latest/APIReference/API_DescribeTable.html
  #
  # @example Request syntax with placeholder values
  #
  #   resp = client.update_global_table({
  #   global_table_name: "TableName", # required
  #   replica_updates: [ # required
  #   {
  #   create: {
  #   region_name: "RegionName", # required
  #   },
  #   delete: {
  #   region_name: "RegionName", # required
  #   },
  #   },
  #   ],
  #   })
  # @example Response structure
  #
  #   resp.global_table_description.replication_group #=> Array
  #   resp.global_table_description.replication_group[0].region_name #=> String
  #   resp.global_table_description.replication_group[0].replica_status #=> String, one of "CREATING", "CREATION_FAILED", "UPDATING", "DELETING", "ACTIVE", "REGION_DISABLED", "INACCESSIBLE_ENCRYPTION_CREDENTIALS"
  #   resp.global_table_description.replication_group[0].replica_status_description #=> String
  #   resp.global_table_description.replication_group[0].replica_status_percent_progress #=> String
  #   resp.global_table_description.replication_group[0].kms_master_key_id #=> String
  #   resp.global_table_description.replication_group[0].provisioned_throughput_override.read_capacity_units #=> Integer
  #   resp.global_table_description.replication_group[0].global_secondary_indexes #=> Array
  #   resp.global_table_description.replication_group[0].global_secondary_indexes[0].index_name #=> String
  #   resp.global_table_description.replication_group[0].global_secondary_indexes[0].provisioned_throughput_override.read_capacity_units #=> Integer
  #   resp.global_table_description.replication_group[0].replica_inaccessible_date_time #=> Time
  #   resp.global_table_description.replication_group[0].replica_table_class_summary.table_class #=> String, one of "STANDARD", "STANDARD_INFREQUENT_ACCESS"
  #   resp.global_table_description.replication_group[0].replica_table_class_summary.last_update_date_time #=> Time
  #   resp.global_table_description.global_table_arn #=> String
  #   resp.global_table_description.creation_date_time #=> Time
  #   resp.global_table_description.global_table_status #=> String, one of "CREATING", "ACTIVE", "DELETING", "UPDATING"
  #   resp.global_table_description.global_table_name #=> String
  # @option params
  # @option params
  # @overload update_global_table
  # @param params [Hash] ({})
  # @return [Types::UpdateGlobalTableOutput] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::UpdateGlobalTableOutput#global_table_description #global_table_description} => Types::GlobalTableDescription
  # @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/UpdateGlobalTable AWS API Documentation
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client.rb#6630
  def update_global_table(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Updates settings for a global table.
  #
  # This operation only applies to [Version 2017.11.29 (Legacy)][1] of
  # global tables. We recommend using [Version 2019.11.21 (Current)][2]
  # when creating new global tables, as it provides greater flexibility,
  # higher efficiency and consumes less write capacity than 2017.11.29
  # (Legacy). To determine which version you are using, see [Determining
  # the version][3]. To update existing global tables from version
  # 2017.11.29 (Legacy) to version 2019.11.21 (Current), see [ Updating
  # global tables][4].
  #
  #
  #
  # [1]: https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/globaltables.V1.html
  # [2]: https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/globaltables.V2.html
  # [3]: https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/globaltables.DetermineVersion.html
  # [4]: https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/V2globaltables_upgrade.html
  #
  # @example Request syntax with placeholder values
  #
  #   resp = client.update_global_table_settings({
  #   global_table_name: "TableName", # required
  #   global_table_billing_mode: "PROVISIONED", # accepts PROVISIONED, PAY_PER_REQUEST
  #   global_table_provisioned_write_capacity_units: 1,
  #   global_table_provisioned_write_capacity_auto_scaling_settings_update: {
  #   minimum_units: 1,
  #   maximum_units: 1,
  #   auto_scaling_disabled: false,
  #   auto_scaling_role_arn: "AutoScalingRoleArn",
  #   scaling_policy_update: {
  #   policy_name: "AutoScalingPolicyName",
  #   target_tracking_scaling_policy_configuration: { # required
  #   disable_scale_in: false,
  #   scale_in_cooldown: 1,
  #   scale_out_cooldown: 1,
  #   target_value: 1.0, # required
  #   },
  #   },
  #   },
  #   global_table_global_secondary_index_settings_update: [
  #   {
  #   index_name: "IndexName", # required
  #   provisioned_write_capacity_units: 1,
  #   provisioned_write_capacity_auto_scaling_settings_update: {
  #   minimum_units: 1,
  #   maximum_units: 1,
  #   auto_scaling_disabled: false,
  #   auto_scaling_role_arn: "AutoScalingRoleArn",
  #   scaling_policy_update: {
  #   policy_name: "AutoScalingPolicyName",
  #   target_tracking_scaling_policy_configuration: { # required
  #   disable_scale_in: false,
  #   scale_in_cooldown: 1,
  #   scale_out_cooldown: 1,
  #   target_value: 1.0, # required
  #   },
  #   },
  #   },
  #   },
  #   ],
  #   replica_settings_update: [
  #   {
  #   region_name: "RegionName", # required
  #   replica_provisioned_read_capacity_units: 1,
  #   replica_provisioned_read_capacity_auto_scaling_settings_update: {
  #   minimum_units: 1,
  #   maximum_units: 1,
  #   auto_scaling_disabled: false,
  #   auto_scaling_role_arn: "AutoScalingRoleArn",
  #   scaling_policy_update: {
  #   policy_name: "AutoScalingPolicyName",
  #   target_tracking_scaling_policy_configuration: { # required
  #   disable_scale_in: false,
  #   scale_in_cooldown: 1,
  #   scale_out_cooldown: 1,
  #   target_value: 1.0, # required
  #   },
  #   },
  #   },
  #   replica_global_secondary_index_settings_update: [
  #   {
  #   index_name: "IndexName", # required
  #   provisioned_read_capacity_units: 1,
  #   provisioned_read_capacity_auto_scaling_settings_update: {
  #   minimum_units: 1,
  #   maximum_units: 1,
  #   auto_scaling_disabled: false,
  #   auto_scaling_role_arn: "AutoScalingRoleArn",
  #   scaling_policy_update: {
  #   policy_name: "AutoScalingPolicyName",
  #   target_tracking_scaling_policy_configuration: { # required
  #   disable_scale_in: false,
  #   scale_in_cooldown: 1,
  #   scale_out_cooldown: 1,
  #   target_value: 1.0, # required
  #   },
  #   },
  #   },
  #   },
  #   ],
  #   replica_table_class: "STANDARD", # accepts STANDARD, STANDARD_INFREQUENT_ACCESS
  #   },
  #   ],
  #   })
  # @example Response structure
  #
  #   resp.global_table_name #=> String
  #   resp.replica_settings #=> Array
  #   resp.replica_settings[0].region_name #=> String
  #   resp.replica_settings[0].replica_status #=> String, one of "CREATING", "CREATION_FAILED", "UPDATING", "DELETING", "ACTIVE", "REGION_DISABLED", "INACCESSIBLE_ENCRYPTION_CREDENTIALS"
  #   resp.replica_settings[0].replica_billing_mode_summary.billing_mode #=> String, one of "PROVISIONED", "PAY_PER_REQUEST"
  #   resp.replica_settings[0].replica_billing_mode_summary.last_update_to_pay_per_request_date_time #=> Time
  #   resp.replica_settings[0].replica_provisioned_read_capacity_units #=> Integer
  #   resp.replica_settings[0].replica_provisioned_read_capacity_auto_scaling_settings.minimum_units #=> Integer
  #   resp.replica_settings[0].replica_provisioned_read_capacity_auto_scaling_settings.maximum_units #=> Integer
  #   resp.replica_settings[0].replica_provisioned_read_capacity_auto_scaling_settings.auto_scaling_disabled #=> Boolean
  #   resp.replica_settings[0].replica_provisioned_read_capacity_auto_scaling_settings.auto_scaling_role_arn #=> String
  #   resp.replica_settings[0].replica_provisioned_read_capacity_auto_scaling_settings.scaling_policies #=> Array
  #   resp.replica_settings[0].replica_provisioned_read_capacity_auto_scaling_settings.scaling_policies[0].policy_name #=> String
  #   resp.replica_settings[0].replica_provisioned_read_capacity_auto_scaling_settings.scaling_policies[0].target_tracking_scaling_policy_configuration.disable_scale_in #=> Boolean
  #   resp.replica_settings[0].replica_provisioned_read_capacity_auto_scaling_settings.scaling_policies[0].target_tracking_scaling_policy_configuration.scale_in_cooldown #=> Integer
  #   resp.replica_settings[0].replica_provisioned_read_capacity_auto_scaling_settings.scaling_policies[0].target_tracking_scaling_policy_configuration.scale_out_cooldown #=> Integer
  #   resp.replica_settings[0].replica_provisioned_read_capacity_auto_scaling_settings.scaling_policies[0].target_tracking_scaling_policy_configuration.target_value #=> Float
  #   resp.replica_settings[0].replica_provisioned_write_capacity_units #=> Integer
  #   resp.replica_settings[0].replica_provisioned_write_capacity_auto_scaling_settings.minimum_units #=> Integer
  #   resp.replica_settings[0].replica_provisioned_write_capacity_auto_scaling_settings.maximum_units #=> Integer
  #   resp.replica_settings[0].replica_provisioned_write_capacity_auto_scaling_settings.auto_scaling_disabled #=> Boolean
  #   resp.replica_settings[0].replica_provisioned_write_capacity_auto_scaling_settings.auto_scaling_role_arn #=> String
  #   resp.replica_settings[0].replica_provisioned_write_capacity_auto_scaling_settings.scaling_policies #=> Array
  #   resp.replica_settings[0].replica_provisioned_write_capacity_auto_scaling_settings.scaling_policies[0].policy_name #=> String
  #   resp.replica_settings[0].replica_provisioned_write_capacity_auto_scaling_settings.scaling_policies[0].target_tracking_scaling_policy_configuration.disable_scale_in #=> Boolean
  #   resp.replica_settings[0].replica_provisioned_write_capacity_auto_scaling_settings.scaling_policies[0].target_tracking_scaling_policy_configuration.scale_in_cooldown #=> Integer
  #   resp.replica_settings[0].replica_provisioned_write_capacity_auto_scaling_settings.scaling_policies[0].target_tracking_scaling_policy_configuration.scale_out_cooldown #=> Integer
  #   resp.replica_settings[0].replica_provisioned_write_capacity_auto_scaling_settings.scaling_policies[0].target_tracking_scaling_policy_configuration.target_value #=> Float
  #   resp.replica_settings[0].replica_global_secondary_index_settings #=> Array
  #   resp.replica_settings[0].replica_global_secondary_index_settings[0].index_name #=> String
  #   resp.replica_settings[0].replica_global_secondary_index_settings[0].index_status #=> String, one of "CREATING", "UPDATING", "DELETING", "ACTIVE"
  #   resp.replica_settings[0].replica_global_secondary_index_settings[0].provisioned_read_capacity_units #=> Integer
  #   resp.replica_settings[0].replica_global_secondary_index_settings[0].provisioned_read_capacity_auto_scaling_settings.minimum_units #=> Integer
  #   resp.replica_settings[0].replica_global_secondary_index_settings[0].provisioned_read_capacity_auto_scaling_settings.maximum_units #=> Integer
  #   resp.replica_settings[0].replica_global_secondary_index_settings[0].provisioned_read_capacity_auto_scaling_settings.auto_scaling_disabled #=> Boolean
  #   resp.replica_settings[0].replica_global_secondary_index_settings[0].provisioned_read_capacity_auto_scaling_settings.auto_scaling_role_arn #=> String
  #   resp.replica_settings[0].replica_global_secondary_index_settings[0].provisioned_read_capacity_auto_scaling_settings.scaling_policies #=> Array
  #   resp.replica_settings[0].replica_global_secondary_index_settings[0].provisioned_read_capacity_auto_scaling_settings.scaling_policies[0].policy_name #=> String
  #   resp.replica_settings[0].replica_global_secondary_index_settings[0].provisioned_read_capacity_auto_scaling_settings.scaling_policies[0].target_tracking_scaling_policy_configuration.disable_scale_in #=> Boolean
  #   resp.replica_settings[0].replica_global_secondary_index_settings[0].provisioned_read_capacity_auto_scaling_settings.scaling_policies[0].target_tracking_scaling_policy_configuration.scale_in_cooldown #=> Integer
  #   resp.replica_settings[0].replica_global_secondary_index_settings[0].provisioned_read_capacity_auto_scaling_settings.scaling_policies[0].target_tracking_scaling_policy_configuration.scale_out_cooldown #=> Integer
  #   resp.replica_settings[0].replica_global_secondary_index_settings[0].provisioned_read_capacity_auto_scaling_settings.scaling_policies[0].target_tracking_scaling_policy_configuration.target_value #=> Float
  #   resp.replica_settings[0].replica_global_secondary_index_settings[0].provisioned_write_capacity_units #=> Integer
  #   resp.replica_settings[0].replica_global_secondary_index_settings[0].provisioned_write_capacity_auto_scaling_settings.minimum_units #=> Integer
  #   resp.replica_settings[0].replica_global_secondary_index_settings[0].provisioned_write_capacity_auto_scaling_settings.maximum_units #=> Integer
  #   resp.replica_settings[0].replica_global_secondary_index_settings[0].provisioned_write_capacity_auto_scaling_settings.auto_scaling_disabled #=> Boolean
  #   resp.replica_settings[0].replica_global_secondary_index_settings[0].provisioned_write_capacity_auto_scaling_settings.auto_scaling_role_arn #=> String
  #   resp.replica_settings[0].replica_global_secondary_index_settings[0].provisioned_write_capacity_auto_scaling_settings.scaling_policies #=> Array
  #   resp.replica_settings[0].replica_global_secondary_index_settings[0].provisioned_write_capacity_auto_scaling_settings.scaling_policies[0].policy_name #=> String
  #   resp.replica_settings[0].replica_global_secondary_index_settings[0].provisioned_write_capacity_auto_scaling_settings.scaling_policies[0].target_tracking_scaling_policy_configuration.disable_scale_in #=> Boolean
  #   resp.replica_settings[0].replica_global_secondary_index_settings[0].provisioned_write_capacity_auto_scaling_settings.scaling_policies[0].target_tracking_scaling_policy_configuration.scale_in_cooldown #=> Integer
  #   resp.replica_settings[0].replica_global_secondary_index_settings[0].provisioned_write_capacity_auto_scaling_settings.scaling_policies[0].target_tracking_scaling_policy_configuration.scale_out_cooldown #=> Integer
  #   resp.replica_settings[0].replica_global_secondary_index_settings[0].provisioned_write_capacity_auto_scaling_settings.scaling_policies[0].target_tracking_scaling_policy_configuration.target_value #=> Float
  #   resp.replica_settings[0].replica_table_class_summary.table_class #=> String, one of "STANDARD", "STANDARD_INFREQUENT_ACCESS"
  #   resp.replica_settings[0].replica_table_class_summary.last_update_date_time #=> Time
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @overload update_global_table_settings
  # @param params [Hash] ({})
  # @return [Types::UpdateGlobalTableSettingsOutput] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::UpdateGlobalTableSettingsOutput#global_table_name #global_table_name} => String
  #   * {Types::UpdateGlobalTableSettingsOutput#replica_settings #replica_settings} => Array&lt;Types::ReplicaSettingsDescription&gt;
  # @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/UpdateGlobalTableSettings AWS API Documentation
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client.rb#6844
  def update_global_table_settings(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Edits an existing item's attributes, or adds a new item to the table
  # if it does not already exist. You can put, delete, or add attribute
  # values. You can also perform a conditional update on an existing item
  # (insert a new attribute name-value pair if it doesn't exist, or
  # replace an existing name-value pair if it has certain expected
  # attribute values).
  #
  # You can also return the item's attribute values in the same
  # `UpdateItem` operation using the `ReturnValues` parameter.
  #
  # @example Example: To update an item in a table
  #
  #   # This example updates an item in the Music table. It adds a new attribute (Year) and modifies the AlbumTitle attribute.
  #   # All of the attributes in the item, as they appear after the update, are returned in the response.
  #
  #   resp = client.update_item({
  #   expression_attribute_names: {
  #   "#AT" => "AlbumTitle",
  #   "#Y" => "Year",
  #   },
  #   expression_attribute_values: {
  #   ":t" => "Louder Than Ever",
  #   ":y" => "2015",
  #   },
  #   key: {
  #   "Artist" => "Acme Band",
  #   "SongTitle" => "Happy Day",
  #   },
  #   return_values: "ALL_NEW",
  #   table_name: "Music",
  #   update_expression: "SET #Y = :y, #AT = :t",
  #   })
  #
  #   resp.to_h outputs the following:
  #   {
  #   attributes: {
  #   "AlbumTitle" => "Louder Than Ever",
  #   "Artist" => "Acme Band",
  #   "SongTitle" => "Happy Day",
  #   "Year" => "2015",
  #   },
  #   }
  # @example Request syntax with placeholder values
  #
  #   resp = client.update_item({
  #   table_name: "TableName", # required
  #   key: { # required
  #   "AttributeName" => "value", # value <Hash,Array,String,Numeric,Boolean,IO,Set,nil>
  #   },
  #   attribute_updates: {
  #   "AttributeName" => {
  #   value: "value", # value <Hash,Array,String,Numeric,Boolean,IO,Set,nil>
  #   action: "ADD", # accepts ADD, PUT, DELETE
  #   },
  #   },
  #   expected: {
  #   "AttributeName" => {
  #   value: "value", # value <Hash,Array,String,Numeric,Boolean,IO,Set,nil>
  #   exists: false,
  #   comparison_operator: "EQ", # accepts EQ, NE, IN, LE, LT, GE, GT, BETWEEN, NOT_NULL, NULL, CONTAINS, NOT_CONTAINS, BEGINS_WITH
  #   attribute_value_list: ["value"], # value <Hash,Array,String,Numeric,Boolean,IO,Set,nil>
  #   },
  #   },
  #   conditional_operator: "AND", # accepts AND, OR
  #   return_values: "NONE", # accepts NONE, ALL_OLD, UPDATED_OLD, ALL_NEW, UPDATED_NEW
  #   return_consumed_capacity: "INDEXES", # accepts INDEXES, TOTAL, NONE
  #   return_item_collection_metrics: "SIZE", # accepts SIZE, NONE
  #   update_expression: "UpdateExpression",
  #   condition_expression: "ConditionExpression",
  #   expression_attribute_names: {
  #   "ExpressionAttributeNameVariable" => "AttributeName",
  #   },
  #   expression_attribute_values: {
  #   "ExpressionAttributeValueVariable" => "value", # value <Hash,Array,String,Numeric,Boolean,IO,Set,nil>
  #   },
  #   return_values_on_condition_check_failure: "ALL_OLD", # accepts ALL_OLD, NONE
  #   })
  # @example Response structure
  #
  #   resp.attributes #=> Hash
  #   resp.attributes["AttributeName"] #=> <Hash,Array,String,Numeric,Boolean,IO,Set,nil>
  #   resp.consumed_capacity.table_name #=> String
  #   resp.consumed_capacity.capacity_units #=> Float
  #   resp.consumed_capacity.read_capacity_units #=> Float
  #   resp.consumed_capacity.write_capacity_units #=> Float
  #   resp.consumed_capacity.table.read_capacity_units #=> Float
  #   resp.consumed_capacity.table.write_capacity_units #=> Float
  #   resp.consumed_capacity.table.capacity_units #=> Float
  #   resp.consumed_capacity.local_secondary_indexes #=> Hash
  #   resp.consumed_capacity.local_secondary_indexes["IndexName"].read_capacity_units #=> Float
  #   resp.consumed_capacity.local_secondary_indexes["IndexName"].write_capacity_units #=> Float
  #   resp.consumed_capacity.local_secondary_indexes["IndexName"].capacity_units #=> Float
  #   resp.consumed_capacity.global_secondary_indexes #=> Hash
  #   resp.consumed_capacity.global_secondary_indexes["IndexName"].read_capacity_units #=> Float
  #   resp.consumed_capacity.global_secondary_indexes["IndexName"].write_capacity_units #=> Float
  #   resp.consumed_capacity.global_secondary_indexes["IndexName"].capacity_units #=> Float
  #   resp.item_collection_metrics.item_collection_key #=> Hash
  #   resp.item_collection_metrics.item_collection_key["AttributeName"] #=> <Hash,Array,String,Numeric,Boolean,IO,Set,nil>
  #   resp.item_collection_metrics.size_estimate_range_gb #=> Array
  #   resp.item_collection_metrics.size_estimate_range_gb[0] #=> Float
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @overload update_item
  # @param params [Hash] ({})
  # @return [Types::UpdateItemOutput] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::UpdateItemOutput#attributes #attributes} => Hash&lt;String,Types::AttributeValue&gt;
  #   * {Types::UpdateItemOutput#consumed_capacity #consumed_capacity} => Types::ConsumedCapacity
  #   * {Types::UpdateItemOutput#item_collection_metrics #item_collection_metrics} => Types::ItemCollectionMetrics
  # @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/UpdateItem AWS API Documentation
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client.rb#7246
  def update_item(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Modifies the provisioned throughput settings, global secondary
  # indexes, or DynamoDB Streams settings for a given table.
  #
  # This operation only applies to [Version 2019.11.21 (Current)][1] of
  # global tables.
  #
  # You can only perform one of the following operations at once:
  #
  # * Modify the provisioned throughput settings of the table.
  #
  # * Remove a global secondary index from the table.
  #
  # * Create a new global secondary index on the table. After the index
  #   begins backfilling, you can use `UpdateTable` to perform other
  #   operations.
  #
  # `UpdateTable` is an asynchronous operation; while it is executing, the
  # table status changes from `ACTIVE` to `UPDATING`. While it is
  # `UPDATING`, you cannot issue another `UpdateTable` request. When the
  # table returns to the `ACTIVE` state, the `UpdateTable` operation is
  # complete.
  #
  #
  #
  # [1]: https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/globaltables.V2.html
  #
  # @example Example: To modify a table's provisioned throughput
  #
  #   # This example increases the provisioned read and write capacity on the Music table.
  #
  #   resp = client.update_table({
  #   provisioned_throughput: {
  #   read_capacity_units: 10,
  #   write_capacity_units: 10,
  #   },
  #   table_name: "MusicCollection",
  #   })
  #
  #   resp.to_h outputs the following:
  #   {
  #   table_description: {
  #   attribute_definitions: [
  #   {
  #   attribute_name: "Artist",
  #   attribute_type: "S",
  #   },
  #   {
  #   attribute_name: "SongTitle",
  #   attribute_type: "S",
  #   },
  #   ],
  #   creation_date_time: Time.parse("1421866952.062"),
  #   item_count: 0,
  #   key_schema: [
  #   {
  #   attribute_name: "Artist",
  #   key_type: "HASH",
  #   },
  #   {
  #   attribute_name: "SongTitle",
  #   key_type: "RANGE",
  #   },
  #   ],
  #   provisioned_throughput: {
  #   last_increase_date_time: Time.parse("1421874759.194"),
  #   number_of_decreases_today: 1,
  #   read_capacity_units: 1,
  #   write_capacity_units: 1,
  #   },
  #   table_name: "MusicCollection",
  #   table_size_bytes: 0,
  #   table_status: "UPDATING",
  #   },
  #   }
  # @example Request syntax with placeholder values
  #
  #   resp = client.update_table({
  #   attribute_definitions: [
  #   {
  #   attribute_name: "KeySchemaAttributeName", # required
  #   attribute_type: "S", # required, accepts S, N, B
  #   },
  #   ],
  #   table_name: "TableName", # required
  #   billing_mode: "PROVISIONED", # accepts PROVISIONED, PAY_PER_REQUEST
  #   provisioned_throughput: {
  #   read_capacity_units: 1, # required
  #   write_capacity_units: 1, # required
  #   },
  #   global_secondary_index_updates: [
  #   {
  #   update: {
  #   index_name: "IndexName", # required
  #   provisioned_throughput: { # required
  #   read_capacity_units: 1, # required
  #   write_capacity_units: 1, # required
  #   },
  #   },
  #   create: {
  #   index_name: "IndexName", # required
  #   key_schema: [ # required
  #   {
  #   attribute_name: "KeySchemaAttributeName", # required
  #   key_type: "HASH", # required, accepts HASH, RANGE
  #   },
  #   ],
  #   projection: { # required
  #   projection_type: "ALL", # accepts ALL, KEYS_ONLY, INCLUDE
  #   non_key_attributes: ["NonKeyAttributeName"],
  #   },
  #   provisioned_throughput: {
  #   read_capacity_units: 1, # required
  #   write_capacity_units: 1, # required
  #   },
  #   },
  #   delete: {
  #   index_name: "IndexName", # required
  #   },
  #   },
  #   ],
  #   stream_specification: {
  #   stream_enabled: false, # required
  #   stream_view_type: "NEW_IMAGE", # accepts NEW_IMAGE, OLD_IMAGE, NEW_AND_OLD_IMAGES, KEYS_ONLY
  #   },
  #   sse_specification: {
  #   enabled: false,
  #   sse_type: "AES256", # accepts AES256, KMS
  #   kms_master_key_id: "KMSMasterKeyId",
  #   },
  #   replica_updates: [
  #   {
  #   create: {
  #   region_name: "RegionName", # required
  #   kms_master_key_id: "KMSMasterKeyId",
  #   provisioned_throughput_override: {
  #   read_capacity_units: 1,
  #   },
  #   global_secondary_indexes: [
  #   {
  #   index_name: "IndexName", # required
  #   provisioned_throughput_override: {
  #   read_capacity_units: 1,
  #   },
  #   },
  #   ],
  #   table_class_override: "STANDARD", # accepts STANDARD, STANDARD_INFREQUENT_ACCESS
  #   },
  #   update: {
  #   region_name: "RegionName", # required
  #   kms_master_key_id: "KMSMasterKeyId",
  #   provisioned_throughput_override: {
  #   read_capacity_units: 1,
  #   },
  #   global_secondary_indexes: [
  #   {
  #   index_name: "IndexName", # required
  #   provisioned_throughput_override: {
  #   read_capacity_units: 1,
  #   },
  #   },
  #   ],
  #   table_class_override: "STANDARD", # accepts STANDARD, STANDARD_INFREQUENT_ACCESS
  #   },
  #   delete: {
  #   region_name: "RegionName", # required
  #   },
  #   },
  #   ],
  #   table_class: "STANDARD", # accepts STANDARD, STANDARD_INFREQUENT_ACCESS
  #   deletion_protection_enabled: false,
  #   })
  # @example Response structure
  #
  #   resp.table_description.attribute_definitions #=> Array
  #   resp.table_description.attribute_definitions[0].attribute_name #=> String
  #   resp.table_description.attribute_definitions[0].attribute_type #=> String, one of "S", "N", "B"
  #   resp.table_description.table_name #=> String
  #   resp.table_description.key_schema #=> Array
  #   resp.table_description.key_schema[0].attribute_name #=> String
  #   resp.table_description.key_schema[0].key_type #=> String, one of "HASH", "RANGE"
  #   resp.table_description.table_status #=> String, one of "CREATING", "UPDATING", "DELETING", "ACTIVE", "INACCESSIBLE_ENCRYPTION_CREDENTIALS", "ARCHIVING", "ARCHIVED"
  #   resp.table_description.creation_date_time #=> Time
  #   resp.table_description.provisioned_throughput.last_increase_date_time #=> Time
  #   resp.table_description.provisioned_throughput.last_decrease_date_time #=> Time
  #   resp.table_description.provisioned_throughput.number_of_decreases_today #=> Integer
  #   resp.table_description.provisioned_throughput.read_capacity_units #=> Integer
  #   resp.table_description.provisioned_throughput.write_capacity_units #=> Integer
  #   resp.table_description.table_size_bytes #=> Integer
  #   resp.table_description.item_count #=> Integer
  #   resp.table_description.table_arn #=> String
  #   resp.table_description.table_id #=> String
  #   resp.table_description.billing_mode_summary.billing_mode #=> String, one of "PROVISIONED", "PAY_PER_REQUEST"
  #   resp.table_description.billing_mode_summary.last_update_to_pay_per_request_date_time #=> Time
  #   resp.table_description.local_secondary_indexes #=> Array
  #   resp.table_description.local_secondary_indexes[0].index_name #=> String
  #   resp.table_description.local_secondary_indexes[0].key_schema #=> Array
  #   resp.table_description.local_secondary_indexes[0].key_schema[0].attribute_name #=> String
  #   resp.table_description.local_secondary_indexes[0].key_schema[0].key_type #=> String, one of "HASH", "RANGE"
  #   resp.table_description.local_secondary_indexes[0].projection.projection_type #=> String, one of "ALL", "KEYS_ONLY", "INCLUDE"
  #   resp.table_description.local_secondary_indexes[0].projection.non_key_attributes #=> Array
  #   resp.table_description.local_secondary_indexes[0].projection.non_key_attributes[0] #=> String
  #   resp.table_description.local_secondary_indexes[0].index_size_bytes #=> Integer
  #   resp.table_description.local_secondary_indexes[0].item_count #=> Integer
  #   resp.table_description.local_secondary_indexes[0].index_arn #=> String
  #   resp.table_description.global_secondary_indexes #=> Array
  #   resp.table_description.global_secondary_indexes[0].index_name #=> String
  #   resp.table_description.global_secondary_indexes[0].key_schema #=> Array
  #   resp.table_description.global_secondary_indexes[0].key_schema[0].attribute_name #=> String
  #   resp.table_description.global_secondary_indexes[0].key_schema[0].key_type #=> String, one of "HASH", "RANGE"
  #   resp.table_description.global_secondary_indexes[0].projection.projection_type #=> String, one of "ALL", "KEYS_ONLY", "INCLUDE"
  #   resp.table_description.global_secondary_indexes[0].projection.non_key_attributes #=> Array
  #   resp.table_description.global_secondary_indexes[0].projection.non_key_attributes[0] #=> String
  #   resp.table_description.global_secondary_indexes[0].index_status #=> String, one of "CREATING", "UPDATING", "DELETING", "ACTIVE"
  #   resp.table_description.global_secondary_indexes[0].backfilling #=> Boolean
  #   resp.table_description.global_secondary_indexes[0].provisioned_throughput.last_increase_date_time #=> Time
  #   resp.table_description.global_secondary_indexes[0].provisioned_throughput.last_decrease_date_time #=> Time
  #   resp.table_description.global_secondary_indexes[0].provisioned_throughput.number_of_decreases_today #=> Integer
  #   resp.table_description.global_secondary_indexes[0].provisioned_throughput.read_capacity_units #=> Integer
  #   resp.table_description.global_secondary_indexes[0].provisioned_throughput.write_capacity_units #=> Integer
  #   resp.table_description.global_secondary_indexes[0].index_size_bytes #=> Integer
  #   resp.table_description.global_secondary_indexes[0].item_count #=> Integer
  #   resp.table_description.global_secondary_indexes[0].index_arn #=> String
  #   resp.table_description.stream_specification.stream_enabled #=> Boolean
  #   resp.table_description.stream_specification.stream_view_type #=> String, one of "NEW_IMAGE", "OLD_IMAGE", "NEW_AND_OLD_IMAGES", "KEYS_ONLY"
  #   resp.table_description.latest_stream_label #=> String
  #   resp.table_description.latest_stream_arn #=> String
  #   resp.table_description.global_table_version #=> String
  #   resp.table_description.replicas #=> Array
  #   resp.table_description.replicas[0].region_name #=> String
  #   resp.table_description.replicas[0].replica_status #=> String, one of "CREATING", "CREATION_FAILED", "UPDATING", "DELETING", "ACTIVE", "REGION_DISABLED", "INACCESSIBLE_ENCRYPTION_CREDENTIALS"
  #   resp.table_description.replicas[0].replica_status_description #=> String
  #   resp.table_description.replicas[0].replica_status_percent_progress #=> String
  #   resp.table_description.replicas[0].kms_master_key_id #=> String
  #   resp.table_description.replicas[0].provisioned_throughput_override.read_capacity_units #=> Integer
  #   resp.table_description.replicas[0].global_secondary_indexes #=> Array
  #   resp.table_description.replicas[0].global_secondary_indexes[0].index_name #=> String
  #   resp.table_description.replicas[0].global_secondary_indexes[0].provisioned_throughput_override.read_capacity_units #=> Integer
  #   resp.table_description.replicas[0].replica_inaccessible_date_time #=> Time
  #   resp.table_description.replicas[0].replica_table_class_summary.table_class #=> String, one of "STANDARD", "STANDARD_INFREQUENT_ACCESS"
  #   resp.table_description.replicas[0].replica_table_class_summary.last_update_date_time #=> Time
  #   resp.table_description.restore_summary.source_backup_arn #=> String
  #   resp.table_description.restore_summary.source_table_arn #=> String
  #   resp.table_description.restore_summary.restore_date_time #=> Time
  #   resp.table_description.restore_summary.restore_in_progress #=> Boolean
  #   resp.table_description.sse_description.status #=> String, one of "ENABLING", "ENABLED", "DISABLING", "DISABLED", "UPDATING"
  #   resp.table_description.sse_description.sse_type #=> String, one of "AES256", "KMS"
  #   resp.table_description.sse_description.kms_master_key_arn #=> String
  #   resp.table_description.sse_description.inaccessible_encryption_date_time #=> Time
  #   resp.table_description.archival_summary.archival_date_time #=> Time
  #   resp.table_description.archival_summary.archival_reason #=> String
  #   resp.table_description.archival_summary.archival_backup_arn #=> String
  #   resp.table_description.table_class_summary.table_class #=> String, one of "STANDARD", "STANDARD_INFREQUENT_ACCESS"
  #   resp.table_description.table_class_summary.last_update_date_time #=> Time
  #   resp.table_description.deletion_protection_enabled #=> Boolean
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @overload update_table
  # @param params [Hash] ({})
  # @return [Types::UpdateTableOutput] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::UpdateTableOutput#table_description #table_description} => Types::TableDescription
  # @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/UpdateTable AWS API Documentation
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client.rb#7605
  def update_table(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Updates auto scaling settings on your global tables at once.
  #
  # This operation only applies to [Version 2019.11.21 (Current)][1] of
  # global tables.
  #
  #
  #
  # [1]: https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/globaltables.V2.html
  #
  # @example Request syntax with placeholder values
  #
  #   resp = client.update_table_replica_auto_scaling({
  #   global_secondary_index_updates: [
  #   {
  #   index_name: "IndexName",
  #   provisioned_write_capacity_auto_scaling_update: {
  #   minimum_units: 1,
  #   maximum_units: 1,
  #   auto_scaling_disabled: false,
  #   auto_scaling_role_arn: "AutoScalingRoleArn",
  #   scaling_policy_update: {
  #   policy_name: "AutoScalingPolicyName",
  #   target_tracking_scaling_policy_configuration: { # required
  #   disable_scale_in: false,
  #   scale_in_cooldown: 1,
  #   scale_out_cooldown: 1,
  #   target_value: 1.0, # required
  #   },
  #   },
  #   },
  #   },
  #   ],
  #   table_name: "TableName", # required
  #   provisioned_write_capacity_auto_scaling_update: {
  #   minimum_units: 1,
  #   maximum_units: 1,
  #   auto_scaling_disabled: false,
  #   auto_scaling_role_arn: "AutoScalingRoleArn",
  #   scaling_policy_update: {
  #   policy_name: "AutoScalingPolicyName",
  #   target_tracking_scaling_policy_configuration: { # required
  #   disable_scale_in: false,
  #   scale_in_cooldown: 1,
  #   scale_out_cooldown: 1,
  #   target_value: 1.0, # required
  #   },
  #   },
  #   },
  #   replica_updates: [
  #   {
  #   region_name: "RegionName", # required
  #   replica_global_secondary_index_updates: [
  #   {
  #   index_name: "IndexName",
  #   provisioned_read_capacity_auto_scaling_update: {
  #   minimum_units: 1,
  #   maximum_units: 1,
  #   auto_scaling_disabled: false,
  #   auto_scaling_role_arn: "AutoScalingRoleArn",
  #   scaling_policy_update: {
  #   policy_name: "AutoScalingPolicyName",
  #   target_tracking_scaling_policy_configuration: { # required
  #   disable_scale_in: false,
  #   scale_in_cooldown: 1,
  #   scale_out_cooldown: 1,
  #   target_value: 1.0, # required
  #   },
  #   },
  #   },
  #   },
  #   ],
  #   replica_provisioned_read_capacity_auto_scaling_update: {
  #   minimum_units: 1,
  #   maximum_units: 1,
  #   auto_scaling_disabled: false,
  #   auto_scaling_role_arn: "AutoScalingRoleArn",
  #   scaling_policy_update: {
  #   policy_name: "AutoScalingPolicyName",
  #   target_tracking_scaling_policy_configuration: { # required
  #   disable_scale_in: false,
  #   scale_in_cooldown: 1,
  #   scale_out_cooldown: 1,
  #   target_value: 1.0, # required
  #   },
  #   },
  #   },
  #   },
  #   ],
  #   })
  # @example Response structure
  #
  #   resp.table_auto_scaling_description.table_name #=> String
  #   resp.table_auto_scaling_description.table_status #=> String, one of "CREATING", "UPDATING", "DELETING", "ACTIVE", "INACCESSIBLE_ENCRYPTION_CREDENTIALS", "ARCHIVING", "ARCHIVED"
  #   resp.table_auto_scaling_description.replicas #=> Array
  #   resp.table_auto_scaling_description.replicas[0].region_name #=> String
  #   resp.table_auto_scaling_description.replicas[0].global_secondary_indexes #=> Array
  #   resp.table_auto_scaling_description.replicas[0].global_secondary_indexes[0].index_name #=> String
  #   resp.table_auto_scaling_description.replicas[0].global_secondary_indexes[0].index_status #=> String, one of "CREATING", "UPDATING", "DELETING", "ACTIVE"
  #   resp.table_auto_scaling_description.replicas[0].global_secondary_indexes[0].provisioned_read_capacity_auto_scaling_settings.minimum_units #=> Integer
  #   resp.table_auto_scaling_description.replicas[0].global_secondary_indexes[0].provisioned_read_capacity_auto_scaling_settings.maximum_units #=> Integer
  #   resp.table_auto_scaling_description.replicas[0].global_secondary_indexes[0].provisioned_read_capacity_auto_scaling_settings.auto_scaling_disabled #=> Boolean
  #   resp.table_auto_scaling_description.replicas[0].global_secondary_indexes[0].provisioned_read_capacity_auto_scaling_settings.auto_scaling_role_arn #=> String
  #   resp.table_auto_scaling_description.replicas[0].global_secondary_indexes[0].provisioned_read_capacity_auto_scaling_settings.scaling_policies #=> Array
  #   resp.table_auto_scaling_description.replicas[0].global_secondary_indexes[0].provisioned_read_capacity_auto_scaling_settings.scaling_policies[0].policy_name #=> String
  #   resp.table_auto_scaling_description.replicas[0].global_secondary_indexes[0].provisioned_read_capacity_auto_scaling_settings.scaling_policies[0].target_tracking_scaling_policy_configuration.disable_scale_in #=> Boolean
  #   resp.table_auto_scaling_description.replicas[0].global_secondary_indexes[0].provisioned_read_capacity_auto_scaling_settings.scaling_policies[0].target_tracking_scaling_policy_configuration.scale_in_cooldown #=> Integer
  #   resp.table_auto_scaling_description.replicas[0].global_secondary_indexes[0].provisioned_read_capacity_auto_scaling_settings.scaling_policies[0].target_tracking_scaling_policy_configuration.scale_out_cooldown #=> Integer
  #   resp.table_auto_scaling_description.replicas[0].global_secondary_indexes[0].provisioned_read_capacity_auto_scaling_settings.scaling_policies[0].target_tracking_scaling_policy_configuration.target_value #=> Float
  #   resp.table_auto_scaling_description.replicas[0].global_secondary_indexes[0].provisioned_write_capacity_auto_scaling_settings.minimum_units #=> Integer
  #   resp.table_auto_scaling_description.replicas[0].global_secondary_indexes[0].provisioned_write_capacity_auto_scaling_settings.maximum_units #=> Integer
  #   resp.table_auto_scaling_description.replicas[0].global_secondary_indexes[0].provisioned_write_capacity_auto_scaling_settings.auto_scaling_disabled #=> Boolean
  #   resp.table_auto_scaling_description.replicas[0].global_secondary_indexes[0].provisioned_write_capacity_auto_scaling_settings.auto_scaling_role_arn #=> String
  #   resp.table_auto_scaling_description.replicas[0].global_secondary_indexes[0].provisioned_write_capacity_auto_scaling_settings.scaling_policies #=> Array
  #   resp.table_auto_scaling_description.replicas[0].global_secondary_indexes[0].provisioned_write_capacity_auto_scaling_settings.scaling_policies[0].policy_name #=> String
  #   resp.table_auto_scaling_description.replicas[0].global_secondary_indexes[0].provisioned_write_capacity_auto_scaling_settings.scaling_policies[0].target_tracking_scaling_policy_configuration.disable_scale_in #=> Boolean
  #   resp.table_auto_scaling_description.replicas[0].global_secondary_indexes[0].provisioned_write_capacity_auto_scaling_settings.scaling_policies[0].target_tracking_scaling_policy_configuration.scale_in_cooldown #=> Integer
  #   resp.table_auto_scaling_description.replicas[0].global_secondary_indexes[0].provisioned_write_capacity_auto_scaling_settings.scaling_policies[0].target_tracking_scaling_policy_configuration.scale_out_cooldown #=> Integer
  #   resp.table_auto_scaling_description.replicas[0].global_secondary_indexes[0].provisioned_write_capacity_auto_scaling_settings.scaling_policies[0].target_tracking_scaling_policy_configuration.target_value #=> Float
  #   resp.table_auto_scaling_description.replicas[0].replica_provisioned_read_capacity_auto_scaling_settings.minimum_units #=> Integer
  #   resp.table_auto_scaling_description.replicas[0].replica_provisioned_read_capacity_auto_scaling_settings.maximum_units #=> Integer
  #   resp.table_auto_scaling_description.replicas[0].replica_provisioned_read_capacity_auto_scaling_settings.auto_scaling_disabled #=> Boolean
  #   resp.table_auto_scaling_description.replicas[0].replica_provisioned_read_capacity_auto_scaling_settings.auto_scaling_role_arn #=> String
  #   resp.table_auto_scaling_description.replicas[0].replica_provisioned_read_capacity_auto_scaling_settings.scaling_policies #=> Array
  #   resp.table_auto_scaling_description.replicas[0].replica_provisioned_read_capacity_auto_scaling_settings.scaling_policies[0].policy_name #=> String
  #   resp.table_auto_scaling_description.replicas[0].replica_provisioned_read_capacity_auto_scaling_settings.scaling_policies[0].target_tracking_scaling_policy_configuration.disable_scale_in #=> Boolean
  #   resp.table_auto_scaling_description.replicas[0].replica_provisioned_read_capacity_auto_scaling_settings.scaling_policies[0].target_tracking_scaling_policy_configuration.scale_in_cooldown #=> Integer
  #   resp.table_auto_scaling_description.replicas[0].replica_provisioned_read_capacity_auto_scaling_settings.scaling_policies[0].target_tracking_scaling_policy_configuration.scale_out_cooldown #=> Integer
  #   resp.table_auto_scaling_description.replicas[0].replica_provisioned_read_capacity_auto_scaling_settings.scaling_policies[0].target_tracking_scaling_policy_configuration.target_value #=> Float
  #   resp.table_auto_scaling_description.replicas[0].replica_provisioned_write_capacity_auto_scaling_settings.minimum_units #=> Integer
  #   resp.table_auto_scaling_description.replicas[0].replica_provisioned_write_capacity_auto_scaling_settings.maximum_units #=> Integer
  #   resp.table_auto_scaling_description.replicas[0].replica_provisioned_write_capacity_auto_scaling_settings.auto_scaling_disabled #=> Boolean
  #   resp.table_auto_scaling_description.replicas[0].replica_provisioned_write_capacity_auto_scaling_settings.auto_scaling_role_arn #=> String
  #   resp.table_auto_scaling_description.replicas[0].replica_provisioned_write_capacity_auto_scaling_settings.scaling_policies #=> Array
  #   resp.table_auto_scaling_description.replicas[0].replica_provisioned_write_capacity_auto_scaling_settings.scaling_policies[0].policy_name #=> String
  #   resp.table_auto_scaling_description.replicas[0].replica_provisioned_write_capacity_auto_scaling_settings.scaling_policies[0].target_tracking_scaling_policy_configuration.disable_scale_in #=> Boolean
  #   resp.table_auto_scaling_description.replicas[0].replica_provisioned_write_capacity_auto_scaling_settings.scaling_policies[0].target_tracking_scaling_policy_configuration.scale_in_cooldown #=> Integer
  #   resp.table_auto_scaling_description.replicas[0].replica_provisioned_write_capacity_auto_scaling_settings.scaling_policies[0].target_tracking_scaling_policy_configuration.scale_out_cooldown #=> Integer
  #   resp.table_auto_scaling_description.replicas[0].replica_provisioned_write_capacity_auto_scaling_settings.scaling_policies[0].target_tracking_scaling_policy_configuration.target_value #=> Float
  #   resp.table_auto_scaling_description.replicas[0].replica_status #=> String, one of "CREATING", "CREATION_FAILED", "UPDATING", "DELETING", "ACTIVE", "REGION_DISABLED", "INACCESSIBLE_ENCRYPTION_CREDENTIALS"
  # @option params
  # @option params
  # @option params
  # @option params
  # @overload update_table_replica_auto_scaling
  # @param params [Hash] ({})
  # @return [Types::UpdateTableReplicaAutoScalingOutput] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::UpdateTableReplicaAutoScalingOutput#table_auto_scaling_description #table_auto_scaling_description} => Types::TableAutoScalingDescription
  # @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/UpdateTableReplicaAutoScaling AWS API Documentation
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client.rb#7774
  def update_table_replica_auto_scaling(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # The `UpdateTimeToLive` method enables or disables Time to Live (TTL)
  # for the specified table. A successful `UpdateTimeToLive` call returns
  # the current `TimeToLiveSpecification`. It can take up to one hour for
  # the change to fully process. Any additional `UpdateTimeToLive` calls
  # for the same table during this one hour duration result in a
  # `ValidationException`.
  #
  # TTL compares the current time in epoch time format to the time stored
  # in the TTL attribute of an item. If the epoch time value stored in the
  # attribute is less than the current time, the item is marked as expired
  # and subsequently deleted.
  #
  # <note markdown="1"> The epoch time format is the number of seconds elapsed since 12:00:00
  # AM January 1, 1970 UTC.
  #
  #  </note>
  #
  # DynamoDB deletes expired items on a best-effort basis to ensure
  # availability of throughput for other data operations.
  #
  # DynamoDB typically deletes expired items within two days of
  # expiration. The exact duration within which an item gets deleted after
  # expiration is specific to the nature of the workload. Items that have
  # expired and not been deleted will still show up in reads, queries, and
  # scans.
  #
  # As items are deleted, they are removed from any local secondary index
  # and global secondary index immediately in the same eventually
  # consistent way as a standard delete operation.
  #
  # For more information, see [Time To Live][1] in the Amazon DynamoDB
  # Developer Guide.
  #
  #
  #
  # [1]: https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/TTL.html
  #
  # @example Request syntax with placeholder values
  #
  #   resp = client.update_time_to_live({
  #   table_name: "TableName", # required
  #   time_to_live_specification: { # required
  #   enabled: false, # required
  #   attribute_name: "TimeToLiveAttributeName", # required
  #   },
  #   })
  # @example Response structure
  #
  #   resp.time_to_live_specification.enabled #=> Boolean
  #   resp.time_to_live_specification.attribute_name #=> String
  # @option params
  # @option params
  # @overload update_time_to_live
  # @param params [Hash] ({})
  # @return [Types::UpdateTimeToLiveOutput] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::UpdateTimeToLiveOutput#time_to_live_specification #time_to_live_specification} => Types::TimeToLiveSpecification
  # @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/UpdateTimeToLive AWS API Documentation
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client.rb#7846
  def update_time_to_live(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Polls an API operation until a resource enters a desired state.
  #
  # ## Basic Usage
  #
  # A waiter will call an API operation until:
  #
  # * It is successful
  # * It enters a terminal state
  # * It makes the maximum number of attempts
  #
  # In between attempts, the waiter will sleep.
  #
  #     # polls in a loop, sleeping between attempts
  #     client.wait_until(waiter_name, params)
  #
  # ## Configuration
  #
  # You can configure the maximum number of polling attempts, and the
  # delay (in seconds) between each polling attempt. You can pass
  # configuration as the final arguments hash.
  #
  #     # poll for ~25 seconds
  #     client.wait_until(waiter_name, params, {
  #       max_attempts: 5,
  #       delay: 5,
  #     })
  #
  # ## Callbacks
  #
  # You can be notified before each polling attempt and before each
  # delay. If you throw `:success` or `:failure` from these callbacks,
  # it will terminate the waiter.
  #
  #     started_at = Time.now
  #     client.wait_until(waiter_name, params, {
  #
  #       # disable max attempts
  #       max_attempts: nil,
  #
  #       # poll for 1 hour, instead of a number of attempts
  #       before_wait: -> (attempts, response) do
  #         throw :failure if Time.now - started_at > 3600
  #       end
  #     })
  #
  # ## Handling Errors
  #
  # When a waiter is unsuccessful, it will raise an error.
  # All of the failure errors extend from
  # {Aws::Waiters::Errors::WaiterFailed}.
  #
  #     begin
  #       client.wait_until(...)
  #     rescue Aws::Waiters::Errors::WaiterFailed
  #       # resource did not enter the desired state in time
  #     end
  #
  # ## Valid Waiters
  #
  # The following table lists the valid waiter names, the operations they call,
  # and the default `:delay` and `:max_attempts` values.
  #
  # | waiter_name      | params                  | :delay   | :max_attempts |
  # | ---------------- | ----------------------- | -------- | ------------- |
  # | table_exists     | {Client#describe_table} | 20       | 25            |
  # | table_not_exists | {Client#describe_table} | 20       | 25            |
  #
  # @option options
  # @option options
  # @option options
  # @option options
  # @param waiter_name [Symbol]
  # @param params [Hash] ({})
  # @param options [Hash] ({})
  # @raise [Errors::FailureStateError] Raised when the waiter terminates
  #   because the waiter has entered a state that it will not transition
  #   out of, preventing success.
  # @raise [Errors::TooManyAttemptsError] Raised when the configured
  #   maximum number of attempts have been made, and the waiter is not
  #   yet successful.
  # @raise [Errors::UnexpectedError] Raised when an error is encounted
  #   while polling for a resource that is not expected.
  # @raise [Errors::NoSuchWaiterError] Raised when you request to wait
  #   for an unknown state.
  # @return [Boolean] Returns `true` if the waiter was successful.
  # @yield [w.waiter]
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client.rb#7957
  def wait_until(waiter_name, params = T.unsafe(nil), options = T.unsafe(nil)); end

  # @api private
  # @deprecated
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client.rb#7965
  def waiter_names; end

  private

  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/customizations/client.rb#21
  def data_to_http_resp(operation_name, data); end

  # @param waiter_name [Symbol]
  # @param options [Hash] ({})
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client.rb#7973
  def waiter(waiter_name, options = T.unsafe(nil)); end

  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client.rb#7982
  def waiters; end

  class << self
    # @api private
    #
    # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client.rb#7995
    def errors_module; end

    # @api private
    #
    # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client.rb#7992
    def identifier; end
  end
end

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#12
module Aws::DynamoDB::ClientApi
  include ::Seahorse::Model
end

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#1871
Aws::DynamoDB::ClientApi::API = T.let(T.unsafe(nil), Seahorse::Model::Api)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#16
Aws::DynamoDB::ClientApi::ArchivalReason = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#17
Aws::DynamoDB::ClientApi::ArchivalSummary = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#18
Aws::DynamoDB::ClientApi::AttributeAction = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#19
Aws::DynamoDB::ClientApi::AttributeDefinition = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#20
Aws::DynamoDB::ClientApi::AttributeDefinitions = T.let(T.unsafe(nil), Seahorse::Model::Shapes::ListShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#21
Aws::DynamoDB::ClientApi::AttributeMap = T.let(T.unsafe(nil), Seahorse::Model::Shapes::MapShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#22
Aws::DynamoDB::ClientApi::AttributeName = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#23
Aws::DynamoDB::ClientApi::AttributeNameList = T.let(T.unsafe(nil), Seahorse::Model::Shapes::ListShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#24
Aws::DynamoDB::ClientApi::AttributeUpdates = T.let(T.unsafe(nil), Seahorse::Model::Shapes::MapShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#25
Aws::DynamoDB::ClientApi::AttributeValue = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#26
Aws::DynamoDB::ClientApi::AttributeValueList = T.let(T.unsafe(nil), Seahorse::Model::Shapes::ListShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#27
Aws::DynamoDB::ClientApi::AttributeValueUpdate = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#28
Aws::DynamoDB::ClientApi::AutoScalingPolicyDescription = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#29
Aws::DynamoDB::ClientApi::AutoScalingPolicyDescriptionList = T.let(T.unsafe(nil), Seahorse::Model::Shapes::ListShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#30
Aws::DynamoDB::ClientApi::AutoScalingPolicyName = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#31
Aws::DynamoDB::ClientApi::AutoScalingPolicyUpdate = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#32
Aws::DynamoDB::ClientApi::AutoScalingRoleArn = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#33
Aws::DynamoDB::ClientApi::AutoScalingSettingsDescription = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#34
Aws::DynamoDB::ClientApi::AutoScalingSettingsUpdate = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#35
Aws::DynamoDB::ClientApi::AutoScalingTargetTrackingScalingPolicyConfigurationDescription = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#36
Aws::DynamoDB::ClientApi::AutoScalingTargetTrackingScalingPolicyConfigurationUpdate = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#37
Aws::DynamoDB::ClientApi::Backfilling = T.let(T.unsafe(nil), Seahorse::Model::Shapes::BooleanShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#38
Aws::DynamoDB::ClientApi::BackupArn = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#39
Aws::DynamoDB::ClientApi::BackupCreationDateTime = T.let(T.unsafe(nil), Seahorse::Model::Shapes::TimestampShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#40
Aws::DynamoDB::ClientApi::BackupDescription = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#41
Aws::DynamoDB::ClientApi::BackupDetails = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#42
Aws::DynamoDB::ClientApi::BackupInUseException = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#43
Aws::DynamoDB::ClientApi::BackupName = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#44
Aws::DynamoDB::ClientApi::BackupNotFoundException = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#45
Aws::DynamoDB::ClientApi::BackupSizeBytes = T.let(T.unsafe(nil), Seahorse::Model::Shapes::IntegerShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#46
Aws::DynamoDB::ClientApi::BackupStatus = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#47
Aws::DynamoDB::ClientApi::BackupSummaries = T.let(T.unsafe(nil), Seahorse::Model::Shapes::ListShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#48
Aws::DynamoDB::ClientApi::BackupSummary = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#49
Aws::DynamoDB::ClientApi::BackupType = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#50
Aws::DynamoDB::ClientApi::BackupTypeFilter = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#51
Aws::DynamoDB::ClientApi::BackupsInputLimit = T.let(T.unsafe(nil), Seahorse::Model::Shapes::IntegerShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#52
Aws::DynamoDB::ClientApi::BatchExecuteStatementInput = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#53
Aws::DynamoDB::ClientApi::BatchExecuteStatementOutput = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#54
Aws::DynamoDB::ClientApi::BatchGetItemInput = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#55
Aws::DynamoDB::ClientApi::BatchGetItemOutput = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#56
Aws::DynamoDB::ClientApi::BatchGetRequestMap = T.let(T.unsafe(nil), Seahorse::Model::Shapes::MapShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#57
Aws::DynamoDB::ClientApi::BatchGetResponseMap = T.let(T.unsafe(nil), Seahorse::Model::Shapes::MapShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#58
Aws::DynamoDB::ClientApi::BatchStatementError = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#59
Aws::DynamoDB::ClientApi::BatchStatementErrorCodeEnum = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#60
Aws::DynamoDB::ClientApi::BatchStatementRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#61
Aws::DynamoDB::ClientApi::BatchStatementResponse = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#62
Aws::DynamoDB::ClientApi::BatchWriteItemInput = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#63
Aws::DynamoDB::ClientApi::BatchWriteItemOutput = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#64
Aws::DynamoDB::ClientApi::BatchWriteItemRequestMap = T.let(T.unsafe(nil), Seahorse::Model::Shapes::MapShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#65
Aws::DynamoDB::ClientApi::BilledSizeBytes = T.let(T.unsafe(nil), Seahorse::Model::Shapes::IntegerShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#66
Aws::DynamoDB::ClientApi::BillingMode = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#67
Aws::DynamoDB::ClientApi::BillingModeSummary = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#68
Aws::DynamoDB::ClientApi::BinaryAttributeValue = T.let(T.unsafe(nil), Seahorse::Model::Shapes::BlobShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#69
Aws::DynamoDB::ClientApi::BinarySetAttributeValue = T.let(T.unsafe(nil), Seahorse::Model::Shapes::ListShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#70
Aws::DynamoDB::ClientApi::BooleanAttributeValue = T.let(T.unsafe(nil), Seahorse::Model::Shapes::BooleanShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#71
Aws::DynamoDB::ClientApi::BooleanObject = T.let(T.unsafe(nil), Seahorse::Model::Shapes::BooleanShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#72
Aws::DynamoDB::ClientApi::CancellationReason = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#73
Aws::DynamoDB::ClientApi::CancellationReasonList = T.let(T.unsafe(nil), Seahorse::Model::Shapes::ListShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#74
Aws::DynamoDB::ClientApi::Capacity = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#75
Aws::DynamoDB::ClientApi::ClientRequestToken = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#76
Aws::DynamoDB::ClientApi::ClientToken = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#77
Aws::DynamoDB::ClientApi::CloudWatchLogGroupArn = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#78
Aws::DynamoDB::ClientApi::Code = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#79
Aws::DynamoDB::ClientApi::ComparisonOperator = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#80
Aws::DynamoDB::ClientApi::Condition = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#81
Aws::DynamoDB::ClientApi::ConditionCheck = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#82
Aws::DynamoDB::ClientApi::ConditionExpression = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#83
Aws::DynamoDB::ClientApi::ConditionalCheckFailedException = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#84
Aws::DynamoDB::ClientApi::ConditionalOperator = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#85
Aws::DynamoDB::ClientApi::ConsistentRead = T.let(T.unsafe(nil), Seahorse::Model::Shapes::BooleanShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#86
Aws::DynamoDB::ClientApi::ConsumedCapacity = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#87
Aws::DynamoDB::ClientApi::ConsumedCapacityMultiple = T.let(T.unsafe(nil), Seahorse::Model::Shapes::ListShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#88
Aws::DynamoDB::ClientApi::ConsumedCapacityUnits = T.let(T.unsafe(nil), Seahorse::Model::Shapes::FloatShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#89
Aws::DynamoDB::ClientApi::ContinuousBackupsDescription = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#90
Aws::DynamoDB::ClientApi::ContinuousBackupsStatus = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#91
Aws::DynamoDB::ClientApi::ContinuousBackupsUnavailableException = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#92
Aws::DynamoDB::ClientApi::ContributorInsightsAction = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#93
Aws::DynamoDB::ClientApi::ContributorInsightsRule = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#94
Aws::DynamoDB::ClientApi::ContributorInsightsRuleList = T.let(T.unsafe(nil), Seahorse::Model::Shapes::ListShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#95
Aws::DynamoDB::ClientApi::ContributorInsightsStatus = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#96
Aws::DynamoDB::ClientApi::ContributorInsightsSummaries = T.let(T.unsafe(nil), Seahorse::Model::Shapes::ListShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#97
Aws::DynamoDB::ClientApi::ContributorInsightsSummary = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#98
Aws::DynamoDB::ClientApi::CreateBackupInput = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#99
Aws::DynamoDB::ClientApi::CreateBackupOutput = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#100
Aws::DynamoDB::ClientApi::CreateGlobalSecondaryIndexAction = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#101
Aws::DynamoDB::ClientApi::CreateGlobalTableInput = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#102
Aws::DynamoDB::ClientApi::CreateGlobalTableOutput = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#103
Aws::DynamoDB::ClientApi::CreateReplicaAction = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#104
Aws::DynamoDB::ClientApi::CreateReplicationGroupMemberAction = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#105
Aws::DynamoDB::ClientApi::CreateTableInput = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#106
Aws::DynamoDB::ClientApi::CreateTableOutput = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#107
Aws::DynamoDB::ClientApi::CsvDelimiter = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#108
Aws::DynamoDB::ClientApi::CsvHeader = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#109
Aws::DynamoDB::ClientApi::CsvHeaderList = T.let(T.unsafe(nil), Seahorse::Model::Shapes::ListShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#110
Aws::DynamoDB::ClientApi::CsvOptions = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#111
Aws::DynamoDB::ClientApi::Date = T.let(T.unsafe(nil), Seahorse::Model::Shapes::TimestampShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#112
Aws::DynamoDB::ClientApi::Delete = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#113
Aws::DynamoDB::ClientApi::DeleteBackupInput = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#114
Aws::DynamoDB::ClientApi::DeleteBackupOutput = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#115
Aws::DynamoDB::ClientApi::DeleteGlobalSecondaryIndexAction = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#116
Aws::DynamoDB::ClientApi::DeleteItemInput = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#117
Aws::DynamoDB::ClientApi::DeleteItemOutput = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#118
Aws::DynamoDB::ClientApi::DeleteReplicaAction = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#119
Aws::DynamoDB::ClientApi::DeleteReplicationGroupMemberAction = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#120
Aws::DynamoDB::ClientApi::DeleteRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#121
Aws::DynamoDB::ClientApi::DeleteTableInput = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#122
Aws::DynamoDB::ClientApi::DeleteTableOutput = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#123
Aws::DynamoDB::ClientApi::DeletionProtectionEnabled = T.let(T.unsafe(nil), Seahorse::Model::Shapes::BooleanShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#124
Aws::DynamoDB::ClientApi::DescribeBackupInput = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#125
Aws::DynamoDB::ClientApi::DescribeBackupOutput = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#126
Aws::DynamoDB::ClientApi::DescribeContinuousBackupsInput = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#127
Aws::DynamoDB::ClientApi::DescribeContinuousBackupsOutput = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#128
Aws::DynamoDB::ClientApi::DescribeContributorInsightsInput = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#129
Aws::DynamoDB::ClientApi::DescribeContributorInsightsOutput = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#130
Aws::DynamoDB::ClientApi::DescribeEndpointsRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#131
Aws::DynamoDB::ClientApi::DescribeEndpointsResponse = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#132
Aws::DynamoDB::ClientApi::DescribeExportInput = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#133
Aws::DynamoDB::ClientApi::DescribeExportOutput = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#134
Aws::DynamoDB::ClientApi::DescribeGlobalTableInput = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#135
Aws::DynamoDB::ClientApi::DescribeGlobalTableOutput = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#136
Aws::DynamoDB::ClientApi::DescribeGlobalTableSettingsInput = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#137
Aws::DynamoDB::ClientApi::DescribeGlobalTableSettingsOutput = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#138
Aws::DynamoDB::ClientApi::DescribeImportInput = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#139
Aws::DynamoDB::ClientApi::DescribeImportOutput = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#140
Aws::DynamoDB::ClientApi::DescribeKinesisStreamingDestinationInput = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#141
Aws::DynamoDB::ClientApi::DescribeKinesisStreamingDestinationOutput = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#142
Aws::DynamoDB::ClientApi::DescribeLimitsInput = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#143
Aws::DynamoDB::ClientApi::DescribeLimitsOutput = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#144
Aws::DynamoDB::ClientApi::DescribeTableInput = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#145
Aws::DynamoDB::ClientApi::DescribeTableOutput = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#146
Aws::DynamoDB::ClientApi::DescribeTableReplicaAutoScalingInput = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#147
Aws::DynamoDB::ClientApi::DescribeTableReplicaAutoScalingOutput = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#148
Aws::DynamoDB::ClientApi::DescribeTimeToLiveInput = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#149
Aws::DynamoDB::ClientApi::DescribeTimeToLiveOutput = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#150
Aws::DynamoDB::ClientApi::DestinationStatus = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#151
Aws::DynamoDB::ClientApi::DoubleObject = T.let(T.unsafe(nil), Seahorse::Model::Shapes::FloatShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#152
Aws::DynamoDB::ClientApi::DuplicateItemException = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#153
Aws::DynamoDB::ClientApi::Endpoint = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#154
Aws::DynamoDB::ClientApi::Endpoints = T.let(T.unsafe(nil), Seahorse::Model::Shapes::ListShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#155
Aws::DynamoDB::ClientApi::ErrorCount = T.let(T.unsafe(nil), Seahorse::Model::Shapes::IntegerShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#156
Aws::DynamoDB::ClientApi::ErrorMessage = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#157
Aws::DynamoDB::ClientApi::ExceptionDescription = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#158
Aws::DynamoDB::ClientApi::ExceptionName = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#159
Aws::DynamoDB::ClientApi::ExecuteStatementInput = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#160
Aws::DynamoDB::ClientApi::ExecuteStatementOutput = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#161
Aws::DynamoDB::ClientApi::ExecuteTransactionInput = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#162
Aws::DynamoDB::ClientApi::ExecuteTransactionOutput = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#163
Aws::DynamoDB::ClientApi::ExpectedAttributeMap = T.let(T.unsafe(nil), Seahorse::Model::Shapes::MapShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#164
Aws::DynamoDB::ClientApi::ExpectedAttributeValue = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#165
Aws::DynamoDB::ClientApi::ExportArn = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#166
Aws::DynamoDB::ClientApi::ExportConflictException = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#167
Aws::DynamoDB::ClientApi::ExportDescription = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#168
Aws::DynamoDB::ClientApi::ExportEndTime = T.let(T.unsafe(nil), Seahorse::Model::Shapes::TimestampShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#169
Aws::DynamoDB::ClientApi::ExportFormat = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#170
Aws::DynamoDB::ClientApi::ExportFromTime = T.let(T.unsafe(nil), Seahorse::Model::Shapes::TimestampShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#171
Aws::DynamoDB::ClientApi::ExportManifest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#172
Aws::DynamoDB::ClientApi::ExportNextToken = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#173
Aws::DynamoDB::ClientApi::ExportNotFoundException = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#174
Aws::DynamoDB::ClientApi::ExportStartTime = T.let(T.unsafe(nil), Seahorse::Model::Shapes::TimestampShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#175
Aws::DynamoDB::ClientApi::ExportStatus = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#176
Aws::DynamoDB::ClientApi::ExportSummaries = T.let(T.unsafe(nil), Seahorse::Model::Shapes::ListShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#177
Aws::DynamoDB::ClientApi::ExportSummary = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#178
Aws::DynamoDB::ClientApi::ExportTableToPointInTimeInput = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#179
Aws::DynamoDB::ClientApi::ExportTableToPointInTimeOutput = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#180
Aws::DynamoDB::ClientApi::ExportTime = T.let(T.unsafe(nil), Seahorse::Model::Shapes::TimestampShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#181
Aws::DynamoDB::ClientApi::ExportToTime = T.let(T.unsafe(nil), Seahorse::Model::Shapes::TimestampShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#182
Aws::DynamoDB::ClientApi::ExportType = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#183
Aws::DynamoDB::ClientApi::ExportViewType = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#184
Aws::DynamoDB::ClientApi::ExpressionAttributeNameMap = T.let(T.unsafe(nil), Seahorse::Model::Shapes::MapShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#185
Aws::DynamoDB::ClientApi::ExpressionAttributeNameVariable = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#186
Aws::DynamoDB::ClientApi::ExpressionAttributeValueMap = T.let(T.unsafe(nil), Seahorse::Model::Shapes::MapShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#187
Aws::DynamoDB::ClientApi::ExpressionAttributeValueVariable = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#188
Aws::DynamoDB::ClientApi::FailureCode = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#189
Aws::DynamoDB::ClientApi::FailureException = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#190
Aws::DynamoDB::ClientApi::FailureMessage = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#191
Aws::DynamoDB::ClientApi::FilterConditionMap = T.let(T.unsafe(nil), Seahorse::Model::Shapes::MapShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#192
Aws::DynamoDB::ClientApi::Get = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#193
Aws::DynamoDB::ClientApi::GetItemInput = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#194
Aws::DynamoDB::ClientApi::GetItemOutput = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#195
Aws::DynamoDB::ClientApi::GlobalSecondaryIndex = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#196
Aws::DynamoDB::ClientApi::GlobalSecondaryIndexAutoScalingUpdate = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#197
Aws::DynamoDB::ClientApi::GlobalSecondaryIndexAutoScalingUpdateList = T.let(T.unsafe(nil), Seahorse::Model::Shapes::ListShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#198
Aws::DynamoDB::ClientApi::GlobalSecondaryIndexDescription = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#199
Aws::DynamoDB::ClientApi::GlobalSecondaryIndexDescriptionList = T.let(T.unsafe(nil), Seahorse::Model::Shapes::ListShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#200
Aws::DynamoDB::ClientApi::GlobalSecondaryIndexInfo = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#201
Aws::DynamoDB::ClientApi::GlobalSecondaryIndexList = T.let(T.unsafe(nil), Seahorse::Model::Shapes::ListShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#202
Aws::DynamoDB::ClientApi::GlobalSecondaryIndexUpdate = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#203
Aws::DynamoDB::ClientApi::GlobalSecondaryIndexUpdateList = T.let(T.unsafe(nil), Seahorse::Model::Shapes::ListShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#204
Aws::DynamoDB::ClientApi::GlobalSecondaryIndexes = T.let(T.unsafe(nil), Seahorse::Model::Shapes::ListShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#205
Aws::DynamoDB::ClientApi::GlobalTable = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#206
Aws::DynamoDB::ClientApi::GlobalTableAlreadyExistsException = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#207
Aws::DynamoDB::ClientApi::GlobalTableArnString = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#208
Aws::DynamoDB::ClientApi::GlobalTableDescription = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#209
Aws::DynamoDB::ClientApi::GlobalTableGlobalSecondaryIndexSettingsUpdate = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#210
Aws::DynamoDB::ClientApi::GlobalTableGlobalSecondaryIndexSettingsUpdateList = T.let(T.unsafe(nil), Seahorse::Model::Shapes::ListShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#211
Aws::DynamoDB::ClientApi::GlobalTableList = T.let(T.unsafe(nil), Seahorse::Model::Shapes::ListShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#212
Aws::DynamoDB::ClientApi::GlobalTableNotFoundException = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#213
Aws::DynamoDB::ClientApi::GlobalTableStatus = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#214
Aws::DynamoDB::ClientApi::IdempotentParameterMismatchException = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#215
Aws::DynamoDB::ClientApi::ImportArn = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#216
Aws::DynamoDB::ClientApi::ImportConflictException = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#217
Aws::DynamoDB::ClientApi::ImportEndTime = T.let(T.unsafe(nil), Seahorse::Model::Shapes::TimestampShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#218
Aws::DynamoDB::ClientApi::ImportNextToken = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#219
Aws::DynamoDB::ClientApi::ImportNotFoundException = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#220
Aws::DynamoDB::ClientApi::ImportStartTime = T.let(T.unsafe(nil), Seahorse::Model::Shapes::TimestampShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#221
Aws::DynamoDB::ClientApi::ImportStatus = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#222
Aws::DynamoDB::ClientApi::ImportSummary = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#223
Aws::DynamoDB::ClientApi::ImportSummaryList = T.let(T.unsafe(nil), Seahorse::Model::Shapes::ListShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#224
Aws::DynamoDB::ClientApi::ImportTableDescription = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#225
Aws::DynamoDB::ClientApi::ImportTableInput = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#226
Aws::DynamoDB::ClientApi::ImportTableOutput = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#227
Aws::DynamoDB::ClientApi::ImportedItemCount = T.let(T.unsafe(nil), Seahorse::Model::Shapes::IntegerShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#228
Aws::DynamoDB::ClientApi::IncrementalExportSpecification = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#229
Aws::DynamoDB::ClientApi::IndexName = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#230
Aws::DynamoDB::ClientApi::IndexNotFoundException = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#231
Aws::DynamoDB::ClientApi::IndexStatus = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#232
Aws::DynamoDB::ClientApi::InputCompressionType = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#233
Aws::DynamoDB::ClientApi::InputFormat = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#234
Aws::DynamoDB::ClientApi::InputFormatOptions = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#235
Aws::DynamoDB::ClientApi::Integer = T.let(T.unsafe(nil), Seahorse::Model::Shapes::IntegerShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#236
Aws::DynamoDB::ClientApi::IntegerObject = T.let(T.unsafe(nil), Seahorse::Model::Shapes::IntegerShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#237
Aws::DynamoDB::ClientApi::InternalServerError = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#238
Aws::DynamoDB::ClientApi::InvalidExportTimeException = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#239
Aws::DynamoDB::ClientApi::InvalidRestoreTimeException = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#240
Aws::DynamoDB::ClientApi::ItemCollectionKeyAttributeMap = T.let(T.unsafe(nil), Seahorse::Model::Shapes::MapShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#241
Aws::DynamoDB::ClientApi::ItemCollectionMetrics = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#242
Aws::DynamoDB::ClientApi::ItemCollectionMetricsMultiple = T.let(T.unsafe(nil), Seahorse::Model::Shapes::ListShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#243
Aws::DynamoDB::ClientApi::ItemCollectionMetricsPerTable = T.let(T.unsafe(nil), Seahorse::Model::Shapes::MapShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#244
Aws::DynamoDB::ClientApi::ItemCollectionSizeEstimateBound = T.let(T.unsafe(nil), Seahorse::Model::Shapes::FloatShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#245
Aws::DynamoDB::ClientApi::ItemCollectionSizeEstimateRange = T.let(T.unsafe(nil), Seahorse::Model::Shapes::ListShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#246
Aws::DynamoDB::ClientApi::ItemCollectionSizeLimitExceededException = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#247
Aws::DynamoDB::ClientApi::ItemCount = T.let(T.unsafe(nil), Seahorse::Model::Shapes::IntegerShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#248
Aws::DynamoDB::ClientApi::ItemList = T.let(T.unsafe(nil), Seahorse::Model::Shapes::ListShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#249
Aws::DynamoDB::ClientApi::ItemResponse = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#250
Aws::DynamoDB::ClientApi::ItemResponseList = T.let(T.unsafe(nil), Seahorse::Model::Shapes::ListShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#251
Aws::DynamoDB::ClientApi::KMSMasterKeyArn = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#252
Aws::DynamoDB::ClientApi::KMSMasterKeyId = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#253
Aws::DynamoDB::ClientApi::Key = T.let(T.unsafe(nil), Seahorse::Model::Shapes::MapShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#254
Aws::DynamoDB::ClientApi::KeyConditions = T.let(T.unsafe(nil), Seahorse::Model::Shapes::MapShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#255
Aws::DynamoDB::ClientApi::KeyExpression = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#256
Aws::DynamoDB::ClientApi::KeyList = T.let(T.unsafe(nil), Seahorse::Model::Shapes::ListShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#257
Aws::DynamoDB::ClientApi::KeySchema = T.let(T.unsafe(nil), Seahorse::Model::Shapes::ListShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#258
Aws::DynamoDB::ClientApi::KeySchemaAttributeName = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#259
Aws::DynamoDB::ClientApi::KeySchemaElement = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#260
Aws::DynamoDB::ClientApi::KeyType = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#261
Aws::DynamoDB::ClientApi::KeysAndAttributes = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#262
Aws::DynamoDB::ClientApi::KinesisDataStreamDestination = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#263
Aws::DynamoDB::ClientApi::KinesisDataStreamDestinations = T.let(T.unsafe(nil), Seahorse::Model::Shapes::ListShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#264
Aws::DynamoDB::ClientApi::KinesisStreamingDestinationInput = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#265
Aws::DynamoDB::ClientApi::KinesisStreamingDestinationOutput = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#266
Aws::DynamoDB::ClientApi::LastUpdateDateTime = T.let(T.unsafe(nil), Seahorse::Model::Shapes::TimestampShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#267
Aws::DynamoDB::ClientApi::LimitExceededException = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#268
Aws::DynamoDB::ClientApi::ListAttributeValue = T.let(T.unsafe(nil), Seahorse::Model::Shapes::ListShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#269
Aws::DynamoDB::ClientApi::ListBackupsInput = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#270
Aws::DynamoDB::ClientApi::ListBackupsOutput = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#271
Aws::DynamoDB::ClientApi::ListContributorInsightsInput = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#272
Aws::DynamoDB::ClientApi::ListContributorInsightsLimit = T.let(T.unsafe(nil), Seahorse::Model::Shapes::IntegerShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#273
Aws::DynamoDB::ClientApi::ListContributorInsightsOutput = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#274
Aws::DynamoDB::ClientApi::ListExportsInput = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#275
Aws::DynamoDB::ClientApi::ListExportsMaxLimit = T.let(T.unsafe(nil), Seahorse::Model::Shapes::IntegerShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#276
Aws::DynamoDB::ClientApi::ListExportsOutput = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#277
Aws::DynamoDB::ClientApi::ListGlobalTablesInput = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#278
Aws::DynamoDB::ClientApi::ListGlobalTablesOutput = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#279
Aws::DynamoDB::ClientApi::ListImportsInput = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#280
Aws::DynamoDB::ClientApi::ListImportsMaxLimit = T.let(T.unsafe(nil), Seahorse::Model::Shapes::IntegerShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#281
Aws::DynamoDB::ClientApi::ListImportsOutput = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#282
Aws::DynamoDB::ClientApi::ListTablesInput = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#283
Aws::DynamoDB::ClientApi::ListTablesInputLimit = T.let(T.unsafe(nil), Seahorse::Model::Shapes::IntegerShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#284
Aws::DynamoDB::ClientApi::ListTablesOutput = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#285
Aws::DynamoDB::ClientApi::ListTagsOfResourceInput = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#286
Aws::DynamoDB::ClientApi::ListTagsOfResourceOutput = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#287
Aws::DynamoDB::ClientApi::LocalSecondaryIndex = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#288
Aws::DynamoDB::ClientApi::LocalSecondaryIndexDescription = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#289
Aws::DynamoDB::ClientApi::LocalSecondaryIndexDescriptionList = T.let(T.unsafe(nil), Seahorse::Model::Shapes::ListShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#290
Aws::DynamoDB::ClientApi::LocalSecondaryIndexInfo = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#291
Aws::DynamoDB::ClientApi::LocalSecondaryIndexList = T.let(T.unsafe(nil), Seahorse::Model::Shapes::ListShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#292
Aws::DynamoDB::ClientApi::LocalSecondaryIndexes = T.let(T.unsafe(nil), Seahorse::Model::Shapes::ListShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#293
Aws::DynamoDB::ClientApi::Long = T.let(T.unsafe(nil), Seahorse::Model::Shapes::IntegerShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#294
Aws::DynamoDB::ClientApi::LongObject = T.let(T.unsafe(nil), Seahorse::Model::Shapes::IntegerShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#295
Aws::DynamoDB::ClientApi::MapAttributeValue = T.let(T.unsafe(nil), Seahorse::Model::Shapes::MapShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#296
Aws::DynamoDB::ClientApi::NextTokenString = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#297
Aws::DynamoDB::ClientApi::NonKeyAttributeName = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#298
Aws::DynamoDB::ClientApi::NonKeyAttributeNameList = T.let(T.unsafe(nil), Seahorse::Model::Shapes::ListShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#299
Aws::DynamoDB::ClientApi::NonNegativeLongObject = T.let(T.unsafe(nil), Seahorse::Model::Shapes::IntegerShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#300
Aws::DynamoDB::ClientApi::NullAttributeValue = T.let(T.unsafe(nil), Seahorse::Model::Shapes::BooleanShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#301
Aws::DynamoDB::ClientApi::NumberAttributeValue = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#302
Aws::DynamoDB::ClientApi::NumberSetAttributeValue = T.let(T.unsafe(nil), Seahorse::Model::Shapes::ListShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#303
Aws::DynamoDB::ClientApi::ParameterizedStatement = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#304
Aws::DynamoDB::ClientApi::ParameterizedStatements = T.let(T.unsafe(nil), Seahorse::Model::Shapes::ListShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#305
Aws::DynamoDB::ClientApi::PartiQLBatchRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::ListShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#306
Aws::DynamoDB::ClientApi::PartiQLBatchResponse = T.let(T.unsafe(nil), Seahorse::Model::Shapes::ListShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#307
Aws::DynamoDB::ClientApi::PartiQLNextToken = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#308
Aws::DynamoDB::ClientApi::PartiQLStatement = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#309
Aws::DynamoDB::ClientApi::PointInTimeRecoveryDescription = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#310
Aws::DynamoDB::ClientApi::PointInTimeRecoverySpecification = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#311
Aws::DynamoDB::ClientApi::PointInTimeRecoveryStatus = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#312
Aws::DynamoDB::ClientApi::PointInTimeRecoveryUnavailableException = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#313
Aws::DynamoDB::ClientApi::PositiveIntegerObject = T.let(T.unsafe(nil), Seahorse::Model::Shapes::IntegerShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#314
Aws::DynamoDB::ClientApi::PositiveLongObject = T.let(T.unsafe(nil), Seahorse::Model::Shapes::IntegerShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#315
Aws::DynamoDB::ClientApi::PreparedStatementParameters = T.let(T.unsafe(nil), Seahorse::Model::Shapes::ListShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#316
Aws::DynamoDB::ClientApi::ProcessedItemCount = T.let(T.unsafe(nil), Seahorse::Model::Shapes::IntegerShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#317
Aws::DynamoDB::ClientApi::Projection = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#318
Aws::DynamoDB::ClientApi::ProjectionExpression = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#319
Aws::DynamoDB::ClientApi::ProjectionType = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#320
Aws::DynamoDB::ClientApi::ProvisionedThroughput = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#321
Aws::DynamoDB::ClientApi::ProvisionedThroughputDescription = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#322
Aws::DynamoDB::ClientApi::ProvisionedThroughputExceededException = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#323
Aws::DynamoDB::ClientApi::ProvisionedThroughputOverride = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#324
Aws::DynamoDB::ClientApi::Put = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#325
Aws::DynamoDB::ClientApi::PutItemInput = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#326
Aws::DynamoDB::ClientApi::PutItemInputAttributeMap = T.let(T.unsafe(nil), Seahorse::Model::Shapes::MapShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#327
Aws::DynamoDB::ClientApi::PutItemOutput = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#328
Aws::DynamoDB::ClientApi::PutRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#329
Aws::DynamoDB::ClientApi::QueryInput = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#330
Aws::DynamoDB::ClientApi::QueryOutput = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#331
Aws::DynamoDB::ClientApi::RegionName = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#332
Aws::DynamoDB::ClientApi::Replica = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#333
Aws::DynamoDB::ClientApi::ReplicaAlreadyExistsException = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#334
Aws::DynamoDB::ClientApi::ReplicaAutoScalingDescription = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#335
Aws::DynamoDB::ClientApi::ReplicaAutoScalingDescriptionList = T.let(T.unsafe(nil), Seahorse::Model::Shapes::ListShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#336
Aws::DynamoDB::ClientApi::ReplicaAutoScalingUpdate = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#337
Aws::DynamoDB::ClientApi::ReplicaAutoScalingUpdateList = T.let(T.unsafe(nil), Seahorse::Model::Shapes::ListShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#338
Aws::DynamoDB::ClientApi::ReplicaDescription = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#339
Aws::DynamoDB::ClientApi::ReplicaDescriptionList = T.let(T.unsafe(nil), Seahorse::Model::Shapes::ListShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#340
Aws::DynamoDB::ClientApi::ReplicaGlobalSecondaryIndex = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#341
Aws::DynamoDB::ClientApi::ReplicaGlobalSecondaryIndexAutoScalingDescription = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#342
Aws::DynamoDB::ClientApi::ReplicaGlobalSecondaryIndexAutoScalingDescriptionList = T.let(T.unsafe(nil), Seahorse::Model::Shapes::ListShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#343
Aws::DynamoDB::ClientApi::ReplicaGlobalSecondaryIndexAutoScalingUpdate = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#344
Aws::DynamoDB::ClientApi::ReplicaGlobalSecondaryIndexAutoScalingUpdateList = T.let(T.unsafe(nil), Seahorse::Model::Shapes::ListShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#345
Aws::DynamoDB::ClientApi::ReplicaGlobalSecondaryIndexDescription = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#346
Aws::DynamoDB::ClientApi::ReplicaGlobalSecondaryIndexDescriptionList = T.let(T.unsafe(nil), Seahorse::Model::Shapes::ListShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#347
Aws::DynamoDB::ClientApi::ReplicaGlobalSecondaryIndexList = T.let(T.unsafe(nil), Seahorse::Model::Shapes::ListShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#348
Aws::DynamoDB::ClientApi::ReplicaGlobalSecondaryIndexSettingsDescription = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#349
Aws::DynamoDB::ClientApi::ReplicaGlobalSecondaryIndexSettingsDescriptionList = T.let(T.unsafe(nil), Seahorse::Model::Shapes::ListShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#350
Aws::DynamoDB::ClientApi::ReplicaGlobalSecondaryIndexSettingsUpdate = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#351
Aws::DynamoDB::ClientApi::ReplicaGlobalSecondaryIndexSettingsUpdateList = T.let(T.unsafe(nil), Seahorse::Model::Shapes::ListShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#352
Aws::DynamoDB::ClientApi::ReplicaList = T.let(T.unsafe(nil), Seahorse::Model::Shapes::ListShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#353
Aws::DynamoDB::ClientApi::ReplicaNotFoundException = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#354
Aws::DynamoDB::ClientApi::ReplicaSettingsDescription = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#355
Aws::DynamoDB::ClientApi::ReplicaSettingsDescriptionList = T.let(T.unsafe(nil), Seahorse::Model::Shapes::ListShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#356
Aws::DynamoDB::ClientApi::ReplicaSettingsUpdate = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#357
Aws::DynamoDB::ClientApi::ReplicaSettingsUpdateList = T.let(T.unsafe(nil), Seahorse::Model::Shapes::ListShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#358
Aws::DynamoDB::ClientApi::ReplicaStatus = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#359
Aws::DynamoDB::ClientApi::ReplicaStatusDescription = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#360
Aws::DynamoDB::ClientApi::ReplicaStatusPercentProgress = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#361
Aws::DynamoDB::ClientApi::ReplicaUpdate = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#362
Aws::DynamoDB::ClientApi::ReplicaUpdateList = T.let(T.unsafe(nil), Seahorse::Model::Shapes::ListShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#363
Aws::DynamoDB::ClientApi::ReplicationGroupUpdate = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#364
Aws::DynamoDB::ClientApi::ReplicationGroupUpdateList = T.let(T.unsafe(nil), Seahorse::Model::Shapes::ListShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#365
Aws::DynamoDB::ClientApi::RequestLimitExceeded = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#366
Aws::DynamoDB::ClientApi::ResourceArnString = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#367
Aws::DynamoDB::ClientApi::ResourceInUseException = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#368
Aws::DynamoDB::ClientApi::ResourceNotFoundException = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#369
Aws::DynamoDB::ClientApi::RestoreInProgress = T.let(T.unsafe(nil), Seahorse::Model::Shapes::BooleanShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#370
Aws::DynamoDB::ClientApi::RestoreSummary = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#371
Aws::DynamoDB::ClientApi::RestoreTableFromBackupInput = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#372
Aws::DynamoDB::ClientApi::RestoreTableFromBackupOutput = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#373
Aws::DynamoDB::ClientApi::RestoreTableToPointInTimeInput = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#374
Aws::DynamoDB::ClientApi::RestoreTableToPointInTimeOutput = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#375
Aws::DynamoDB::ClientApi::ReturnConsumedCapacity = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#376
Aws::DynamoDB::ClientApi::ReturnItemCollectionMetrics = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#377
Aws::DynamoDB::ClientApi::ReturnValue = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#378
Aws::DynamoDB::ClientApi::ReturnValuesOnConditionCheckFailure = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#379
Aws::DynamoDB::ClientApi::S3Bucket = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#380
Aws::DynamoDB::ClientApi::S3BucketOwner = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#381
Aws::DynamoDB::ClientApi::S3BucketSource = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#382
Aws::DynamoDB::ClientApi::S3Prefix = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#383
Aws::DynamoDB::ClientApi::S3SseAlgorithm = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#384
Aws::DynamoDB::ClientApi::S3SseKmsKeyId = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#385
Aws::DynamoDB::ClientApi::SSEDescription = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#386
Aws::DynamoDB::ClientApi::SSEEnabled = T.let(T.unsafe(nil), Seahorse::Model::Shapes::BooleanShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#387
Aws::DynamoDB::ClientApi::SSESpecification = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#388
Aws::DynamoDB::ClientApi::SSEStatus = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#389
Aws::DynamoDB::ClientApi::SSEType = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#390
Aws::DynamoDB::ClientApi::ScalarAttributeType = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#391
Aws::DynamoDB::ClientApi::ScanInput = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#392
Aws::DynamoDB::ClientApi::ScanOutput = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#393
Aws::DynamoDB::ClientApi::ScanSegment = T.let(T.unsafe(nil), Seahorse::Model::Shapes::IntegerShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#394
Aws::DynamoDB::ClientApi::ScanTotalSegments = T.let(T.unsafe(nil), Seahorse::Model::Shapes::IntegerShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#395
Aws::DynamoDB::ClientApi::SecondaryIndexesCapacityMap = T.let(T.unsafe(nil), Seahorse::Model::Shapes::MapShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#396
Aws::DynamoDB::ClientApi::Select = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#397
Aws::DynamoDB::ClientApi::SourceTableDetails = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#398
Aws::DynamoDB::ClientApi::SourceTableFeatureDetails = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#399
Aws::DynamoDB::ClientApi::StreamArn = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#400
Aws::DynamoDB::ClientApi::StreamEnabled = T.let(T.unsafe(nil), Seahorse::Model::Shapes::BooleanShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#401
Aws::DynamoDB::ClientApi::StreamSpecification = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#402
Aws::DynamoDB::ClientApi::StreamViewType = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#403
Aws::DynamoDB::ClientApi::String = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#404
Aws::DynamoDB::ClientApi::StringAttributeValue = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#405
Aws::DynamoDB::ClientApi::StringSetAttributeValue = T.let(T.unsafe(nil), Seahorse::Model::Shapes::ListShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#406
Aws::DynamoDB::ClientApi::TableAlreadyExistsException = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#407
Aws::DynamoDB::ClientApi::TableArn = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#408
Aws::DynamoDB::ClientApi::TableAutoScalingDescription = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#409
Aws::DynamoDB::ClientApi::TableClass = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#410
Aws::DynamoDB::ClientApi::TableClassSummary = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#411
Aws::DynamoDB::ClientApi::TableCreationDateTime = T.let(T.unsafe(nil), Seahorse::Model::Shapes::TimestampShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#412
Aws::DynamoDB::ClientApi::TableCreationParameters = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#413
Aws::DynamoDB::ClientApi::TableDescription = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#414
Aws::DynamoDB::ClientApi::TableId = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#415
Aws::DynamoDB::ClientApi::TableInUseException = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#416
Aws::DynamoDB::ClientApi::TableName = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#417
Aws::DynamoDB::ClientApi::TableNameList = T.let(T.unsafe(nil), Seahorse::Model::Shapes::ListShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#418
Aws::DynamoDB::ClientApi::TableNotFoundException = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#419
Aws::DynamoDB::ClientApi::TableStatus = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#420
Aws::DynamoDB::ClientApi::Tag = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#421
Aws::DynamoDB::ClientApi::TagKeyList = T.let(T.unsafe(nil), Seahorse::Model::Shapes::ListShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#422
Aws::DynamoDB::ClientApi::TagKeyString = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#423
Aws::DynamoDB::ClientApi::TagList = T.let(T.unsafe(nil), Seahorse::Model::Shapes::ListShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#424
Aws::DynamoDB::ClientApi::TagResourceInput = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#425
Aws::DynamoDB::ClientApi::TagValueString = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#426
Aws::DynamoDB::ClientApi::TimeRangeLowerBound = T.let(T.unsafe(nil), Seahorse::Model::Shapes::TimestampShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#427
Aws::DynamoDB::ClientApi::TimeRangeUpperBound = T.let(T.unsafe(nil), Seahorse::Model::Shapes::TimestampShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#428
Aws::DynamoDB::ClientApi::TimeToLiveAttributeName = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#429
Aws::DynamoDB::ClientApi::TimeToLiveDescription = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#430
Aws::DynamoDB::ClientApi::TimeToLiveEnabled = T.let(T.unsafe(nil), Seahorse::Model::Shapes::BooleanShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#431
Aws::DynamoDB::ClientApi::TimeToLiveSpecification = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#432
Aws::DynamoDB::ClientApi::TimeToLiveStatus = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#433
Aws::DynamoDB::ClientApi::TransactGetItem = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#434
Aws::DynamoDB::ClientApi::TransactGetItemList = T.let(T.unsafe(nil), Seahorse::Model::Shapes::ListShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#435
Aws::DynamoDB::ClientApi::TransactGetItemsInput = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#436
Aws::DynamoDB::ClientApi::TransactGetItemsOutput = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#437
Aws::DynamoDB::ClientApi::TransactWriteItem = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#438
Aws::DynamoDB::ClientApi::TransactWriteItemList = T.let(T.unsafe(nil), Seahorse::Model::Shapes::ListShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#439
Aws::DynamoDB::ClientApi::TransactWriteItemsInput = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#440
Aws::DynamoDB::ClientApi::TransactWriteItemsOutput = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#441
Aws::DynamoDB::ClientApi::TransactionCanceledException = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#442
Aws::DynamoDB::ClientApi::TransactionConflictException = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#443
Aws::DynamoDB::ClientApi::TransactionInProgressException = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#444
Aws::DynamoDB::ClientApi::UntagResourceInput = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#445
Aws::DynamoDB::ClientApi::Update = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#446
Aws::DynamoDB::ClientApi::UpdateContinuousBackupsInput = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#447
Aws::DynamoDB::ClientApi::UpdateContinuousBackupsOutput = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#448
Aws::DynamoDB::ClientApi::UpdateContributorInsightsInput = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#449
Aws::DynamoDB::ClientApi::UpdateContributorInsightsOutput = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#450
Aws::DynamoDB::ClientApi::UpdateExpression = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#451
Aws::DynamoDB::ClientApi::UpdateGlobalSecondaryIndexAction = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#452
Aws::DynamoDB::ClientApi::UpdateGlobalTableInput = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#453
Aws::DynamoDB::ClientApi::UpdateGlobalTableOutput = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#454
Aws::DynamoDB::ClientApi::UpdateGlobalTableSettingsInput = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#455
Aws::DynamoDB::ClientApi::UpdateGlobalTableSettingsOutput = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#456
Aws::DynamoDB::ClientApi::UpdateItemInput = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#457
Aws::DynamoDB::ClientApi::UpdateItemOutput = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#458
Aws::DynamoDB::ClientApi::UpdateReplicationGroupMemberAction = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#459
Aws::DynamoDB::ClientApi::UpdateTableInput = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#460
Aws::DynamoDB::ClientApi::UpdateTableOutput = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#461
Aws::DynamoDB::ClientApi::UpdateTableReplicaAutoScalingInput = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#462
Aws::DynamoDB::ClientApi::UpdateTableReplicaAutoScalingOutput = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#463
Aws::DynamoDB::ClientApi::UpdateTimeToLiveInput = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#464
Aws::DynamoDB::ClientApi::UpdateTimeToLiveOutput = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#465
Aws::DynamoDB::ClientApi::WriteRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/client_api.rb#466
Aws::DynamoDB::ClientApi::WriteRequests = T.let(T.unsafe(nil), Seahorse::Model::Shapes::ListShape)

# Endpoint parameters used to influence endpoints per request.
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/endpoint_parameters.rb#33
class Aws::DynamoDB::EndpointParameters < ::Struct
  include ::Aws::Structure

  # @return [EndpointParameters] a new instance of EndpointParameters
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/endpoint_parameters.rb#51
  def initialize(options = T.unsafe(nil)); end

  # Override the endpoint used to send this request
  #
  # @return [String]
  def endpoint; end

  # Override the endpoint used to send this request
  #
  # @return [String]
  def endpoint=(_); end

  # The AWS region used to dispatch the request.
  #
  # @return [String]
  def region; end

  # The AWS region used to dispatch the request.
  #
  # @return [String]
  def region=(_); end

  # When true, use the dual-stack endpoint. If the configured endpoint does not support dual-stack, dispatching the request MAY return an error.
  #
  # @return [Boolean]
  def use_dual_stack; end

  # When true, use the dual-stack endpoint. If the configured endpoint does not support dual-stack, dispatching the request MAY return an error.
  #
  # @return [Boolean]
  def use_dual_stack=(_); end

  # When true, send this request to the FIPS-compliant regional endpoint. If the configured endpoint does not have a FIPS compliant endpoint, dispatching the request will return an error.
  #
  # @return [Boolean]
  def use_fips; end

  # When true, send this request to the FIPS-compliant regional endpoint. If the configured endpoint does not have a FIPS compliant endpoint, dispatching the request will return an error.
  #
  # @return [Boolean]
  def use_fips=(_); end

  class << self
    def [](*_arg0); end
    def inspect; end
    def keyword_init?; end
    def members; end
    def new(*_arg0); end
  end
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/endpoint_provider.rb#11
class Aws::DynamoDB::EndpointProvider
  # @raise [ArgumentError]
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/endpoint_provider.rb#12
  def resolve_endpoint(parameters); end
end

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/endpoints.rb#13
module Aws::DynamoDB::Endpoints; end

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/endpoints.rb#15
class Aws::DynamoDB::Endpoints::BatchExecuteStatement
  class << self
    # @api private
    #
    # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/endpoints.rb#16
    def build(context); end
  end
end

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/endpoints.rb#29
class Aws::DynamoDB::Endpoints::BatchGetItem
  class << self
    # @api private
    #
    # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/endpoints.rb#30
    def build(context); end
  end
end

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/endpoints.rb#43
class Aws::DynamoDB::Endpoints::BatchWriteItem
  class << self
    # @api private
    #
    # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/endpoints.rb#44
    def build(context); end
  end
end

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/endpoints.rb#57
class Aws::DynamoDB::Endpoints::CreateBackup
  class << self
    # @api private
    #
    # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/endpoints.rb#58
    def build(context); end
  end
end

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/endpoints.rb#71
class Aws::DynamoDB::Endpoints::CreateGlobalTable
  class << self
    # @api private
    #
    # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/endpoints.rb#72
    def build(context); end
  end
end

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/endpoints.rb#85
class Aws::DynamoDB::Endpoints::CreateTable
  class << self
    # @api private
    #
    # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/endpoints.rb#86
    def build(context); end
  end
end

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/endpoints.rb#99
class Aws::DynamoDB::Endpoints::DeleteBackup
  class << self
    # @api private
    #
    # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/endpoints.rb#100
    def build(context); end
  end
end

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/endpoints.rb#113
class Aws::DynamoDB::Endpoints::DeleteItem
  class << self
    # @api private
    #
    # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/endpoints.rb#114
    def build(context); end
  end
end

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/endpoints.rb#127
class Aws::DynamoDB::Endpoints::DeleteTable
  class << self
    # @api private
    #
    # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/endpoints.rb#128
    def build(context); end
  end
end

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/endpoints.rb#141
class Aws::DynamoDB::Endpoints::DescribeBackup
  class << self
    # @api private
    #
    # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/endpoints.rb#142
    def build(context); end
  end
end

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/endpoints.rb#155
class Aws::DynamoDB::Endpoints::DescribeContinuousBackups
  class << self
    # @api private
    #
    # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/endpoints.rb#156
    def build(context); end
  end
end

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/endpoints.rb#169
class Aws::DynamoDB::Endpoints::DescribeContributorInsights
  class << self
    # @api private
    #
    # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/endpoints.rb#170
    def build(context); end
  end
end

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/endpoints.rb#183
class Aws::DynamoDB::Endpoints::DescribeEndpoints
  class << self
    # @api private
    #
    # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/endpoints.rb#184
    def build(context); end
  end
end

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/endpoints.rb#197
class Aws::DynamoDB::Endpoints::DescribeExport
  class << self
    # @api private
    #
    # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/endpoints.rb#198
    def build(context); end
  end
end

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/endpoints.rb#211
class Aws::DynamoDB::Endpoints::DescribeGlobalTable
  class << self
    # @api private
    #
    # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/endpoints.rb#212
    def build(context); end
  end
end

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/endpoints.rb#225
class Aws::DynamoDB::Endpoints::DescribeGlobalTableSettings
  class << self
    # @api private
    #
    # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/endpoints.rb#226
    def build(context); end
  end
end

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/endpoints.rb#239
class Aws::DynamoDB::Endpoints::DescribeImport
  class << self
    # @api private
    #
    # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/endpoints.rb#240
    def build(context); end
  end
end

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/endpoints.rb#253
class Aws::DynamoDB::Endpoints::DescribeKinesisStreamingDestination
  class << self
    # @api private
    #
    # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/endpoints.rb#254
    def build(context); end
  end
end

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/endpoints.rb#267
class Aws::DynamoDB::Endpoints::DescribeLimits
  class << self
    # @api private
    #
    # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/endpoints.rb#268
    def build(context); end
  end
end

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/endpoints.rb#281
class Aws::DynamoDB::Endpoints::DescribeTable
  class << self
    # @api private
    #
    # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/endpoints.rb#282
    def build(context); end
  end
end

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/endpoints.rb#295
class Aws::DynamoDB::Endpoints::DescribeTableReplicaAutoScaling
  class << self
    # @api private
    #
    # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/endpoints.rb#296
    def build(context); end
  end
end

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/endpoints.rb#309
class Aws::DynamoDB::Endpoints::DescribeTimeToLive
  class << self
    # @api private
    #
    # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/endpoints.rb#310
    def build(context); end
  end
end

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/endpoints.rb#323
class Aws::DynamoDB::Endpoints::DisableKinesisStreamingDestination
  class << self
    # @api private
    #
    # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/endpoints.rb#324
    def build(context); end
  end
end

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/endpoints.rb#337
class Aws::DynamoDB::Endpoints::EnableKinesisStreamingDestination
  class << self
    # @api private
    #
    # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/endpoints.rb#338
    def build(context); end
  end
end

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/endpoints.rb#351
class Aws::DynamoDB::Endpoints::ExecuteStatement
  class << self
    # @api private
    #
    # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/endpoints.rb#352
    def build(context); end
  end
end

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/endpoints.rb#365
class Aws::DynamoDB::Endpoints::ExecuteTransaction
  class << self
    # @api private
    #
    # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/endpoints.rb#366
    def build(context); end
  end
end

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/endpoints.rb#379
class Aws::DynamoDB::Endpoints::ExportTableToPointInTime
  class << self
    # @api private
    #
    # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/endpoints.rb#380
    def build(context); end
  end
end

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/endpoints.rb#393
class Aws::DynamoDB::Endpoints::GetItem
  class << self
    # @api private
    #
    # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/endpoints.rb#394
    def build(context); end
  end
end

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/endpoints.rb#407
class Aws::DynamoDB::Endpoints::ImportTable
  class << self
    # @api private
    #
    # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/endpoints.rb#408
    def build(context); end
  end
end

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/endpoints.rb#421
class Aws::DynamoDB::Endpoints::ListBackups
  class << self
    # @api private
    #
    # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/endpoints.rb#422
    def build(context); end
  end
end

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/endpoints.rb#435
class Aws::DynamoDB::Endpoints::ListContributorInsights
  class << self
    # @api private
    #
    # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/endpoints.rb#436
    def build(context); end
  end
end

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/endpoints.rb#449
class Aws::DynamoDB::Endpoints::ListExports
  class << self
    # @api private
    #
    # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/endpoints.rb#450
    def build(context); end
  end
end

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/endpoints.rb#463
class Aws::DynamoDB::Endpoints::ListGlobalTables
  class << self
    # @api private
    #
    # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/endpoints.rb#464
    def build(context); end
  end
end

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/endpoints.rb#477
class Aws::DynamoDB::Endpoints::ListImports
  class << self
    # @api private
    #
    # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/endpoints.rb#478
    def build(context); end
  end
end

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/endpoints.rb#491
class Aws::DynamoDB::Endpoints::ListTables
  class << self
    # @api private
    #
    # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/endpoints.rb#492
    def build(context); end
  end
end

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/endpoints.rb#505
class Aws::DynamoDB::Endpoints::ListTagsOfResource
  class << self
    # @api private
    #
    # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/endpoints.rb#506
    def build(context); end
  end
end

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/endpoints.rb#519
class Aws::DynamoDB::Endpoints::PutItem
  class << self
    # @api private
    #
    # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/endpoints.rb#520
    def build(context); end
  end
end

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/endpoints.rb#533
class Aws::DynamoDB::Endpoints::Query
  class << self
    # @api private
    #
    # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/endpoints.rb#534
    def build(context); end
  end
end

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/endpoints.rb#547
class Aws::DynamoDB::Endpoints::RestoreTableFromBackup
  class << self
    # @api private
    #
    # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/endpoints.rb#548
    def build(context); end
  end
end

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/endpoints.rb#561
class Aws::DynamoDB::Endpoints::RestoreTableToPointInTime
  class << self
    # @api private
    #
    # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/endpoints.rb#562
    def build(context); end
  end
end

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/endpoints.rb#575
class Aws::DynamoDB::Endpoints::Scan
  class << self
    # @api private
    #
    # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/endpoints.rb#576
    def build(context); end
  end
end

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/endpoints.rb#589
class Aws::DynamoDB::Endpoints::TagResource
  class << self
    # @api private
    #
    # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/endpoints.rb#590
    def build(context); end
  end
end

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/endpoints.rb#603
class Aws::DynamoDB::Endpoints::TransactGetItems
  class << self
    # @api private
    #
    # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/endpoints.rb#604
    def build(context); end
  end
end

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/endpoints.rb#617
class Aws::DynamoDB::Endpoints::TransactWriteItems
  class << self
    # @api private
    #
    # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/endpoints.rb#618
    def build(context); end
  end
end

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/endpoints.rb#631
class Aws::DynamoDB::Endpoints::UntagResource
  class << self
    # @api private
    #
    # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/endpoints.rb#632
    def build(context); end
  end
end

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/endpoints.rb#645
class Aws::DynamoDB::Endpoints::UpdateContinuousBackups
  class << self
    # @api private
    #
    # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/endpoints.rb#646
    def build(context); end
  end
end

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/endpoints.rb#659
class Aws::DynamoDB::Endpoints::UpdateContributorInsights
  class << self
    # @api private
    #
    # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/endpoints.rb#660
    def build(context); end
  end
end

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/endpoints.rb#673
class Aws::DynamoDB::Endpoints::UpdateGlobalTable
  class << self
    # @api private
    #
    # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/endpoints.rb#674
    def build(context); end
  end
end

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/endpoints.rb#687
class Aws::DynamoDB::Endpoints::UpdateGlobalTableSettings
  class << self
    # @api private
    #
    # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/endpoints.rb#688
    def build(context); end
  end
end

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/endpoints.rb#701
class Aws::DynamoDB::Endpoints::UpdateItem
  class << self
    # @api private
    #
    # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/endpoints.rb#702
    def build(context); end
  end
end

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/endpoints.rb#715
class Aws::DynamoDB::Endpoints::UpdateTable
  class << self
    # @api private
    #
    # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/endpoints.rb#716
    def build(context); end
  end
end

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/endpoints.rb#729
class Aws::DynamoDB::Endpoints::UpdateTableReplicaAutoScaling
  class << self
    # @api private
    #
    # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/endpoints.rb#730
    def build(context); end
  end
end

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/endpoints.rb#743
class Aws::DynamoDB::Endpoints::UpdateTimeToLive
  class << self
    # @api private
    #
    # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/endpoints.rb#744
    def build(context); end
  end
end

# When DynamoDB returns an error response, the Ruby SDK constructs and raises an error.
# These errors all extend Aws::DynamoDB::Errors::ServiceError < {Aws::Errors::ServiceError}
#
# You can rescue all DynamoDB errors using ServiceError:
#
#     begin
#       # do stuff
#     rescue Aws::DynamoDB::Errors::ServiceError
#       # rescues all DynamoDB API errors
#     end
#
#
# ## Request Context
# ServiceError objects have a {Aws::Errors::ServiceError#context #context} method that returns
# information about the request that generated the error.
# See {Seahorse::Client::RequestContext} for more information.
#
# ## Error Classes
# * {BackupInUseException}
# * {BackupNotFoundException}
# * {ConditionalCheckFailedException}
# * {ContinuousBackupsUnavailableException}
# * {DuplicateItemException}
# * {ExportConflictException}
# * {ExportNotFoundException}
# * {GlobalTableAlreadyExistsException}
# * {GlobalTableNotFoundException}
# * {IdempotentParameterMismatchException}
# * {ImportConflictException}
# * {ImportNotFoundException}
# * {IndexNotFoundException}
# * {InternalServerError}
# * {InvalidExportTimeException}
# * {InvalidRestoreTimeException}
# * {ItemCollectionSizeLimitExceededException}
# * {LimitExceededException}
# * {PointInTimeRecoveryUnavailableException}
# * {ProvisionedThroughputExceededException}
# * {ReplicaAlreadyExistsException}
# * {ReplicaNotFoundException}
# * {RequestLimitExceeded}
# * {ResourceInUseException}
# * {ResourceNotFoundException}
# * {TableAlreadyExistsException}
# * {TableInUseException}
# * {TableNotFoundException}
# * {TransactionCanceledException}
# * {TransactionConflictException}
# * {TransactionInProgressException}
#
# Additionally, error classes are dynamically generated for service errors based on the error code
# if they are not defined above.
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/errors.rb#64
module Aws::DynamoDB::Errors
  extend ::Aws::Errors::DynamicErrors
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/errors.rb#68
class Aws::DynamoDB::Errors::BackupInUseException < ::Aws::DynamoDB::Errors::ServiceError
  # @param context [Seahorse::Client::RequestContext]
  # @param message [String]
  # @param data [Aws::DynamoDB::Types::BackupInUseException]
  # @return [BackupInUseException] a new instance of BackupInUseException
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/errors.rb#73
  def initialize(context, message, data = T.unsafe(nil)); end

  # @return [String]
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/errors.rb#78
  def message; end
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/errors.rb#83
class Aws::DynamoDB::Errors::BackupNotFoundException < ::Aws::DynamoDB::Errors::ServiceError
  # @param context [Seahorse::Client::RequestContext]
  # @param message [String]
  # @param data [Aws::DynamoDB::Types::BackupNotFoundException]
  # @return [BackupNotFoundException] a new instance of BackupNotFoundException
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/errors.rb#88
  def initialize(context, message, data = T.unsafe(nil)); end

  # @return [String]
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/errors.rb#93
  def message; end
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/errors.rb#98
class Aws::DynamoDB::Errors::ConditionalCheckFailedException < ::Aws::DynamoDB::Errors::ServiceError
  # @param context [Seahorse::Client::RequestContext]
  # @param message [String]
  # @param data [Aws::DynamoDB::Types::ConditionalCheckFailedException]
  # @return [ConditionalCheckFailedException] a new instance of ConditionalCheckFailedException
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/errors.rb#103
  def initialize(context, message, data = T.unsafe(nil)); end

  # @return [String]
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/errors.rb#113
  def item; end

  # @return [String]
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/errors.rb#108
  def message; end
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/errors.rb#118
class Aws::DynamoDB::Errors::ContinuousBackupsUnavailableException < ::Aws::DynamoDB::Errors::ServiceError
  # @param context [Seahorse::Client::RequestContext]
  # @param message [String]
  # @param data [Aws::DynamoDB::Types::ContinuousBackupsUnavailableException]
  # @return [ContinuousBackupsUnavailableException] a new instance of ContinuousBackupsUnavailableException
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/errors.rb#123
  def initialize(context, message, data = T.unsafe(nil)); end

  # @return [String]
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/errors.rb#128
  def message; end
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/errors.rb#133
class Aws::DynamoDB::Errors::DuplicateItemException < ::Aws::DynamoDB::Errors::ServiceError
  # @param context [Seahorse::Client::RequestContext]
  # @param message [String]
  # @param data [Aws::DynamoDB::Types::DuplicateItemException]
  # @return [DuplicateItemException] a new instance of DuplicateItemException
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/errors.rb#138
  def initialize(context, message, data = T.unsafe(nil)); end

  # @return [String]
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/errors.rb#143
  def message; end
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/errors.rb#148
class Aws::DynamoDB::Errors::ExportConflictException < ::Aws::DynamoDB::Errors::ServiceError
  # @param context [Seahorse::Client::RequestContext]
  # @param message [String]
  # @param data [Aws::DynamoDB::Types::ExportConflictException]
  # @return [ExportConflictException] a new instance of ExportConflictException
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/errors.rb#153
  def initialize(context, message, data = T.unsafe(nil)); end

  # @return [String]
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/errors.rb#158
  def message; end
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/errors.rb#163
class Aws::DynamoDB::Errors::ExportNotFoundException < ::Aws::DynamoDB::Errors::ServiceError
  # @param context [Seahorse::Client::RequestContext]
  # @param message [String]
  # @param data [Aws::DynamoDB::Types::ExportNotFoundException]
  # @return [ExportNotFoundException] a new instance of ExportNotFoundException
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/errors.rb#168
  def initialize(context, message, data = T.unsafe(nil)); end

  # @return [String]
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/errors.rb#173
  def message; end
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/errors.rb#178
class Aws::DynamoDB::Errors::GlobalTableAlreadyExistsException < ::Aws::DynamoDB::Errors::ServiceError
  # @param context [Seahorse::Client::RequestContext]
  # @param message [String]
  # @param data [Aws::DynamoDB::Types::GlobalTableAlreadyExistsException]
  # @return [GlobalTableAlreadyExistsException] a new instance of GlobalTableAlreadyExistsException
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/errors.rb#183
  def initialize(context, message, data = T.unsafe(nil)); end

  # @return [String]
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/errors.rb#188
  def message; end
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/errors.rb#193
class Aws::DynamoDB::Errors::GlobalTableNotFoundException < ::Aws::DynamoDB::Errors::ServiceError
  # @param context [Seahorse::Client::RequestContext]
  # @param message [String]
  # @param data [Aws::DynamoDB::Types::GlobalTableNotFoundException]
  # @return [GlobalTableNotFoundException] a new instance of GlobalTableNotFoundException
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/errors.rb#198
  def initialize(context, message, data = T.unsafe(nil)); end

  # @return [String]
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/errors.rb#203
  def message; end
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/errors.rb#208
class Aws::DynamoDB::Errors::IdempotentParameterMismatchException < ::Aws::DynamoDB::Errors::ServiceError
  # @param context [Seahorse::Client::RequestContext]
  # @param message [String]
  # @param data [Aws::DynamoDB::Types::IdempotentParameterMismatchException]
  # @return [IdempotentParameterMismatchException] a new instance of IdempotentParameterMismatchException
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/errors.rb#213
  def initialize(context, message, data = T.unsafe(nil)); end

  # @return [String]
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/errors.rb#218
  def message; end
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/errors.rb#223
class Aws::DynamoDB::Errors::ImportConflictException < ::Aws::DynamoDB::Errors::ServiceError
  # @param context [Seahorse::Client::RequestContext]
  # @param message [String]
  # @param data [Aws::DynamoDB::Types::ImportConflictException]
  # @return [ImportConflictException] a new instance of ImportConflictException
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/errors.rb#228
  def initialize(context, message, data = T.unsafe(nil)); end

  # @return [String]
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/errors.rb#233
  def message; end
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/errors.rb#238
class Aws::DynamoDB::Errors::ImportNotFoundException < ::Aws::DynamoDB::Errors::ServiceError
  # @param context [Seahorse::Client::RequestContext]
  # @param message [String]
  # @param data [Aws::DynamoDB::Types::ImportNotFoundException]
  # @return [ImportNotFoundException] a new instance of ImportNotFoundException
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/errors.rb#243
  def initialize(context, message, data = T.unsafe(nil)); end

  # @return [String]
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/errors.rb#248
  def message; end
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/errors.rb#253
class Aws::DynamoDB::Errors::IndexNotFoundException < ::Aws::DynamoDB::Errors::ServiceError
  # @param context [Seahorse::Client::RequestContext]
  # @param message [String]
  # @param data [Aws::DynamoDB::Types::IndexNotFoundException]
  # @return [IndexNotFoundException] a new instance of IndexNotFoundException
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/errors.rb#258
  def initialize(context, message, data = T.unsafe(nil)); end

  # @return [String]
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/errors.rb#263
  def message; end
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/errors.rb#268
class Aws::DynamoDB::Errors::InternalServerError < ::Aws::DynamoDB::Errors::ServiceError
  # @param context [Seahorse::Client::RequestContext]
  # @param message [String]
  # @param data [Aws::DynamoDB::Types::InternalServerError]
  # @return [InternalServerError] a new instance of InternalServerError
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/errors.rb#273
  def initialize(context, message, data = T.unsafe(nil)); end

  # @return [String]
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/errors.rb#278
  def message; end
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/errors.rb#283
class Aws::DynamoDB::Errors::InvalidExportTimeException < ::Aws::DynamoDB::Errors::ServiceError
  # @param context [Seahorse::Client::RequestContext]
  # @param message [String]
  # @param data [Aws::DynamoDB::Types::InvalidExportTimeException]
  # @return [InvalidExportTimeException] a new instance of InvalidExportTimeException
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/errors.rb#288
  def initialize(context, message, data = T.unsafe(nil)); end

  # @return [String]
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/errors.rb#293
  def message; end
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/errors.rb#298
class Aws::DynamoDB::Errors::InvalidRestoreTimeException < ::Aws::DynamoDB::Errors::ServiceError
  # @param context [Seahorse::Client::RequestContext]
  # @param message [String]
  # @param data [Aws::DynamoDB::Types::InvalidRestoreTimeException]
  # @return [InvalidRestoreTimeException] a new instance of InvalidRestoreTimeException
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/errors.rb#303
  def initialize(context, message, data = T.unsafe(nil)); end

  # @return [String]
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/errors.rb#308
  def message; end
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/errors.rb#313
class Aws::DynamoDB::Errors::ItemCollectionSizeLimitExceededException < ::Aws::DynamoDB::Errors::ServiceError
  # @param context [Seahorse::Client::RequestContext]
  # @param message [String]
  # @param data [Aws::DynamoDB::Types::ItemCollectionSizeLimitExceededException]
  # @return [ItemCollectionSizeLimitExceededException] a new instance of ItemCollectionSizeLimitExceededException
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/errors.rb#318
  def initialize(context, message, data = T.unsafe(nil)); end

  # @return [String]
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/errors.rb#323
  def message; end
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/errors.rb#328
class Aws::DynamoDB::Errors::LimitExceededException < ::Aws::DynamoDB::Errors::ServiceError
  # @param context [Seahorse::Client::RequestContext]
  # @param message [String]
  # @param data [Aws::DynamoDB::Types::LimitExceededException]
  # @return [LimitExceededException] a new instance of LimitExceededException
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/errors.rb#333
  def initialize(context, message, data = T.unsafe(nil)); end

  # @return [String]
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/errors.rb#338
  def message; end
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/errors.rb#343
class Aws::DynamoDB::Errors::PointInTimeRecoveryUnavailableException < ::Aws::DynamoDB::Errors::ServiceError
  # @param context [Seahorse::Client::RequestContext]
  # @param message [String]
  # @param data [Aws::DynamoDB::Types::PointInTimeRecoveryUnavailableException]
  # @return [PointInTimeRecoveryUnavailableException] a new instance of PointInTimeRecoveryUnavailableException
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/errors.rb#348
  def initialize(context, message, data = T.unsafe(nil)); end

  # @return [String]
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/errors.rb#353
  def message; end
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/errors.rb#358
class Aws::DynamoDB::Errors::ProvisionedThroughputExceededException < ::Aws::DynamoDB::Errors::ServiceError
  # @param context [Seahorse::Client::RequestContext]
  # @param message [String]
  # @param data [Aws::DynamoDB::Types::ProvisionedThroughputExceededException]
  # @return [ProvisionedThroughputExceededException] a new instance of ProvisionedThroughputExceededException
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/errors.rb#363
  def initialize(context, message, data = T.unsafe(nil)); end

  # @return [String]
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/errors.rb#368
  def message; end
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/errors.rb#373
class Aws::DynamoDB::Errors::ReplicaAlreadyExistsException < ::Aws::DynamoDB::Errors::ServiceError
  # @param context [Seahorse::Client::RequestContext]
  # @param message [String]
  # @param data [Aws::DynamoDB::Types::ReplicaAlreadyExistsException]
  # @return [ReplicaAlreadyExistsException] a new instance of ReplicaAlreadyExistsException
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/errors.rb#378
  def initialize(context, message, data = T.unsafe(nil)); end

  # @return [String]
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/errors.rb#383
  def message; end
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/errors.rb#388
class Aws::DynamoDB::Errors::ReplicaNotFoundException < ::Aws::DynamoDB::Errors::ServiceError
  # @param context [Seahorse::Client::RequestContext]
  # @param message [String]
  # @param data [Aws::DynamoDB::Types::ReplicaNotFoundException]
  # @return [ReplicaNotFoundException] a new instance of ReplicaNotFoundException
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/errors.rb#393
  def initialize(context, message, data = T.unsafe(nil)); end

  # @return [String]
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/errors.rb#398
  def message; end
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/errors.rb#403
class Aws::DynamoDB::Errors::RequestLimitExceeded < ::Aws::DynamoDB::Errors::ServiceError
  # @param context [Seahorse::Client::RequestContext]
  # @param message [String]
  # @param data [Aws::DynamoDB::Types::RequestLimitExceeded]
  # @return [RequestLimitExceeded] a new instance of RequestLimitExceeded
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/errors.rb#408
  def initialize(context, message, data = T.unsafe(nil)); end

  # @return [String]
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/errors.rb#413
  def message; end
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/errors.rb#418
class Aws::DynamoDB::Errors::ResourceInUseException < ::Aws::DynamoDB::Errors::ServiceError
  # @param context [Seahorse::Client::RequestContext]
  # @param message [String]
  # @param data [Aws::DynamoDB::Types::ResourceInUseException]
  # @return [ResourceInUseException] a new instance of ResourceInUseException
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/errors.rb#423
  def initialize(context, message, data = T.unsafe(nil)); end

  # @return [String]
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/errors.rb#428
  def message; end
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/errors.rb#433
class Aws::DynamoDB::Errors::ResourceNotFoundException < ::Aws::DynamoDB::Errors::ServiceError
  # @param context [Seahorse::Client::RequestContext]
  # @param message [String]
  # @param data [Aws::DynamoDB::Types::ResourceNotFoundException]
  # @return [ResourceNotFoundException] a new instance of ResourceNotFoundException
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/errors.rb#438
  def initialize(context, message, data = T.unsafe(nil)); end

  # @return [String]
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/errors.rb#443
  def message; end
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/errors.rb#0
class Aws::DynamoDB::Errors::ServiceError < ::Aws::Errors::ServiceError; end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/errors.rb#448
class Aws::DynamoDB::Errors::TableAlreadyExistsException < ::Aws::DynamoDB::Errors::ServiceError
  # @param context [Seahorse::Client::RequestContext]
  # @param message [String]
  # @param data [Aws::DynamoDB::Types::TableAlreadyExistsException]
  # @return [TableAlreadyExistsException] a new instance of TableAlreadyExistsException
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/errors.rb#453
  def initialize(context, message, data = T.unsafe(nil)); end

  # @return [String]
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/errors.rb#458
  def message; end
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/errors.rb#463
class Aws::DynamoDB::Errors::TableInUseException < ::Aws::DynamoDB::Errors::ServiceError
  # @param context [Seahorse::Client::RequestContext]
  # @param message [String]
  # @param data [Aws::DynamoDB::Types::TableInUseException]
  # @return [TableInUseException] a new instance of TableInUseException
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/errors.rb#468
  def initialize(context, message, data = T.unsafe(nil)); end

  # @return [String]
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/errors.rb#473
  def message; end
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/errors.rb#478
class Aws::DynamoDB::Errors::TableNotFoundException < ::Aws::DynamoDB::Errors::ServiceError
  # @param context [Seahorse::Client::RequestContext]
  # @param message [String]
  # @param data [Aws::DynamoDB::Types::TableNotFoundException]
  # @return [TableNotFoundException] a new instance of TableNotFoundException
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/errors.rb#483
  def initialize(context, message, data = T.unsafe(nil)); end

  # @return [String]
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/errors.rb#488
  def message; end
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/errors.rb#493
class Aws::DynamoDB::Errors::TransactionCanceledException < ::Aws::DynamoDB::Errors::ServiceError
  # @param context [Seahorse::Client::RequestContext]
  # @param message [String]
  # @param data [Aws::DynamoDB::Types::TransactionCanceledException]
  # @return [TransactionCanceledException] a new instance of TransactionCanceledException
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/errors.rb#498
  def initialize(context, message, data = T.unsafe(nil)); end

  # @return [String]
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/errors.rb#508
  def cancellation_reasons; end

  # @return [String]
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/errors.rb#503
  def message; end
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/errors.rb#513
class Aws::DynamoDB::Errors::TransactionConflictException < ::Aws::DynamoDB::Errors::ServiceError
  # @param context [Seahorse::Client::RequestContext]
  # @param message [String]
  # @param data [Aws::DynamoDB::Types::TransactionConflictException]
  # @return [TransactionConflictException] a new instance of TransactionConflictException
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/errors.rb#518
  def initialize(context, message, data = T.unsafe(nil)); end

  # @return [String]
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/errors.rb#523
  def message; end
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/errors.rb#528
class Aws::DynamoDB::Errors::TransactionInProgressException < ::Aws::DynamoDB::Errors::ServiceError
  # @param context [Seahorse::Client::RequestContext]
  # @param message [String]
  # @param data [Aws::DynamoDB::Types::TransactionInProgressException]
  # @return [TransactionInProgressException] a new instance of TransactionInProgressException
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/errors.rb#533
  def initialize(context, message, data = T.unsafe(nil)); end

  # @return [String]
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/errors.rb#538
  def message; end
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb.rb#57
Aws::DynamoDB::GEM_VERSION = T.let(T.unsafe(nil), String)

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/plugins/endpoints.rb#12
module Aws::DynamoDB::Plugins; end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/plugins/crc32_validation.rb#6
class Aws::DynamoDB::Plugins::CRC32Validation < ::Seahorse::Client::Plugin
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/plugins/crc32_validation.rb#18
  def add_handlers(handlers, config); end
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/plugins/crc32_validation.rb#24
class Aws::DynamoDB::Plugins::CRC32Validation::Handler < ::Seahorse::Client::Handler
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/plugins/crc32_validation.rb#26
  def call(context); end

  private

  # @return [Boolean]
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/plugins/crc32_validation.rb#46
  def crc32_is_valid?(response); end

  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/plugins/crc32_validation.rb#39
  def validate(context); end
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/plugins/endpoints.rb#13
class Aws::DynamoDB::Plugins::Endpoints < ::Seahorse::Client::Plugin
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/plugins/endpoints.rb#169
  def add_handlers(handlers, _config); end
end

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/plugins/endpoints.rb#26
class Aws::DynamoDB::Plugins::Endpoints::Handler < ::Seahorse::Client::Handler
  # @api private
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/plugins/endpoints.rb#27
  def call(context); end

  private

  # @api private
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/plugins/endpoints.rb#46
  def apply_endpoint_headers(context, headers); end

  # @api private
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/plugins/endpoints.rb#57
  def parameters_for_operation(context); end
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/plugins/extended_retries.rb#6
class Aws::DynamoDB::Plugins::ExtendedRetries < ::Seahorse::Client::Plugin; end

# Simplifies working with Amazon DynamoDB attribute values.
# Translates attribute values for requests and responses to sensible
# Ruby natives.
#
# This plugin is enabled by default for all {DynamoDB::Client}
# objects. You can disable this plugin by passing
# `simple_attributes: false` to the client constructor:
#
#     ddb = Aws::DynamoDB::Client.new(simple_attributes: false)
#
# ## Input Examples
#
# With this plugin **enabled**, `simple_attributes: true`:
#
#     dynamodb.put_item(
#       table_name: 'aws-sdk',
#       item: {
#         id: 'uuid',
#         age: 35,
#         tags: Set.new(%w(simple attributes)),
#         data: StringIO.new('data'),
#         scores: [5, 4.5, 4.9, nil],
#         name: {
#           first: 'John',
#           last: 'Doe',
#         }
#       }
#     )
#
# With this plugin **disabled**, `simple_attributes: false`:
#
#     # note that all types are prefixed in a hash and that
#     # numeric types must be serialized as strings
#     dynamodb.put_item(
#       table_name: 'aws-sdk',
#       item: {
#         'id' => { s: 'uuid' },
#         'age' => { n: '35' },
#         'tags' => { ss: ['simple', 'attributes'] },
#         'data' => { b: 'data' },
#         'scores' => {
#           l: [
#             { n: '5' },
#             { n: '4.5' },
#             { n: '4.9' },
#             { null: true },
#           ]
#         },
#         'name' => {
#           m: {
#             'first' => { s: 'John' },
#             'last' => { s: 'Doe' },
#           }
#         }
#       }
#     )
#
# ## Output Examples
#
# With this plugin **enabled**, `simple_attributes: true`:
#
#     resp = dynamodb.get(table_name: 'aws-sdk', key: { id: 'uuid' })
#     resp.item
#     {
#       id: 'uuid',
#       age: 35,
#       tags: Set.new(%w(simple attributes)),
#       data: StringIO.new('data'),
#       scores: [5, 4.5, 4.9, nil],
#       name: {
#         first: 'John',
#         last: 'Doe',
#       }
#     }
#
# With this plugin **disabled**, `simple_attributes: false`:
#
#     # note that the request `:key` had to be type prefixed
#     resp = dynamodb.get(table_name: 'aws-sdk', key: { 'id' => { s: 'uuid' }})
#     resp.item
#     {
#       "id"=> <struct s='uuid', n=nil, b=nil, ss=nil, ns=nil, bs=nil, m=nil, l=nil, null=nil, bool=nil>
#       "age"=> <struct s=nil, n="35", b=nil, ss=nil, ns=nil, bs=nil, m=nil, l=nil, null=nil, bool=nil>
#       ...
#     }
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/plugins/simple_attributes.rb#92
class Aws::DynamoDB::Plugins::SimpleAttributes < ::Seahorse::Client::Plugin
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/plugins/simple_attributes.rb#109
  def add_handlers(handlers, config); end
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/plugins/simple_attributes.rb#115
class Aws::DynamoDB::Plugins::SimpleAttributes::Handler < ::Seahorse::Client::Handler
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/plugins/simple_attributes.rb#117
  def call(context); end

  private

  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/plugins/simple_attributes.rb#145
  def translate_error_data(context, error_data); end

  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/plugins/simple_attributes.rb#129
  def translate_input(context); end

  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/plugins/simple_attributes.rb#137
  def translate_output(response); end
end

# @api private
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/plugins/simple_attributes.rb#159
class Aws::DynamoDB::Plugins::SimpleAttributes::ValueTranslator
  include ::Seahorse::Model::Shapes

  # @api private
  # @return [ValueTranslator] a new instance of ValueTranslator
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/plugins/simple_attributes.rb#167
  def initialize(rules, mode); end

  # @api private
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/plugins/simple_attributes.rb#172
  def apply(values); end

  private

  # @api private
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/plugins/simple_attributes.rb#193
  def list(ref, values); end

  # @api private
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/plugins/simple_attributes.rb#201
  def map(ref, values); end

  # @api private
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/plugins/simple_attributes.rb#178
  def structure(ref, values); end

  # @api private
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/plugins/simple_attributes.rb#209
  def translate(ref, value); end

  # @api private
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/plugins/simple_attributes.rb#217
  def translate_complex(ref, value); end

  class << self
    # @api private
    #
    # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/plugins/simple_attributes.rb#163
    def apply(rules, mode, data); end
  end
end

# This class provides a resource oriented interface for DynamoDB.
# To create a resource object:
#
#     resource = Aws::DynamoDB::Resource.new(region: 'us-west-2')
#
# You can supply a client object with custom configuration that will be used for all resource operations.
# If you do not pass `:client`, a default client will be constructed.
#
#     client = Aws::DynamoDB::Client.new(region: 'us-west-2')
#     resource = Aws::DynamoDB::Resource.new(client: client)
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/resource.rb#23
class Aws::DynamoDB::Resource
  # @option options
  # @param options [{}]
  # @return [Resource] a new instance of Resource
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/resource.rb#27
  def initialize(options = T.unsafe(nil)); end

  # @example Request syntax with placeholder values
  #
  #   dynamo_db.batch_get_item({
  #   request_items: { # required
  #   "TableName" => {
  #   keys: [ # required
  #   {
  #   "AttributeName" => "value", # value <Hash,Array,String,Numeric,Boolean,IO,Set,nil>
  #   },
  #   ],
  #   attributes_to_get: ["AttributeName"],
  #   consistent_read: false,
  #   projection_expression: "ProjectionExpression",
  #   expression_attribute_names: {
  #   "ExpressionAttributeNameVariable" => "AttributeName",
  #   },
  #   },
  #   },
  #   return_consumed_capacity: "INDEXES", # accepts INDEXES, TOTAL, NONE
  #   })
  # @option options
  # @option options
  # @param options [Hash] ({})
  # @return [Types::BatchGetItemOutput]
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/resource.rb#162
  def batch_get_item(options = T.unsafe(nil)); end

  # @example Request syntax with placeholder values
  #
  #   dynamo_db.batch_write_item({
  #   request_items: { # required
  #   "TableName" => [
  #   {
  #   put_request: {
  #   item: { # required
  #   "AttributeName" => "value", # value <Hash,Array,String,Numeric,Boolean,IO,Set,nil>
  #   },
  #   },
  #   delete_request: {
  #   key: { # required
  #   "AttributeName" => "value", # value <Hash,Array,String,Numeric,Boolean,IO,Set,nil>
  #   },
  #   },
  #   },
  #   ],
  #   },
  #   return_consumed_capacity: "INDEXES", # accepts INDEXES, TOTAL, NONE
  #   return_item_collection_metrics: "SIZE", # accepts SIZE, NONE
  #   })
  # @option options
  # @option options
  # @option options
  # @param options [Hash] ({})
  # @return [Types::BatchWriteItemOutput]
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/resource.rb#245
  def batch_write_item(options = T.unsafe(nil)); end

  # @return [Client]
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/resource.rb#32
  def client; end

  # @example Request syntax with placeholder values
  #
  #   table = dynamo_db.create_table({
  #   attribute_definitions: [ # required
  #   {
  #   attribute_name: "KeySchemaAttributeName", # required
  #   attribute_type: "S", # required, accepts S, N, B
  #   },
  #   ],
  #   table_name: "TableName", # required
  #   key_schema: [ # required
  #   {
  #   attribute_name: "KeySchemaAttributeName", # required
  #   key_type: "HASH", # required, accepts HASH, RANGE
  #   },
  #   ],
  #   local_secondary_indexes: [
  #   {
  #   index_name: "IndexName", # required
  #   key_schema: [ # required
  #   {
  #   attribute_name: "KeySchemaAttributeName", # required
  #   key_type: "HASH", # required, accepts HASH, RANGE
  #   },
  #   ],
  #   projection: { # required
  #   projection_type: "ALL", # accepts ALL, KEYS_ONLY, INCLUDE
  #   non_key_attributes: ["NonKeyAttributeName"],
  #   },
  #   },
  #   ],
  #   global_secondary_indexes: [
  #   {
  #   index_name: "IndexName", # required
  #   key_schema: [ # required
  #   {
  #   attribute_name: "KeySchemaAttributeName", # required
  #   key_type: "HASH", # required, accepts HASH, RANGE
  #   },
  #   ],
  #   projection: { # required
  #   projection_type: "ALL", # accepts ALL, KEYS_ONLY, INCLUDE
  #   non_key_attributes: ["NonKeyAttributeName"],
  #   },
  #   provisioned_throughput: {
  #   read_capacity_units: 1, # required
  #   write_capacity_units: 1, # required
  #   },
  #   },
  #   ],
  #   billing_mode: "PROVISIONED", # accepts PROVISIONED, PAY_PER_REQUEST
  #   provisioned_throughput: {
  #   read_capacity_units: 1, # required
  #   write_capacity_units: 1, # required
  #   },
  #   stream_specification: {
  #   stream_enabled: false, # required
  #   stream_view_type: "NEW_IMAGE", # accepts NEW_IMAGE, OLD_IMAGE, NEW_AND_OLD_IMAGES, KEYS_ONLY
  #   },
  #   sse_specification: {
  #   enabled: false,
  #   sse_type: "AES256", # accepts AES256, KMS
  #   kms_master_key_id: "KMSMasterKeyId",
  #   },
  #   tags: [
  #   {
  #   key: "TagKeyString", # required
  #   value: "TagValueString", # required
  #   },
  #   ],
  #   table_class: "STANDARD", # accepts STANDARD, STANDARD_INFREQUENT_ACCESS
  #   deletion_protection_enabled: false,
  #   })
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @param options [Hash] ({})
  # @return [Table]
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/resource.rb#524
  def create_table(options = T.unsafe(nil)); end

  # @param name [String]
  # @return [Table]
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/resource.rb#539
  def table(name); end

  # @example Request syntax with placeholder values
  #
  #   dynamo_db.tables()
  # @param options [Hash] ({})
  # @return [Table::Collection]
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/resource.rb#551
  def tables(options = T.unsafe(nil)); end
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/table.rb#12
class Aws::DynamoDB::Table
  extend ::Aws::Deprecations

  # @overload initialize
  # @overload initialize
  # @return [Table] a new instance of Table
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/table.rb#22
  def initialize(*args); end

  # Contains information about the table archive.
  #
  # @return [Types::ArchivalSummary]
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/table.rb#356
  def archival_summary; end

  # An array of `AttributeDefinition` objects. Each of these objects
  # describes one attribute in the table and index key schema.
  #
  # Each `AttributeDefinition` object in this array is composed of:
  #
  # * `AttributeName` - The name of the attribute.
  #
  # * `AttributeType` - The data type for the attribute.
  #
  # @return [Array<Types::AttributeDefinition>]
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/table.rb#47
  def attribute_definitions; end

  # Contains the details for the read/write capacity mode.
  #
  # @return [Types::BillingModeSummary]
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/table.rb#161
  def billing_mode_summary; end

  # @return [Client]
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/table.rb#376
  def client; end

  # The date and time when the table was created, in [UNIX epoch time][1]
  # format.
  #
  #
  #
  # [1]: http://www.epochconverter.com/
  #
  # @return [Time]
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/table.rb#119
  def creation_date_time; end

  # @return [Types::TableDescription] Returns the data for this {Table}. Calls
  #   {Client#describe_table} if {#data_loaded?} is `false`.
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/table.rb#398
  def data; end

  # @return [Boolean] Returns `true` if this resource is loaded.  Accessing attributes or
  #   {#data} on an unloaded resource will trigger a call to {#load}.
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/table.rb#406
  def data_loaded?; end

  # @example Request syntax with placeholder values
  #
  #   table.delete()
  # @param options [Hash] ({})
  # @return [Types::DeleteTableOutput]
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/table.rb#516
  def delete(options = T.unsafe(nil)); end

  # @example Request syntax with placeholder values
  #
  #   table.delete_item({
  #   key: { # required
  #   "AttributeName" => "value", # value <Hash,Array,String,Numeric,Boolean,IO,Set,nil>
  #   },
  #   expected: {
  #   "AttributeName" => {
  #   value: "value", # value <Hash,Array,String,Numeric,Boolean,IO,Set,nil>
  #   exists: false,
  #   comparison_operator: "EQ", # accepts EQ, NE, IN, LE, LT, GE, GT, BETWEEN, NOT_NULL, NULL, CONTAINS, NOT_CONTAINS, BEGINS_WITH
  #   attribute_value_list: ["value"], # value <Hash,Array,String,Numeric,Boolean,IO,Set,nil>
  #   },
  #   },
  #   conditional_operator: "AND", # accepts AND, OR
  #   return_values: "NONE", # accepts NONE, ALL_OLD, UPDATED_OLD, ALL_NEW, UPDATED_NEW
  #   return_consumed_capacity: "INDEXES", # accepts INDEXES, TOTAL, NONE
  #   return_item_collection_metrics: "SIZE", # accepts SIZE, NONE
  #   condition_expression: "ConditionExpression",
  #   expression_attribute_names: {
  #   "ExpressionAttributeNameVariable" => "AttributeName",
  #   },
  #   expression_attribute_values: {
  #   "ExpressionAttributeValueVariable" => "value", # value <Hash,Array,String,Numeric,Boolean,IO,Set,nil>
  #   },
  #   return_values_on_condition_check_failure: "ALL_OLD", # accepts ALL_OLD, NONE
  #   })
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @param options [Hash] ({})
  # @return [Types::DeleteItemOutput]
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/table.rb#720
  def delete_item(options = T.unsafe(nil)); end

  # Indicates whether deletion protection is enabled (true) or disabled
  # (false) on the table.
  #
  # @return [Boolean]
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/table.rb#369
  def deletion_protection_enabled; end

  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/table.rb#2285
  def deprecated_identifiers; end

  # @example Request syntax with placeholder values
  #
  #   table.get_item({
  #   key: { # required
  #   "AttributeName" => "value", # value <Hash,Array,String,Numeric,Boolean,IO,Set,nil>
  #   },
  #   attributes_to_get: ["AttributeName"],
  #   consistent_read: false,
  #   return_consumed_capacity: "INDEXES", # accepts INDEXES, TOTAL, NONE
  #   projection_expression: "ProjectionExpression",
  #   expression_attribute_names: {
  #   "ExpressionAttributeNameVariable" => "AttributeName",
  #   },
  #   })
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @param options [Hash] ({})
  # @return [Types::GetItemOutput]
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/table.rb#845
  def get_item(options = T.unsafe(nil)); end

  # The global secondary indexes, if any, on the table. Each index is
  # scoped to a given partition key value. Each element is composed of:
  #
  # * `Backfilling` - If true, then the index is currently in the
  #   backfilling phase. Backfilling occurs only when a new global
  #   secondary index is added to the table. It is the process by which
  #   DynamoDB populates the new index with data from the table. (This
  #   attribute does not appear for indexes that were created during a
  #   `CreateTable` operation.)
  #
  #   You can delete an index that is being created during the
  #   `Backfilling` phase when `IndexStatus` is set to CREATING and
  #   `Backfilling` is true. You can't delete the index that is being
  #   created when `IndexStatus` is set to CREATING and `Backfilling` is
  #   false. (This attribute does not appear for indexes that were created
  #   during a `CreateTable` operation.)
  #
  # * `IndexName` - The name of the global secondary index.
  #
  # * `IndexSizeBytes` - The total size of the global secondary index, in
  #   bytes. DynamoDB updates this value approximately every six hours.
  #   Recent changes might not be reflected in this value.
  #
  # * `IndexStatus` - The current status of the global secondary index:
  #
  #   * `CREATING` - The index is being created.
  #
  #   * `UPDATING` - The index is being updated.
  #
  #   * `DELETING` - The index is being deleted.
  #
  #   * `ACTIVE` - The index is ready for use.
  #
  # * `ItemCount` - The number of items in the global secondary index.
  #   DynamoDB updates this value approximately every six hours. Recent
  #   changes might not be reflected in this value.
  #
  # * `KeySchema` - Specifies the complete index key schema. The attribute
  #   names in the key schema must be between 1 and 255 characters
  #   (inclusive). The key schema must begin with the same partition key
  #   as the table.
  #
  # * `Projection` - Specifies attributes that are copied (projected) from
  #   the table into the index. These are in addition to the primary key
  #   attributes and index key attributes, which are automatically
  #   projected. Each attribute specification is composed of:
  #
  #   * `ProjectionType` - One of the following:
  #
  #     * `KEYS_ONLY` - Only the index and primary keys are projected into
  #       the index.
  #
  #     * `INCLUDE` - In addition to the attributes described in
  #       `KEYS_ONLY`, the secondary index will include other non-key
  #       attributes that you specify.
  #
  #     * `ALL` - All of the table attributes are projected into the
  #       index.
  #
  #   * `NonKeyAttributes` - A list of one or more non-key attribute names
  #     that are projected into the secondary index. The total count of
  #     attributes provided in `NonKeyAttributes`, summed across all of
  #     the secondary indexes, must not exceed 100. If you project the
  #     same attribute into two different indexes, this counts as two
  #     distinct attributes when determining the total.
  #
  # * `ProvisionedThroughput` - The provisioned throughput settings for
  #   the global secondary index, consisting of read and write capacity
  #   units, along with data about increases and decreases.
  #
  # If the table is in the `DELETING` state, no information about indexes
  # will be returned.
  #
  # @return [Array<Types::GlobalSecondaryIndexDescription>]
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/table.rb#290
  def global_secondary_indexes; end

  # Represents the version of [global tables][1] in use, if the table is
  # replicated across Amazon Web Services Regions.
  #
  #
  #
  # [1]: https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/GlobalTables.html
  #
  # @return [String]
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/table.rb#331
  def global_table_version; end

  # @api private
  # @deprecated
  #
  # source://aws-sdk-core/3.187.0lib/aws-sdk-core/deprecations.rb#65
  def identifiers(*args, &block); end

  # The number of items in the specified table. DynamoDB updates this
  # value approximately every six hours. Recent changes might not be
  # reflected in this value.
  #
  # @return [Integer]
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/table.rb#143
  def item_count; end

  # The primary key structure for the table. Each `KeySchemaElement`
  # consists of:
  #
  # * `AttributeName` - The name of the attribute.
  #
  # * `KeyType` - The role of the attribute:
  #
  #   * `HASH` - partition key
  #
  #   * `RANGE` - sort key
  #
  #   <note markdown="1"> The partition key of an item is also known as its *hash attribute*.
  #   The term "hash attribute" derives from DynamoDB's usage of an
  #   internal hash function to evenly distribute data items across
  #   partitions, based on their partition key values.
  #
  #    The sort key of an item is also known as its *range attribute*. The
  #   term "range attribute" derives from the way DynamoDB stores items
  #   with the same partition key physically close together, in sorted
  #   order by the sort key value.
  #
  #    </note>
  #
  # For more information about primary keys, see [Primary Key][1] in the
  # *Amazon DynamoDB Developer Guide*.
  #
  #
  #
  # [1]: https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/DataModel.html#DataModelPrimaryKey
  #
  # @return [Array<Types::KeySchemaElement>]
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/table.rb#81
  def key_schema; end

  # The Amazon Resource Name (ARN) that uniquely identifies the latest
  # stream for this table.
  #
  # @return [String]
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/table.rb#320
  def latest_stream_arn; end

  # A timestamp, in ISO 8601 format, for this stream.
  #
  # Note that `LatestStreamLabel` is not a unique identifier for the
  # stream, because it is possible that a stream from another table might
  # have the same timestamp. However, the combination of the following
  # three elements is guaranteed to be unique:
  #
  # * Amazon Web Services customer ID
  #
  # * Table name
  #
  # * `StreamLabel`
  #
  # @return [String]
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/table.rb#313
  def latest_stream_label; end

  # Loads, or reloads {#data} for the current {Table}.
  # Returns `self` making it possible to chain methods.
  #
  #     table.reload.data
  #
  # @return [self]
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/table.rb#386
  def load; end

  # Represents one or more local secondary indexes on the table. Each
  # index is scoped to a given partition key value. Tables with one or
  # more local secondary indexes are subject to an item collection size
  # limit, where the amount of data within a given item collection cannot
  # exceed 10 GB. Each element is composed of:
  #
  # * `IndexName` - The name of the local secondary index.
  #
  # * `KeySchema` - Specifies the complete index key schema. The attribute
  #   names in the key schema must be between 1 and 255 characters
  #   (inclusive). The key schema must begin with the same partition key
  #   as the table.
  #
  # * `Projection` - Specifies attributes that are copied (projected) from
  #   the table into the index. These are in addition to the primary key
  #   attributes and index key attributes, which are automatically
  #   projected. Each attribute specification is composed of:
  #
  #   * `ProjectionType` - One of the following:
  #
  #     * `KEYS_ONLY` - Only the index and primary keys are projected into
  #       the index.
  #
  #     * `INCLUDE` - Only the specified table attributes are projected
  #       into the index. The list of projected attributes is in
  #       `NonKeyAttributes`.
  #
  #     * `ALL` - All of the table attributes are projected into the
  #       index.
  #
  #   * `NonKeyAttributes` - A list of one or more non-key attribute names
  #     that are projected into the secondary index. The total count of
  #     attributes provided in `NonKeyAttributes`, summed across all of
  #     the secondary indexes, must not exceed 100. If you project the
  #     same attribute into two different indexes, this counts as two
  #     distinct attributes when determining the total.
  #
  # * `IndexSizeBytes` - Represents the total size of the index, in bytes.
  #   DynamoDB updates this value approximately every six hours. Recent
  #   changes might not be reflected in this value.
  #
  # * `ItemCount` - Represents the number of items in the index. DynamoDB
  #   updates this value approximately every six hours. Recent changes
  #   might not be reflected in this value.
  #
  # If the table is in the `DELETING` state, no information about indexes
  # will be returned.
  #
  # @return [Array<Types::LocalSecondaryIndexDescription>]
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/table.rb#213
  def local_secondary_indexes; end

  # @return [String]
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/table.rb#33
  def name; end

  # The provisioned throughput settings for the table, consisting of read
  # and write capacity units, along with data about increases and
  # decreases.
  #
  # @return [Types::ProvisionedThroughputDescription]
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/table.rb#127
  def provisioned_throughput; end

  # @example Request syntax with placeholder values
  #
  #   table.put_item({
  #   item: { # required
  #   "AttributeName" => "value", # value <Hash,Array,String,Numeric,Boolean,IO,Set,nil>
  #   },
  #   expected: {
  #   "AttributeName" => {
  #   value: "value", # value <Hash,Array,String,Numeric,Boolean,IO,Set,nil>
  #   exists: false,
  #   comparison_operator: "EQ", # accepts EQ, NE, IN, LE, LT, GE, GT, BETWEEN, NOT_NULL, NULL, CONTAINS, NOT_CONTAINS, BEGINS_WITH
  #   attribute_value_list: ["value"], # value <Hash,Array,String,Numeric,Boolean,IO,Set,nil>
  #   },
  #   },
  #   return_values: "NONE", # accepts NONE, ALL_OLD, UPDATED_OLD, ALL_NEW, UPDATED_NEW
  #   return_consumed_capacity: "INDEXES", # accepts INDEXES, TOTAL, NONE
  #   return_item_collection_metrics: "SIZE", # accepts SIZE, NONE
  #   conditional_operator: "AND", # accepts AND, OR
  #   condition_expression: "ConditionExpression",
  #   expression_attribute_names: {
  #   "ExpressionAttributeNameVariable" => "AttributeName",
  #   },
  #   expression_attribute_values: {
  #   "ExpressionAttributeValueVariable" => "value", # value <Hash,Array,String,Numeric,Boolean,IO,Set,nil>
  #   },
  #   return_values_on_condition_check_failure: "ALL_OLD", # accepts ALL_OLD, NONE
  #   })
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @param options [Hash] ({})
  # @return [Types::PutItemOutput]
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/table.rb#1070
  def put_item(options = T.unsafe(nil)); end

  # @example Request syntax with placeholder values
  #
  #   table.query({
  #   index_name: "IndexName",
  #   select: "ALL_ATTRIBUTES", # accepts ALL_ATTRIBUTES, ALL_PROJECTED_ATTRIBUTES, SPECIFIC_ATTRIBUTES, COUNT
  #   attributes_to_get: ["AttributeName"],
  #   limit: 1,
  #   consistent_read: false,
  #   key_conditions: {
  #   "AttributeName" => {
  #   attribute_value_list: ["value"], # value <Hash,Array,String,Numeric,Boolean,IO,Set,nil>
  #   comparison_operator: "EQ", # required, accepts EQ, NE, IN, LE, LT, GE, GT, BETWEEN, NOT_NULL, NULL, CONTAINS, NOT_CONTAINS, BEGINS_WITH
  #   },
  #   },
  #   query_filter: {
  #   "AttributeName" => {
  #   attribute_value_list: ["value"], # value <Hash,Array,String,Numeric,Boolean,IO,Set,nil>
  #   comparison_operator: "EQ", # required, accepts EQ, NE, IN, LE, LT, GE, GT, BETWEEN, NOT_NULL, NULL, CONTAINS, NOT_CONTAINS, BEGINS_WITH
  #   },
  #   },
  #   conditional_operator: "AND", # accepts AND, OR
  #   scan_index_forward: false,
  #   exclusive_start_key: {
  #   "AttributeName" => "value", # value <Hash,Array,String,Numeric,Boolean,IO,Set,nil>
  #   },
  #   return_consumed_capacity: "INDEXES", # accepts INDEXES, TOTAL, NONE
  #   projection_expression: "ProjectionExpression",
  #   filter_expression: "ConditionExpression",
  #   key_condition_expression: "KeyExpression",
  #   expression_attribute_names: {
  #   "ExpressionAttributeNameVariable" => "AttributeName",
  #   },
  #   expression_attribute_values: {
  #   "ExpressionAttributeValueVariable" => "value", # value <Hash,Array,String,Numeric,Boolean,IO,Set,nil>
  #   },
  #   })
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @param options [Hash] ({})
  # @return [Types::QueryOutput]
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/table.rb#1460
  def query(options = T.unsafe(nil)); end

  # Loads, or reloads {#data} for the current {Table}.
  # Returns `self` making it possible to chain methods.
  #
  #     table.reload.data
  #
  # @return [self]
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/table.rb#386
  def reload; end

  # Represents replicas of the table.
  #
  # @return [Array<Types::ReplicaDescription>]
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/table.rb#337
  def replicas; end

  # Contains details for the restore.
  #
  # @return [Types::RestoreSummary]
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/table.rb#343
  def restore_summary; end

  # @example Request syntax with placeholder values
  #
  #   table.scan({
  #   index_name: "IndexName",
  #   attributes_to_get: ["AttributeName"],
  #   limit: 1,
  #   select: "ALL_ATTRIBUTES", # accepts ALL_ATTRIBUTES, ALL_PROJECTED_ATTRIBUTES, SPECIFIC_ATTRIBUTES, COUNT
  #   scan_filter: {
  #   "AttributeName" => {
  #   attribute_value_list: ["value"], # value <Hash,Array,String,Numeric,Boolean,IO,Set,nil>
  #   comparison_operator: "EQ", # required, accepts EQ, NE, IN, LE, LT, GE, GT, BETWEEN, NOT_NULL, NULL, CONTAINS, NOT_CONTAINS, BEGINS_WITH
  #   },
  #   },
  #   conditional_operator: "AND", # accepts AND, OR
  #   exclusive_start_key: {
  #   "AttributeName" => "value", # value <Hash,Array,String,Numeric,Boolean,IO,Set,nil>
  #   },
  #   return_consumed_capacity: "INDEXES", # accepts INDEXES, TOTAL, NONE
  #   total_segments: 1,
  #   segment: 1,
  #   projection_expression: "ProjectionExpression",
  #   filter_expression: "ConditionExpression",
  #   expression_attribute_names: {
  #   "ExpressionAttributeNameVariable" => "AttributeName",
  #   },
  #   expression_attribute_values: {
  #   "ExpressionAttributeValueVariable" => "value", # value <Hash,Array,String,Numeric,Boolean,IO,Set,nil>
  #   },
  #   consistent_read: false,
  #   })
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @param options [Hash] ({})
  # @return [Types::ScanOutput]
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/table.rb#1777
  def scan(options = T.unsafe(nil)); end

  # The description of the server-side encryption status on the specified
  # table.
  #
  # @return [Types::SSEDescription]
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/table.rb#350
  def sse_description; end

  # The current DynamoDB Streams configuration for the table.
  #
  # @return [Types::StreamSpecification]
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/table.rb#296
  def stream_specification; end

  # The Amazon Resource Name (ARN) that uniquely identifies the table.
  #
  # @return [String]
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/table.rb#149
  def table_arn; end

  # Contains details of the table class.
  #
  # @return [Types::TableClassSummary]
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/table.rb#362
  def table_class_summary; end

  # Unique identifier for the table for which the backup was created.
  #
  # @return [String]
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/table.rb#155
  def table_id; end

  # @return [String]
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/table.rb#33
  def table_name; end

  # The total size of the specified table, in bytes. DynamoDB updates this
  # value approximately every six hours. Recent changes might not be
  # reflected in this value.
  #
  # @return [Integer]
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/table.rb#135
  def table_size_bytes; end

  # The current state of the table:
  #
  # * `CREATING` - The table is being created.
  #
  # * `UPDATING` - The table/index configuration is being updated. The
  #   table/index remains available for data operations when `UPDATING`.
  #
  # * `DELETING` - The table is being deleted.
  #
  # * `ACTIVE` - The table is ready for use.
  #
  # * `INACCESSIBLE_ENCRYPTION_CREDENTIALS` - The KMS key used to encrypt
  #   the table in inaccessible. Table operations may fail due to failure
  #   to use the KMS key. DynamoDB will initiate the table archival
  #   process when a table's KMS key remains inaccessible for more than
  #   seven days.
  #
  # * `ARCHIVING` - The table is being archived. Operations are not
  #   allowed until archival is complete.
  #
  # * `ARCHIVED` - The table has been archived. See the ArchivalReason for
  #   more information.
  #
  # @return [String]
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/table.rb#108
  def table_status; end

  # @example Request syntax with placeholder values
  #
  #   table = table.update({
  #   attribute_definitions: [
  #   {
  #   attribute_name: "KeySchemaAttributeName", # required
  #   attribute_type: "S", # required, accepts S, N, B
  #   },
  #   ],
  #   billing_mode: "PROVISIONED", # accepts PROVISIONED, PAY_PER_REQUEST
  #   provisioned_throughput: {
  #   read_capacity_units: 1, # required
  #   write_capacity_units: 1, # required
  #   },
  #   global_secondary_index_updates: [
  #   {
  #   update: {
  #   index_name: "IndexName", # required
  #   provisioned_throughput: { # required
  #   read_capacity_units: 1, # required
  #   write_capacity_units: 1, # required
  #   },
  #   },
  #   create: {
  #   index_name: "IndexName", # required
  #   key_schema: [ # required
  #   {
  #   attribute_name: "KeySchemaAttributeName", # required
  #   key_type: "HASH", # required, accepts HASH, RANGE
  #   },
  #   ],
  #   projection: { # required
  #   projection_type: "ALL", # accepts ALL, KEYS_ONLY, INCLUDE
  #   non_key_attributes: ["NonKeyAttributeName"],
  #   },
  #   provisioned_throughput: {
  #   read_capacity_units: 1, # required
  #   write_capacity_units: 1, # required
  #   },
  #   },
  #   delete: {
  #   index_name: "IndexName", # required
  #   },
  #   },
  #   ],
  #   stream_specification: {
  #   stream_enabled: false, # required
  #   stream_view_type: "NEW_IMAGE", # accepts NEW_IMAGE, OLD_IMAGE, NEW_AND_OLD_IMAGES, KEYS_ONLY
  #   },
  #   sse_specification: {
  #   enabled: false,
  #   sse_type: "AES256", # accepts AES256, KMS
  #   kms_master_key_id: "KMSMasterKeyId",
  #   },
  #   replica_updates: [
  #   {
  #   create: {
  #   region_name: "RegionName", # required
  #   kms_master_key_id: "KMSMasterKeyId",
  #   provisioned_throughput_override: {
  #   read_capacity_units: 1,
  #   },
  #   global_secondary_indexes: [
  #   {
  #   index_name: "IndexName", # required
  #   provisioned_throughput_override: {
  #   read_capacity_units: 1,
  #   },
  #   },
  #   ],
  #   table_class_override: "STANDARD", # accepts STANDARD, STANDARD_INFREQUENT_ACCESS
  #   },
  #   update: {
  #   region_name: "RegionName", # required
  #   kms_master_key_id: "KMSMasterKeyId",
  #   provisioned_throughput_override: {
  #   read_capacity_units: 1,
  #   },
  #   global_secondary_indexes: [
  #   {
  #   index_name: "IndexName", # required
  #   provisioned_throughput_override: {
  #   read_capacity_units: 1,
  #   },
  #   },
  #   ],
  #   table_class_override: "STANDARD", # accepts STANDARD, STANDARD_INFREQUENT_ACCESS
  #   },
  #   delete: {
  #   region_name: "RegionName", # required
  #   },
  #   },
  #   ],
  #   table_class: "STANDARD", # accepts STANDARD, STANDARD_INFREQUENT_ACCESS
  #   deletion_protection_enabled: false,
  #   })
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @param options [Hash] ({})
  # @return [Table]
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/table.rb#1959
  def update(options = T.unsafe(nil)); end

  # @example Request syntax with placeholder values
  #
  #   table.update_item({
  #   key: { # required
  #   "AttributeName" => "value", # value <Hash,Array,String,Numeric,Boolean,IO,Set,nil>
  #   },
  #   attribute_updates: {
  #   "AttributeName" => {
  #   value: "value", # value <Hash,Array,String,Numeric,Boolean,IO,Set,nil>
  #   action: "ADD", # accepts ADD, PUT, DELETE
  #   },
  #   },
  #   expected: {
  #   "AttributeName" => {
  #   value: "value", # value <Hash,Array,String,Numeric,Boolean,IO,Set,nil>
  #   exists: false,
  #   comparison_operator: "EQ", # accepts EQ, NE, IN, LE, LT, GE, GT, BETWEEN, NOT_NULL, NULL, CONTAINS, NOT_CONTAINS, BEGINS_WITH
  #   attribute_value_list: ["value"], # value <Hash,Array,String,Numeric,Boolean,IO,Set,nil>
  #   },
  #   },
  #   conditional_operator: "AND", # accepts AND, OR
  #   return_values: "NONE", # accepts NONE, ALL_OLD, UPDATED_OLD, ALL_NEW, UPDATED_NEW
  #   return_consumed_capacity: "INDEXES", # accepts INDEXES, TOTAL, NONE
  #   return_item_collection_metrics: "SIZE", # accepts SIZE, NONE
  #   update_expression: "UpdateExpression",
  #   condition_expression: "ConditionExpression",
  #   expression_attribute_names: {
  #   "ExpressionAttributeNameVariable" => "AttributeName",
  #   },
  #   expression_attribute_values: {
  #   "ExpressionAttributeValueVariable" => "value", # value <Hash,Array,String,Numeric,Boolean,IO,Set,nil>
  #   },
  #   return_values_on_condition_check_failure: "ALL_OLD", # accepts ALL_OLD, NONE
  #   })
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @param options [Hash] ({})
  # @return [Types::UpdateItemOutput]
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/table.rb#2275
  def update_item(options = T.unsafe(nil)); end

  # Waiter polls an API operation until a resource enters a desired
  # state.
  #
  # ## Basic Usage
  #
  # Waiter will polls until it is successful, it fails by
  # entering a terminal state, or until a maximum number of attempts
  # are made.
  #
  #     # polls in a loop until condition is true
  #     resource.wait_until(options) {|resource| condition}
  #
  # ## Example
  #
  #     instance.wait_until(max_attempts:10, delay:5) do |instance|
  #       instance.state.name == 'running'
  #     end
  #
  # ## Configuration
  #
  # You can configure the maximum number of polling attempts, and the
  # delay (in seconds) between each polling attempt. The waiting condition is
  # set by passing a block to {#wait_until}:
  #
  #     # poll for ~25 seconds
  #     resource.wait_until(max_attempts:5,delay:5) {|resource|...}
  #
  # ## Callbacks
  #
  # You can be notified before each polling attempt and before each
  # delay. If you throw `:success` or `:failure` from these callbacks,
  # it will terminate the waiter.
  #
  #     started_at = Time.now
  #     # poll for 1 hour, instead of a number of attempts
  #     proc = Proc.new do |attempts, response|
  #       throw :failure if Time.now - started_at > 3600
  #     end
  #
  #       # disable max attempts
  #     instance.wait_until(before_wait:proc, max_attempts:nil) {...}
  #
  # ## Handling Errors
  #
  # When a waiter is successful, it returns the Resource. When a waiter
  # fails, it raises an error.
  #
  #     begin
  #       resource.wait_until(...)
  #     rescue Aws::Waiters::Errors::WaiterFailed
  #       # resource did not enter the desired state in time
  #     end
  #
  # attempts
  # attempt in seconds
  # invoked before each attempt
  # invoked before each wait
  #
  # @deprecated Use [Aws::DynamoDB::Client] #wait_until instead
  # @note The waiting operation is performed on a copy. The original resource
  #   remains unchanged.
  # @option options
  # @option options
  # @option options
  # @option options
  # @param options [Hash] a customizable set of options
  # @raise [Aws::Waiters::Errors::FailureStateError] Raised when the waiter
  #   terminates because the waiter has entered a state that it will not
  #   transition out of, preventing success.
  #
  #   yet successful.
  # @raise [Aws::Waiters::Errors::UnexpectedError] Raised when an error is
  #   encountered while polling for a resource that is not expected.
  # @raise [NotImplementedError] Raised when the resource does not
  # @return [Resource] if the waiter was successful
  # @yieldparam resource [Resource] to be used in the waiting condition.
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/table.rb#490
  def wait_until(options = T.unsafe(nil), &block); end

  private

  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/table.rb#2292
  def extract_name(args, options); end
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/table.rb#2303
class Aws::DynamoDB::Table::Collection < ::Aws::Resources::Collection; end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#11
module Aws::DynamoDB::Types; end

# Contains details of a table archival operation.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/ArchivalSummary AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#43
class Aws::DynamoDB::Types::ArchivalSummary < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#44
Aws::DynamoDB::Types::ArchivalSummary::SENSITIVE = T.let(T.unsafe(nil), Array)

# Represents an attribute for describing the key schema for the table
# and indexes.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/AttributeDefinition AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#69
class Aws::DynamoDB::Types::AttributeDefinition < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#70
Aws::DynamoDB::Types::AttributeDefinition::SENSITIVE = T.let(T.unsafe(nil), Array)

# Represents the data for an attribute.
#
# Each attribute value is described as a name-value pair. The name is
# the data type, and the value is the data itself.
#
# For more information, see [Data Types][1] in the *Amazon DynamoDB
# Developer Guide*.
#
#
#
# [1]: https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/HowItWorks.NamingRulesDataTypes.html#HowItWorks.DataTypes
#
# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/AttributeValue AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#168
class Aws::DynamoDB::Types::AttributeValue < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#169
Aws::DynamoDB::Types::AttributeValue::SENSITIVE = T.let(T.unsafe(nil), Array)

# For the `UpdateItem` operation, represents the attributes to be
# modified, the action to perform on each, and the new value for each.
#
# <note markdown="1"> You cannot use `UpdateItem` to update any primary key attributes.
# Instead, you will need to delete the item, and then use `PutItem` to
# create a new item with new attributes.
#
#  </note>
#
# Attribute values cannot be null; string and binary type attributes
# must have lengths greater than zero; and set type attributes must not
# be empty. Requests with empty values will be rejected with a
# `ValidationException` exception.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/AttributeValueUpdate AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#282
class Aws::DynamoDB::Types::AttributeValueUpdate < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#283
Aws::DynamoDB::Types::AttributeValueUpdate::SENSITIVE = T.let(T.unsafe(nil), Array)

# Represents the properties of the scaling policy.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/AutoScalingPolicyDescription AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#301
class Aws::DynamoDB::Types::AutoScalingPolicyDescription < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#302
Aws::DynamoDB::Types::AutoScalingPolicyDescription::SENSITIVE = T.let(T.unsafe(nil), Array)

# Represents the auto scaling policy to be modified.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/AutoScalingPolicyUpdate AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#320
class Aws::DynamoDB::Types::AutoScalingPolicyUpdate < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#321
Aws::DynamoDB::Types::AutoScalingPolicyUpdate::SENSITIVE = T.let(T.unsafe(nil), Array)

# Represents the auto scaling settings for a global table or global
# secondary index.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/AutoScalingSettingsDescription AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#358
class Aws::DynamoDB::Types::AutoScalingSettingsDescription < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#359
Aws::DynamoDB::Types::AutoScalingSettingsDescription::SENSITIVE = T.let(T.unsafe(nil), Array)

# Represents the auto scaling settings to be modified for a global table
# or global secondary index.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/AutoScalingSettingsUpdate AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#397
class Aws::DynamoDB::Types::AutoScalingSettingsUpdate < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#398
Aws::DynamoDB::Types::AutoScalingSettingsUpdate::SENSITIVE = T.let(T.unsafe(nil), Array)

# Represents the properties of a target tracking scaling policy.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/AutoScalingTargetTrackingScalingPolicyConfigurationDescription AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#443
class Aws::DynamoDB::Types::AutoScalingTargetTrackingScalingPolicyConfigurationDescription < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#444
Aws::DynamoDB::Types::AutoScalingTargetTrackingScalingPolicyConfigurationDescription::SENSITIVE = T.let(T.unsafe(nil), Array)

# Represents the settings of a target tracking scaling policy that will
# be modified.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/AutoScalingTargetTrackingScalingPolicyConfigurationUpdate AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#490
class Aws::DynamoDB::Types::AutoScalingTargetTrackingScalingPolicyConfigurationUpdate < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#491
Aws::DynamoDB::Types::AutoScalingTargetTrackingScalingPolicyConfigurationUpdate::SENSITIVE = T.let(T.unsafe(nil), Array)

# Contains the description of the backup created for the table.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/BackupDescription AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#515
class Aws::DynamoDB::Types::BackupDescription < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#516
Aws::DynamoDB::Types::BackupDescription::SENSITIVE = T.let(T.unsafe(nil), Array)

# Contains the details of the backup created for the table.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/BackupDetails AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#577
class Aws::DynamoDB::Types::BackupDetails < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#578
Aws::DynamoDB::Types::BackupDetails::SENSITIVE = T.let(T.unsafe(nil), Array)

# There is another ongoing conflicting backup control plane operation on
# the table. The backup is either being created, deleted or restored to
# a table.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/BackupInUseException AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#592
class Aws::DynamoDB::Types::BackupInUseException < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#593
Aws::DynamoDB::Types::BackupInUseException::SENSITIVE = T.let(T.unsafe(nil), Array)

# Backup not found for the given BackupARN.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/BackupNotFoundException AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#605
class Aws::DynamoDB::Types::BackupNotFoundException < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#606
Aws::DynamoDB::Types::BackupNotFoundException::SENSITIVE = T.let(T.unsafe(nil), Array)

# Contains details for the backup.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/BackupSummary AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#679
class Aws::DynamoDB::Types::BackupSummary < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#680
Aws::DynamoDB::Types::BackupSummary::SENSITIVE = T.let(T.unsafe(nil), Array)

# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/BatchExecuteStatementInput AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#712
class Aws::DynamoDB::Types::BatchExecuteStatementInput < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#713
Aws::DynamoDB::Types::BatchExecuteStatementInput::SENSITIVE = T.let(T.unsafe(nil), Array)

# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/BatchExecuteStatementOutput AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#732
class Aws::DynamoDB::Types::BatchExecuteStatementOutput < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#733
Aws::DynamoDB::Types::BatchExecuteStatementOutput::SENSITIVE = T.let(T.unsafe(nil), Array)

# Represents the input of a `BatchGetItem` operation.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/BatchGetItemInput AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#852
class Aws::DynamoDB::Types::BatchGetItemInput < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#853
Aws::DynamoDB::Types::BatchGetItemInput::SENSITIVE = T.let(T.unsafe(nil), Array)

# Represents the output of a `BatchGetItem` operation.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/BatchGetItemOutput AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#906
class Aws::DynamoDB::Types::BatchGetItemOutput < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#907
Aws::DynamoDB::Types::BatchGetItemOutput::SENSITIVE = T.let(T.unsafe(nil), Array)

# An error associated with a statement in a PartiQL batch that was run.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/BatchStatementError AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#931
class Aws::DynamoDB::Types::BatchStatementError < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#932
Aws::DynamoDB::Types::BatchStatementError::SENSITIVE = T.let(T.unsafe(nil), Array)

# A PartiQL batch statement request.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/BatchStatementRequest AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#966
class Aws::DynamoDB::Types::BatchStatementRequest < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#967
Aws::DynamoDB::Types::BatchStatementRequest::SENSITIVE = T.let(T.unsafe(nil), Array)

# A PartiQL batch statement response..
#
# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/BatchStatementResponse AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#990
class Aws::DynamoDB::Types::BatchStatementResponse < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#991
Aws::DynamoDB::Types::BatchStatementResponse::SENSITIVE = T.let(T.unsafe(nil), Array)

# Represents the input of a `BatchWriteItem` operation.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/BatchWriteItemInput AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#1064
class Aws::DynamoDB::Types::BatchWriteItemInput < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#1065
Aws::DynamoDB::Types::BatchWriteItemInput::SENSITIVE = T.let(T.unsafe(nil), Array)

# Represents the output of a `BatchWriteItem` operation.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/BatchWriteItemOutput AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#1149
class Aws::DynamoDB::Types::BatchWriteItemOutput < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#1150
Aws::DynamoDB::Types::BatchWriteItemOutput::SENSITIVE = T.let(T.unsafe(nil), Array)

# Contains the details for the read/write capacity mode. This page talks
# about `PROVISIONED` and `PAY_PER_REQUEST` billing modes. For more
# information about these modes, see [Read/write capacity mode][1].
#
# <note markdown="1"> You may need to switch to on-demand mode at least once in order to
# return a `BillingModeSummary` response.
#
#  </note>
#
#
#
# [1]: https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/HowItWorks.ReadWriteCapacityMode.html
#
# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/BillingModeSummary AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#1189
class Aws::DynamoDB::Types::BillingModeSummary < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#1190
Aws::DynamoDB::Types::BillingModeSummary::SENSITIVE = T.let(T.unsafe(nil), Array)

# An ordered list of errors for each item in the request which caused
# the transaction to get cancelled. The values of the list are ordered
# according to the ordering of the `TransactWriteItems` request
# parameter. If no error occurred for the associated item an error with
# a Null code and Null message will be present.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/CancellationReason AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#1217
class Aws::DynamoDB::Types::CancellationReason < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#1218
Aws::DynamoDB::Types::CancellationReason::SENSITIVE = T.let(T.unsafe(nil), Array)

# Represents the amount of provisioned throughput capacity consumed on a
# table or an index.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/Capacity AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#1244
class Aws::DynamoDB::Types::Capacity < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#1245
Aws::DynamoDB::Types::Capacity::SENSITIVE = T.let(T.unsafe(nil), Array)

# Represents the selection criteria for a `Query` or `Scan` operation:
#
# * For a `Query` operation, `Condition` is used for specifying the
#   `KeyConditions` to use when querying a table or an index. For
#   `KeyConditions`, only the following comparison operators are
#   supported:
#
#   `EQ | LE | LT | GE | GT | BEGINS_WITH | BETWEEN`
#
#   `Condition` is also used in a `QueryFilter`, which evaluates the
#   query results and returns only the desired values.
#
# * For a `Scan` operation, `Condition` is used in a `ScanFilter`, which
#   evaluates the scan results and returns only the desired values.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/Condition AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#1463
class Aws::DynamoDB::Types::Condition < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#1464
Aws::DynamoDB::Types::Condition::SENSITIVE = T.let(T.unsafe(nil), Array)

# Represents a request to perform a check that an item exists or to
# check the condition of specific attributes of the item.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/ConditionCheck AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#1525
class Aws::DynamoDB::Types::ConditionCheck < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#1526
Aws::DynamoDB::Types::ConditionCheck::SENSITIVE = T.let(T.unsafe(nil), Array)

# A condition specified in the operation could not be evaluated.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/ConditionalCheckFailedException AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#1544
class Aws::DynamoDB::Types::ConditionalCheckFailedException < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#1545
Aws::DynamoDB::Types::ConditionalCheckFailedException::SENSITIVE = T.let(T.unsafe(nil), Array)

# The capacity units consumed by an operation. The data returned
# includes the total provisioned throughput consumed, along with
# statistics for the table and any indexes involved in the operation.
# `ConsumedCapacity` is only returned if the request asked for it. For
# more information, see [Provisioned Throughput][1] in the *Amazon
# DynamoDB Developer Guide*.
#
#
#
# [1]: https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/ProvisionedThroughputIntro.html
#
# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/ConsumedCapacity AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#1600
class Aws::DynamoDB::Types::ConsumedCapacity < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#1601
Aws::DynamoDB::Types::ConsumedCapacity::SENSITIVE = T.let(T.unsafe(nil), Array)

# Represents the continuous backups and point in time recovery settings
# on the table.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/ContinuousBackupsDescription AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#1622
class Aws::DynamoDB::Types::ContinuousBackupsDescription < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#1623
Aws::DynamoDB::Types::ContinuousBackupsDescription::SENSITIVE = T.let(T.unsafe(nil), Array)

# Backups have not yet been enabled for this table.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/ContinuousBackupsUnavailableException AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#1635
class Aws::DynamoDB::Types::ContinuousBackupsUnavailableException < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#1636
Aws::DynamoDB::Types::ContinuousBackupsUnavailableException::SENSITIVE = T.let(T.unsafe(nil), Array)

# Represents a Contributor Insights summary entry.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/ContributorInsightsSummary AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#1660
class Aws::DynamoDB::Types::ContributorInsightsSummary < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#1661
Aws::DynamoDB::Types::ContributorInsightsSummary::SENSITIVE = T.let(T.unsafe(nil), Array)

# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/CreateBackupInput AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#1677
class Aws::DynamoDB::Types::CreateBackupInput < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#1678
Aws::DynamoDB::Types::CreateBackupInput::SENSITIVE = T.let(T.unsafe(nil), Array)

# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/CreateBackupOutput AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#1689
class Aws::DynamoDB::Types::CreateBackupOutput < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#1690
Aws::DynamoDB::Types::CreateBackupOutput::SENSITIVE = T.let(T.unsafe(nil), Array)

# Represents a new global secondary index to be added to an existing
# table.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/CreateGlobalSecondaryIndexAction AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#1730
class Aws::DynamoDB::Types::CreateGlobalSecondaryIndexAction < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#1731
Aws::DynamoDB::Types::CreateGlobalSecondaryIndexAction::SENSITIVE = T.let(T.unsafe(nil), Array)

# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/CreateGlobalTableInput AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#1747
class Aws::DynamoDB::Types::CreateGlobalTableInput < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#1748
Aws::DynamoDB::Types::CreateGlobalTableInput::SENSITIVE = T.let(T.unsafe(nil), Array)

# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/CreateGlobalTableOutput AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#1759
class Aws::DynamoDB::Types::CreateGlobalTableOutput < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#1760
Aws::DynamoDB::Types::CreateGlobalTableOutput::SENSITIVE = T.let(T.unsafe(nil), Array)

# Represents a replica to be added.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/CreateReplicaAction AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#1773
class Aws::DynamoDB::Types::CreateReplicaAction < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#1774
Aws::DynamoDB::Types::CreateReplicaAction::SENSITIVE = T.let(T.unsafe(nil), Array)

# Represents a replica to be created.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/CreateReplicationGroupMemberAction AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#1813
class Aws::DynamoDB::Types::CreateReplicationGroupMemberAction < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#1814
Aws::DynamoDB::Types::CreateReplicationGroupMemberAction::SENSITIVE = T.let(T.unsafe(nil), Array)

# Represents the input of a `CreateTable` operation.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/CreateTableInput AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#2057
class Aws::DynamoDB::Types::CreateTableInput < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#2058
Aws::DynamoDB::Types::CreateTableInput::SENSITIVE = T.let(T.unsafe(nil), Array)

# Represents the output of a `CreateTable` operation.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/CreateTableOutput AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#2071
class Aws::DynamoDB::Types::CreateTableOutput < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#2072
Aws::DynamoDB::Types::CreateTableOutput::SENSITIVE = T.let(T.unsafe(nil), Array)

# Processing options for the CSV file being imported.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/CsvOptions AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#2095
class Aws::DynamoDB::Types::CsvOptions < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#2096
Aws::DynamoDB::Types::CsvOptions::SENSITIVE = T.let(T.unsafe(nil), Array)

# Represents a request to perform a `DeleteItem` operation.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/Delete AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#2140
class Aws::DynamoDB::Types::Delete < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#2141
Aws::DynamoDB::Types::Delete::SENSITIVE = T.let(T.unsafe(nil), Array)

# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/DeleteBackupInput AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#2152
class Aws::DynamoDB::Types::DeleteBackupInput < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#2153
Aws::DynamoDB::Types::DeleteBackupInput::SENSITIVE = T.let(T.unsafe(nil), Array)

# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/DeleteBackupOutput AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#2164
class Aws::DynamoDB::Types::DeleteBackupOutput < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#2165
Aws::DynamoDB::Types::DeleteBackupOutput::SENSITIVE = T.let(T.unsafe(nil), Array)

# Represents a global secondary index to be deleted from an existing
# table.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/DeleteGlobalSecondaryIndexAction AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#2179
class Aws::DynamoDB::Types::DeleteGlobalSecondaryIndexAction < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#2180
Aws::DynamoDB::Types::DeleteGlobalSecondaryIndexAction::SENSITIVE = T.let(T.unsafe(nil), Array)

# Represents the input of a `DeleteItem` operation.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/DeleteItemInput AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#2396
class Aws::DynamoDB::Types::DeleteItemInput < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#2397
Aws::DynamoDB::Types::DeleteItemInput::SENSITIVE = T.let(T.unsafe(nil), Array)

# Represents the output of a `DeleteItem` operation.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/DeleteItemOutput AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#2454
class Aws::DynamoDB::Types::DeleteItemOutput < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#2455
Aws::DynamoDB::Types::DeleteItemOutput::SENSITIVE = T.let(T.unsafe(nil), Array)

# Represents a replica to be removed.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/DeleteReplicaAction AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#2468
class Aws::DynamoDB::Types::DeleteReplicaAction < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#2469
Aws::DynamoDB::Types::DeleteReplicaAction::SENSITIVE = T.let(T.unsafe(nil), Array)

# Represents a replica to be deleted.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/DeleteReplicationGroupMemberAction AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#2482
class Aws::DynamoDB::Types::DeleteReplicationGroupMemberAction < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#2483
Aws::DynamoDB::Types::DeleteReplicationGroupMemberAction::SENSITIVE = T.let(T.unsafe(nil), Array)

# Represents a request to perform a `DeleteItem` operation on an item.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/DeleteRequest AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#2499
class Aws::DynamoDB::Types::DeleteRequest < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#2500
Aws::DynamoDB::Types::DeleteRequest::SENSITIVE = T.let(T.unsafe(nil), Array)

# Represents the input of a `DeleteTable` operation.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/DeleteTableInput AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#2513
class Aws::DynamoDB::Types::DeleteTableInput < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#2514
Aws::DynamoDB::Types::DeleteTableInput::SENSITIVE = T.let(T.unsafe(nil), Array)

# Represents the output of a `DeleteTable` operation.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/DeleteTableOutput AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#2527
class Aws::DynamoDB::Types::DeleteTableOutput < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#2528
Aws::DynamoDB::Types::DeleteTableOutput::SENSITIVE = T.let(T.unsafe(nil), Array)

# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/DescribeBackupInput AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#2539
class Aws::DynamoDB::Types::DescribeBackupInput < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#2540
Aws::DynamoDB::Types::DescribeBackupInput::SENSITIVE = T.let(T.unsafe(nil), Array)

# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/DescribeBackupOutput AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#2551
class Aws::DynamoDB::Types::DescribeBackupOutput < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#2552
Aws::DynamoDB::Types::DescribeBackupOutput::SENSITIVE = T.let(T.unsafe(nil), Array)

# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/DescribeContinuousBackupsInput AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#2564
class Aws::DynamoDB::Types::DescribeContinuousBackupsInput < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#2565
Aws::DynamoDB::Types::DescribeContinuousBackupsInput::SENSITIVE = T.let(T.unsafe(nil), Array)

# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/DescribeContinuousBackupsOutput AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#2577
class Aws::DynamoDB::Types::DescribeContinuousBackupsOutput < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#2578
Aws::DynamoDB::Types::DescribeContinuousBackupsOutput::SENSITIVE = T.let(T.unsafe(nil), Array)

# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/DescribeContributorInsightsInput AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#2594
class Aws::DynamoDB::Types::DescribeContributorInsightsInput < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#2595
Aws::DynamoDB::Types::DescribeContributorInsightsInput::SENSITIVE = T.let(T.unsafe(nil), Array)

# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/DescribeContributorInsightsOutput AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#2647
class Aws::DynamoDB::Types::DescribeContributorInsightsOutput < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#2648
Aws::DynamoDB::Types::DescribeContributorInsightsOutput::SENSITIVE = T.let(T.unsafe(nil), Array)

# @api private
# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/DescribeEndpointsRequest AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#2656
class Aws::DynamoDB::Types::DescribeEndpointsRequest < ::Aws::EmptyStructure; end

# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/DescribeEndpointsResponse AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#2665
class Aws::DynamoDB::Types::DescribeEndpointsResponse < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#2666
Aws::DynamoDB::Types::DescribeEndpointsResponse::SENSITIVE = T.let(T.unsafe(nil), Array)

# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/DescribeExportInput AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#2677
class Aws::DynamoDB::Types::DescribeExportInput < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#2678
Aws::DynamoDB::Types::DescribeExportInput::SENSITIVE = T.let(T.unsafe(nil), Array)

# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/DescribeExportOutput AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#2689
class Aws::DynamoDB::Types::DescribeExportOutput < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#2690
Aws::DynamoDB::Types::DescribeExportOutput::SENSITIVE = T.let(T.unsafe(nil), Array)

# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/DescribeGlobalTableInput AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#2701
class Aws::DynamoDB::Types::DescribeGlobalTableInput < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#2702
Aws::DynamoDB::Types::DescribeGlobalTableInput::SENSITIVE = T.let(T.unsafe(nil), Array)

# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/DescribeGlobalTableOutput AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#2713
class Aws::DynamoDB::Types::DescribeGlobalTableOutput < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#2714
Aws::DynamoDB::Types::DescribeGlobalTableOutput::SENSITIVE = T.let(T.unsafe(nil), Array)

# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/DescribeGlobalTableSettingsInput AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#2725
class Aws::DynamoDB::Types::DescribeGlobalTableSettingsInput < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#2726
Aws::DynamoDB::Types::DescribeGlobalTableSettingsInput::SENSITIVE = T.let(T.unsafe(nil), Array)

# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/DescribeGlobalTableSettingsOutput AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#2742
class Aws::DynamoDB::Types::DescribeGlobalTableSettingsOutput < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#2743
Aws::DynamoDB::Types::DescribeGlobalTableSettingsOutput::SENSITIVE = T.let(T.unsafe(nil), Array)

# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/DescribeImportInput AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#2755
class Aws::DynamoDB::Types::DescribeImportInput < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#2756
Aws::DynamoDB::Types::DescribeImportInput::SENSITIVE = T.let(T.unsafe(nil), Array)

# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/DescribeImportOutput AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#2770
class Aws::DynamoDB::Types::DescribeImportOutput < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#2771
Aws::DynamoDB::Types::DescribeImportOutput::SENSITIVE = T.let(T.unsafe(nil), Array)

# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/DescribeKinesisStreamingDestinationInput AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#2782
class Aws::DynamoDB::Types::DescribeKinesisStreamingDestinationInput < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#2783
Aws::DynamoDB::Types::DescribeKinesisStreamingDestinationInput::SENSITIVE = T.let(T.unsafe(nil), Array)

# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/DescribeKinesisStreamingDestinationOutput AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#2799
class Aws::DynamoDB::Types::DescribeKinesisStreamingDestinationOutput < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#2800
Aws::DynamoDB::Types::DescribeKinesisStreamingDestinationOutput::SENSITIVE = T.let(T.unsafe(nil), Array)

# Represents the input of a `DescribeLimits` operation. Has no content.
#
# @api private
# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/DescribeLimitsInput AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#2810
class Aws::DynamoDB::Types::DescribeLimitsInput < ::Aws::EmptyStructure; end

# Represents the output of a `DescribeLimits` operation.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/DescribeLimitsOutput AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#2844
class Aws::DynamoDB::Types::DescribeLimitsOutput < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#2845
Aws::DynamoDB::Types::DescribeLimitsOutput::SENSITIVE = T.let(T.unsafe(nil), Array)

# Represents the input of a `DescribeTable` operation.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/DescribeTableInput AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#2858
class Aws::DynamoDB::Types::DescribeTableInput < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#2859
Aws::DynamoDB::Types::DescribeTableInput::SENSITIVE = T.let(T.unsafe(nil), Array)

# Represents the output of a `DescribeTable` operation.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/DescribeTableOutput AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#2872
class Aws::DynamoDB::Types::DescribeTableOutput < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#2873
Aws::DynamoDB::Types::DescribeTableOutput::SENSITIVE = T.let(T.unsafe(nil), Array)

# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/DescribeTableReplicaAutoScalingInput AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#2884
class Aws::DynamoDB::Types::DescribeTableReplicaAutoScalingInput < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#2885
Aws::DynamoDB::Types::DescribeTableReplicaAutoScalingInput::SENSITIVE = T.let(T.unsafe(nil), Array)

# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/DescribeTableReplicaAutoScalingOutput AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#2896
class Aws::DynamoDB::Types::DescribeTableReplicaAutoScalingOutput < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#2897
Aws::DynamoDB::Types::DescribeTableReplicaAutoScalingOutput::SENSITIVE = T.let(T.unsafe(nil), Array)

# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/DescribeTimeToLiveInput AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#2908
class Aws::DynamoDB::Types::DescribeTimeToLiveInput < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#2909
Aws::DynamoDB::Types::DescribeTimeToLiveInput::SENSITIVE = T.let(T.unsafe(nil), Array)

# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/DescribeTimeToLiveOutput AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#2919
class Aws::DynamoDB::Types::DescribeTimeToLiveOutput < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#2920
Aws::DynamoDB::Types::DescribeTimeToLiveOutput::SENSITIVE = T.let(T.unsafe(nil), Array)

# There was an attempt to insert an item with the same primary key as an
# item that already exists in the DynamoDB table.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/DuplicateItemException AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#2933
class Aws::DynamoDB::Types::DuplicateItemException < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#2934
Aws::DynamoDB::Types::DuplicateItemException::SENSITIVE = T.let(T.unsafe(nil), Array)

# An endpoint information details.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/Endpoint AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#2952
class Aws::DynamoDB::Types::Endpoint < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#2953
Aws::DynamoDB::Types::Endpoint::SENSITIVE = T.let(T.unsafe(nil), Array)

# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/ExecuteStatementInput AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#3027
class Aws::DynamoDB::Types::ExecuteStatementInput < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#3028
Aws::DynamoDB::Types::ExecuteStatementInput::SENSITIVE = T.let(T.unsafe(nil), Array)

# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/ExecuteStatementOutput AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#3075
class Aws::DynamoDB::Types::ExecuteStatementOutput < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#3076
Aws::DynamoDB::Types::ExecuteStatementOutput::SENSITIVE = T.let(T.unsafe(nil), Array)

# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/ExecuteTransactionInput AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#3108
class Aws::DynamoDB::Types::ExecuteTransactionInput < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#3109
Aws::DynamoDB::Types::ExecuteTransactionInput::SENSITIVE = T.let(T.unsafe(nil), Array)

# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/ExecuteTransactionOutput AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#3126
class Aws::DynamoDB::Types::ExecuteTransactionOutput < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#3127
Aws::DynamoDB::Types::ExecuteTransactionOutput::SENSITIVE = T.let(T.unsafe(nil), Array)

# Represents a condition to be compared with an attribute value. This
# condition can be used with `DeleteItem`, `PutItem`, or `UpdateItem`
# operations; if the comparison evaluates to true, the operation
# succeeds; if not, the operation fails. You can use
# `ExpectedAttributeValue` in one of two different ways:
#
# * Use `AttributeValueList` to specify one or more values to compare
#   against an attribute. Use `ComparisonOperator` to specify how you
#   want to perform the comparison. If the comparison evaluates to true,
#   then the conditional operation succeeds.
#
# * Use `Value` to specify a value that DynamoDB will compare against an
#   attribute. If the values match, then `ExpectedAttributeValue`
#   evaluates to true and the conditional operation succeeds.
#   Optionally, you can also set `Exists` to false, indicating that you
#   *do not* expect to find the attribute value in the table. In this
#   case, the conditional operation succeeds only if the comparison
#   evaluates to false.
#
# `Value` and `Exists` are incompatible with `AttributeValueList` and
# `ComparisonOperator`. Note that if you use both sets of parameters at
# once, DynamoDB will return a `ValidationException` exception.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/ExpectedAttributeValue AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#3394
class Aws::DynamoDB::Types::ExpectedAttributeValue < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#3395
Aws::DynamoDB::Types::ExpectedAttributeValue::SENSITIVE = T.let(T.unsafe(nil), Array)

# There was a conflict when writing to the specified S3 bucket.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/ExportConflictException AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#3407
class Aws::DynamoDB::Types::ExportConflictException < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#3408
Aws::DynamoDB::Types::ExportConflictException::SENSITIVE = T.let(T.unsafe(nil), Array)

# Represents the properties of the exported table.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/ExportDescription AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#3538
class Aws::DynamoDB::Types::ExportDescription < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#3539
Aws::DynamoDB::Types::ExportDescription::SENSITIVE = T.let(T.unsafe(nil), Array)

# The specified export was not found.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/ExportNotFoundException AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#3551
class Aws::DynamoDB::Types::ExportNotFoundException < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#3552
Aws::DynamoDB::Types::ExportNotFoundException::SENSITIVE = T.let(T.unsafe(nil), Array)

# Summary information about an export task.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/ExportSummary AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#3579
class Aws::DynamoDB::Types::ExportSummary < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#3580
Aws::DynamoDB::Types::ExportSummary::SENSITIVE = T.let(T.unsafe(nil), Array)

# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/ExportTableToPointInTimeInput AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#3671
class Aws::DynamoDB::Types::ExportTableToPointInTimeInput < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#3672
Aws::DynamoDB::Types::ExportTableToPointInTimeInput::SENSITIVE = T.let(T.unsafe(nil), Array)

# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/ExportTableToPointInTimeOutput AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#3683
class Aws::DynamoDB::Types::ExportTableToPointInTimeOutput < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#3684
Aws::DynamoDB::Types::ExportTableToPointInTimeOutput::SENSITIVE = T.let(T.unsafe(nil), Array)

# Represents a failure a contributor insights operation.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/FailureException AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#3702
class Aws::DynamoDB::Types::FailureException < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#3703
Aws::DynamoDB::Types::FailureException::SENSITIVE = T.let(T.unsafe(nil), Array)

# Specifies an item and related attribute values to retrieve in a
# `TransactGetItem` object.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/Get AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#3739
class Aws::DynamoDB::Types::Get < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#3740
Aws::DynamoDB::Types::Get::SENSITIVE = T.let(T.unsafe(nil), Array)

# Represents the input of a `GetItem` operation.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/GetItemInput AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#3876
class Aws::DynamoDB::Types::GetItemInput < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#3877
Aws::DynamoDB::Types::GetItemInput::SENSITIVE = T.let(T.unsafe(nil), Array)

# Represents the output of a `GetItem` operation.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/GetItemOutput AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#3906
class Aws::DynamoDB::Types::GetItemOutput < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#3907
Aws::DynamoDB::Types::GetItemOutput::SENSITIVE = T.let(T.unsafe(nil), Array)

# Represents the properties of a global secondary index.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/GlobalSecondaryIndex AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#3965
class Aws::DynamoDB::Types::GlobalSecondaryIndex < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#3966
Aws::DynamoDB::Types::GlobalSecondaryIndex::SENSITIVE = T.let(T.unsafe(nil), Array)

# Represents the auto scaling settings of a global secondary index for a
# global table that will be modified.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/GlobalSecondaryIndexAutoScalingUpdate AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#3986
class Aws::DynamoDB::Types::GlobalSecondaryIndexAutoScalingUpdate < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#3987
Aws::DynamoDB::Types::GlobalSecondaryIndexAutoScalingUpdate::SENSITIVE = T.let(T.unsafe(nil), Array)

# Represents the properties of a global secondary index.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/GlobalSecondaryIndexDescription AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#4099
class Aws::DynamoDB::Types::GlobalSecondaryIndexDescription < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#4100
Aws::DynamoDB::Types::GlobalSecondaryIndexDescription::SENSITIVE = T.let(T.unsafe(nil), Array)

# Represents the properties of a global secondary index for the table
# when the backup was created.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/GlobalSecondaryIndexInfo AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#4150
class Aws::DynamoDB::Types::GlobalSecondaryIndexInfo < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#4151
Aws::DynamoDB::Types::GlobalSecondaryIndexInfo::SENSITIVE = T.let(T.unsafe(nil), Array)

# Represents one of the following:
#
# * A new global secondary index to be added to an existing table.
#
# * New provisioned throughput parameters for an existing global
#   secondary index.
#
# * An existing global secondary index to be removed from an existing
#   table.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/GlobalSecondaryIndexUpdate AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#4194
class Aws::DynamoDB::Types::GlobalSecondaryIndexUpdate < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#4195
Aws::DynamoDB::Types::GlobalSecondaryIndexUpdate::SENSITIVE = T.let(T.unsafe(nil), Array)

# Represents the properties of a global table.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/GlobalTable AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#4213
class Aws::DynamoDB::Types::GlobalTable < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#4214
Aws::DynamoDB::Types::GlobalTable::SENSITIVE = T.let(T.unsafe(nil), Array)

# The specified global table already exists.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/GlobalTableAlreadyExistsException AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#4226
class Aws::DynamoDB::Types::GlobalTableAlreadyExistsException < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#4227
Aws::DynamoDB::Types::GlobalTableAlreadyExistsException::SENSITIVE = T.let(T.unsafe(nil), Array)

# Contains details about the global table.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/GlobalTableDescription AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#4268
class Aws::DynamoDB::Types::GlobalTableDescription < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#4269
Aws::DynamoDB::Types::GlobalTableDescription::SENSITIVE = T.let(T.unsafe(nil), Array)

# Represents the settings of a global secondary index for a global table
# that will be modified.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/GlobalTableGlobalSecondaryIndexSettingsUpdate AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#4296
class Aws::DynamoDB::Types::GlobalTableGlobalSecondaryIndexSettingsUpdate < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#4297
Aws::DynamoDB::Types::GlobalTableGlobalSecondaryIndexSettingsUpdate::SENSITIVE = T.let(T.unsafe(nil), Array)

# The specified global table does not exist.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/GlobalTableNotFoundException AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#4309
class Aws::DynamoDB::Types::GlobalTableNotFoundException < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#4310
Aws::DynamoDB::Types::GlobalTableNotFoundException::SENSITIVE = T.let(T.unsafe(nil), Array)

# DynamoDB rejected the request because you retried a request with a
# different payload but with an idempotent token that was already used.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/IdempotentParameterMismatchException AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#4323
class Aws::DynamoDB::Types::IdempotentParameterMismatchException < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#4324
Aws::DynamoDB::Types::IdempotentParameterMismatchException::SENSITIVE = T.let(T.unsafe(nil), Array)

# There was a conflict when importing from the specified S3 source. This
# can occur when the current import conflicts with a previous import
# request that had the same client token.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/ImportConflictException AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#4338
class Aws::DynamoDB::Types::ImportConflictException < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#4339
Aws::DynamoDB::Types::ImportConflictException::SENSITIVE = T.let(T.unsafe(nil), Array)

# The specified import was not found.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/ImportNotFoundException AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#4351
class Aws::DynamoDB::Types::ImportNotFoundException < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#4352
Aws::DynamoDB::Types::ImportNotFoundException::SENSITIVE = T.let(T.unsafe(nil), Array)

# Summary information about the source file for the import.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/ImportSummary AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#4406
class Aws::DynamoDB::Types::ImportSummary < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#4407
Aws::DynamoDB::Types::ImportSummary::SENSITIVE = T.let(T.unsafe(nil), Array)

# Represents the properties of the table being imported into.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/ImportTableDescription AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#4522
class Aws::DynamoDB::Types::ImportTableDescription < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#4523
Aws::DynamoDB::Types::ImportTableDescription::SENSITIVE = T.let(T.unsafe(nil), Array)

# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/ImportTableInput AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#4576
class Aws::DynamoDB::Types::ImportTableInput < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#4577
Aws::DynamoDB::Types::ImportTableInput::SENSITIVE = T.let(T.unsafe(nil), Array)

# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/ImportTableOutput AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#4591
class Aws::DynamoDB::Types::ImportTableOutput < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#4592
Aws::DynamoDB::Types::ImportTableOutput::SENSITIVE = T.let(T.unsafe(nil), Array)

# Optional object containing the parameters specific to an incremental
# export.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/IncrementalExportSpecification AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#4625
class Aws::DynamoDB::Types::IncrementalExportSpecification < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#4626
Aws::DynamoDB::Types::IncrementalExportSpecification::SENSITIVE = T.let(T.unsafe(nil), Array)

# The operation tried to access a nonexistent index.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/IndexNotFoundException AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#4638
class Aws::DynamoDB::Types::IndexNotFoundException < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#4639
Aws::DynamoDB::Types::IndexNotFoundException::SENSITIVE = T.let(T.unsafe(nil), Array)

# The format options for the data that was imported into the target
# table. There is one value, CsvOption.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/InputFormatOptions AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#4654
class Aws::DynamoDB::Types::InputFormatOptions < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#4655
Aws::DynamoDB::Types::InputFormatOptions::SENSITIVE = T.let(T.unsafe(nil), Array)

# An error occurred on the server side.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/InternalServerError AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#4669
class Aws::DynamoDB::Types::InternalServerError < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#4670
Aws::DynamoDB::Types::InternalServerError::SENSITIVE = T.let(T.unsafe(nil), Array)

# The specified `ExportTime` is outside of the point in time recovery
# window.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/InvalidExportTimeException AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#4683
class Aws::DynamoDB::Types::InvalidExportTimeException < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#4684
Aws::DynamoDB::Types::InvalidExportTimeException::SENSITIVE = T.let(T.unsafe(nil), Array)

# An invalid restore time was specified. RestoreDateTime must be between
# EarliestRestorableDateTime and LatestRestorableDateTime.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/InvalidRestoreTimeException AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#4697
class Aws::DynamoDB::Types::InvalidRestoreTimeException < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#4698
Aws::DynamoDB::Types::InvalidRestoreTimeException::SENSITIVE = T.let(T.unsafe(nil), Array)

# Information about item collections, if any, that were affected by the
# operation. `ItemCollectionMetrics` is only returned if the request
# asked for it. If the table does not have any local secondary indexes,
# this information is not returned in the response.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/ItemCollectionMetrics AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#4728
class Aws::DynamoDB::Types::ItemCollectionMetrics < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#4729
Aws::DynamoDB::Types::ItemCollectionMetrics::SENSITIVE = T.let(T.unsafe(nil), Array)

# An item collection is too large. This exception is only returned for
# tables that have one or more local secondary indexes.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/ItemCollectionSizeLimitExceededException AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#4744
class Aws::DynamoDB::Types::ItemCollectionSizeLimitExceededException < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#4745
Aws::DynamoDB::Types::ItemCollectionSizeLimitExceededException::SENSITIVE = T.let(T.unsafe(nil), Array)

# Details for the requested item.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/ItemResponse AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#4759
class Aws::DynamoDB::Types::ItemResponse < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#4760
Aws::DynamoDB::Types::ItemResponse::SENSITIVE = T.let(T.unsafe(nil), Array)

# Represents *a single element* of a key schema. A key schema specifies
# the attributes that make up the primary key of a table, or the key
# attributes of an index.
#
# A `KeySchemaElement` represents exactly one attribute of the primary
# key. For example, a simple primary key would be represented by one
# `KeySchemaElement` (for the partition key). A composite primary key
# would require one `KeySchemaElement` for the partition key, and
# another `KeySchemaElement` for the sort key.
#
# A `KeySchemaElement` must be a scalar, top-level attribute (not a
# nested attribute). The data type must be one of String, Number, or
# Binary. The attribute cannot be nested within a List or a Map.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/KeySchemaElement AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#4806
class Aws::DynamoDB::Types::KeySchemaElement < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#4807
Aws::DynamoDB::Types::KeySchemaElement::SENSITIVE = T.let(T.unsafe(nil), Array)

# Represents a set of primary keys and, for each key, the attributes to
# retrieve from the table.
#
# For each primary key, you must provide *all* of the key attributes.
# For example, with a simple primary key, you only need to provide the
# partition key. For a composite primary key, you must provide *both*
# the partition key and the sort key.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/KeysAndAttributes AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#4918
class Aws::DynamoDB::Types::KeysAndAttributes < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#4919
Aws::DynamoDB::Types::KeysAndAttributes::SENSITIVE = T.let(T.unsafe(nil), Array)

# Describes a Kinesis data stream destination.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/KinesisDataStreamDestination AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#4942
class Aws::DynamoDB::Types::KinesisDataStreamDestination < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#4943
Aws::DynamoDB::Types::KinesisDataStreamDestination::SENSITIVE = T.let(T.unsafe(nil), Array)

# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/KinesisStreamingDestinationInput AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#4959
class Aws::DynamoDB::Types::KinesisStreamingDestinationInput < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#4960
Aws::DynamoDB::Types::KinesisStreamingDestinationInput::SENSITIVE = T.let(T.unsafe(nil), Array)

# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/KinesisStreamingDestinationOutput AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#4981
class Aws::DynamoDB::Types::KinesisStreamingDestinationOutput < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#4982
Aws::DynamoDB::Types::KinesisStreamingDestinationOutput::SENSITIVE = T.let(T.unsafe(nil), Array)

# There is no limit to the number of daily on-demand backups that can be
# taken.
#
# For most purposes, up to 500 simultaneous table operations are allowed
# per account. These operations include `CreateTable`, `UpdateTable`,
# `DeleteTable`,`UpdateTimeToLive`, `RestoreTableFromBackup`, and
# `RestoreTableToPointInTime`.
#
# When you are creating a table with one or more secondary indexes, you
# can have up to 250 such requests running at a time. However, if the
# table or index specifications are complex, then DynamoDB might
# temporarily reduce the number of concurrent operations.
#
# When importing into DynamoDB, up to 50 simultaneous import table
# operations are allowed per account.
#
# There is a soft account quota of 2,500 tables.
#
# GetRecords was called with a value of more than 1000 for the limit
# request parameter.
#
# More than 2 processes are reading from the same streams shard at the
# same time. Exceeding this limit may result in request throttling.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/LimitExceededException AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#5017
class Aws::DynamoDB::Types::LimitExceededException < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#5018
Aws::DynamoDB::Types::LimitExceededException::SENSITIVE = T.let(T.unsafe(nil), Array)

# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/ListBackupsInput AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#5069
class Aws::DynamoDB::Types::ListBackupsInput < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#5070
Aws::DynamoDB::Types::ListBackupsInput::SENSITIVE = T.let(T.unsafe(nil), Array)

# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/ListBackupsOutput AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#5097
class Aws::DynamoDB::Types::ListBackupsOutput < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#5098
Aws::DynamoDB::Types::ListBackupsOutput::SENSITIVE = T.let(T.unsafe(nil), Array)

# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/ListContributorInsightsInput AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#5119
class Aws::DynamoDB::Types::ListContributorInsightsInput < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#5120
Aws::DynamoDB::Types::ListContributorInsightsInput::SENSITIVE = T.let(T.unsafe(nil), Array)

# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/ListContributorInsightsOutput AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#5136
class Aws::DynamoDB::Types::ListContributorInsightsOutput < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#5137
Aws::DynamoDB::Types::ListContributorInsightsOutput::SENSITIVE = T.let(T.unsafe(nil), Array)

# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/ListExportsInput AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#5160
class Aws::DynamoDB::Types::ListExportsInput < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#5161
Aws::DynamoDB::Types::ListExportsInput::SENSITIVE = T.let(T.unsafe(nil), Array)

# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/ListExportsOutput AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#5179
class Aws::DynamoDB::Types::ListExportsOutput < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#5180
Aws::DynamoDB::Types::ListExportsOutput::SENSITIVE = T.let(T.unsafe(nil), Array)

# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/ListGlobalTablesInput AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#5208
class Aws::DynamoDB::Types::ListGlobalTablesInput < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#5209
Aws::DynamoDB::Types::ListGlobalTablesInput::SENSITIVE = T.let(T.unsafe(nil), Array)

# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/ListGlobalTablesOutput AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#5225
class Aws::DynamoDB::Types::ListGlobalTablesOutput < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#5226
Aws::DynamoDB::Types::ListGlobalTablesOutput::SENSITIVE = T.let(T.unsafe(nil), Array)

# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/ListImportsInput AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#5250
class Aws::DynamoDB::Types::ListImportsInput < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#5251
Aws::DynamoDB::Types::ListImportsInput::SENSITIVE = T.let(T.unsafe(nil), Array)

# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/ListImportsOutput AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#5269
class Aws::DynamoDB::Types::ListImportsOutput < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#5270
Aws::DynamoDB::Types::ListImportsOutput::SENSITIVE = T.let(T.unsafe(nil), Array)

# Represents the input of a `ListTables` operation.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/ListTablesInput AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#5291
class Aws::DynamoDB::Types::ListTablesInput < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#5292
Aws::DynamoDB::Types::ListTablesInput::SENSITIVE = T.let(T.unsafe(nil), Array)

# Represents the output of a `ListTables` operation.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/ListTablesOutput AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#5321
class Aws::DynamoDB::Types::ListTablesOutput < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#5322
Aws::DynamoDB::Types::ListTablesOutput::SENSITIVE = T.let(T.unsafe(nil), Array)

# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/ListTagsOfResourceInput AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#5341
class Aws::DynamoDB::Types::ListTagsOfResourceInput < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#5342
Aws::DynamoDB::Types::ListTagsOfResourceInput::SENSITIVE = T.let(T.unsafe(nil), Array)

# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/ListTagsOfResourceOutput AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#5360
class Aws::DynamoDB::Types::ListTagsOfResourceOutput < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#5361
Aws::DynamoDB::Types::ListTagsOfResourceOutput::SENSITIVE = T.let(T.unsafe(nil), Array)

# Represents the properties of a local secondary index.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/LocalSecondaryIndex AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#5405
class Aws::DynamoDB::Types::LocalSecondaryIndex < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#5406
Aws::DynamoDB::Types::LocalSecondaryIndex::SENSITIVE = T.let(T.unsafe(nil), Array)

# Represents the properties of a local secondary index.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/LocalSecondaryIndexDescription AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#5468
class Aws::DynamoDB::Types::LocalSecondaryIndexDescription < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#5469
Aws::DynamoDB::Types::LocalSecondaryIndexDescription::SENSITIVE = T.let(T.unsafe(nil), Array)

# Represents the properties of a local secondary index for the table
# when the backup was created.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/LocalSecondaryIndexInfo AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#5513
class Aws::DynamoDB::Types::LocalSecondaryIndexInfo < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#5514
Aws::DynamoDB::Types::LocalSecondaryIndexInfo::SENSITIVE = T.let(T.unsafe(nil), Array)

# Represents a PartiQL statment that uses parameters.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/ParameterizedStatement AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#5542
class Aws::DynamoDB::Types::ParameterizedStatement < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#5543
Aws::DynamoDB::Types::ParameterizedStatement::SENSITIVE = T.let(T.unsafe(nil), Array)

# The description of the point in time settings applied to the table.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/PointInTimeRecoveryDescription AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#5573
class Aws::DynamoDB::Types::PointInTimeRecoveryDescription < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#5574
Aws::DynamoDB::Types::PointInTimeRecoveryDescription::SENSITIVE = T.let(T.unsafe(nil), Array)

# Represents the settings used to enable point in time recovery.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/PointInTimeRecoverySpecification AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#5588
class Aws::DynamoDB::Types::PointInTimeRecoverySpecification < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#5589
Aws::DynamoDB::Types::PointInTimeRecoverySpecification::SENSITIVE = T.let(T.unsafe(nil), Array)

# Point in time recovery has not yet been enabled for this source table.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/PointInTimeRecoveryUnavailableException AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#5601
class Aws::DynamoDB::Types::PointInTimeRecoveryUnavailableException < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#5602
Aws::DynamoDB::Types::PointInTimeRecoveryUnavailableException::SENSITIVE = T.let(T.unsafe(nil), Array)

# Represents attributes that are copied (projected) from the table into
# an index. These are in addition to the primary key attributes and
# index key attributes, which are automatically projected.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/Projection AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#5637
class Aws::DynamoDB::Types::Projection < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#5638
Aws::DynamoDB::Types::Projection::SENSITIVE = T.let(T.unsafe(nil), Array)

# Represents the provisioned throughput settings for a specified table
# or index. The settings can be modified using the `UpdateTable`
# operation.
#
# For current minimum and maximum provisioned throughput values, see
# [Service, Account, and Table Quotas][1] in the *Amazon DynamoDB
# Developer Guide*.
#
#
#
# [1]: https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Limits.html
#
# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/ProvisionedThroughput AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#5686
class Aws::DynamoDB::Types::ProvisionedThroughput < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#5687
Aws::DynamoDB::Types::ProvisionedThroughput::SENSITIVE = T.let(T.unsafe(nil), Array)

# Represents the provisioned throughput settings for the table,
# consisting of read and write capacity units, along with data about
# increases and decreases.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/ProvisionedThroughputDescription AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#5736
class Aws::DynamoDB::Types::ProvisionedThroughputDescription < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#5737
Aws::DynamoDB::Types::ProvisionedThroughputDescription::SENSITIVE = T.let(T.unsafe(nil), Array)

# Your request rate is too high. The Amazon Web Services SDKs for
# DynamoDB automatically retry requests that receive this exception.
# Your request is eventually successful, unless your retry queue is too
# large to finish. Reduce the frequency of requests and use exponential
# backoff. For more information, go to [Error Retries and Exponential
# Backoff][1] in the *Amazon DynamoDB Developer Guide*.
#
#
#
# [1]: https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Programming.Errors.html#Programming.Errors.RetryAndBackoff
#
# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/ProvisionedThroughputExceededException AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#5759
class Aws::DynamoDB::Types::ProvisionedThroughputExceededException < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#5760
Aws::DynamoDB::Types::ProvisionedThroughputExceededException::SENSITIVE = T.let(T.unsafe(nil), Array)

# Replica-specific provisioned throughput settings. If not specified,
# uses the source table's provisioned throughput settings.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/ProvisionedThroughputOverride AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#5775
class Aws::DynamoDB::Types::ProvisionedThroughputOverride < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#5776
Aws::DynamoDB::Types::ProvisionedThroughputOverride::SENSITIVE = T.let(T.unsafe(nil), Array)

# Represents a request to perform a `PutItem` operation.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/Put AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#5824
class Aws::DynamoDB::Types::Put < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#5825
Aws::DynamoDB::Types::Put::SENSITIVE = T.let(T.unsafe(nil), Array)

# Represents the input of a `PutItem` operation.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/PutItemInput AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#6063
class Aws::DynamoDB::Types::PutItemInput < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#6064
Aws::DynamoDB::Types::PutItemInput::SENSITIVE = T.let(T.unsafe(nil), Array)

# Represents the output of a `PutItem` operation.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/PutItemOutput AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#6121
class Aws::DynamoDB::Types::PutItemOutput < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#6122
Aws::DynamoDB::Types::PutItemOutput::SENSITIVE = T.let(T.unsafe(nil), Array)

# Represents a request to perform a `PutItem` operation on an item.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/PutRequest AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#6140
class Aws::DynamoDB::Types::PutRequest < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#6141
Aws::DynamoDB::Types::PutRequest::SENSITIVE = T.let(T.unsafe(nil), Array)

# Represents the input of a `Query` operation.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/QueryInput AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#6554
class Aws::DynamoDB::Types::QueryInput < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#6555
Aws::DynamoDB::Types::QueryInput::SENSITIVE = T.let(T.unsafe(nil), Array)

# Represents the output of a `Query` operation.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/QueryOutput AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#6629
class Aws::DynamoDB::Types::QueryOutput < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#6630
Aws::DynamoDB::Types::QueryOutput::SENSITIVE = T.let(T.unsafe(nil), Array)

# Represents the properties of a replica.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/Replica AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#6643
class Aws::DynamoDB::Types::Replica < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#6644
Aws::DynamoDB::Types::Replica::SENSITIVE = T.let(T.unsafe(nil), Array)

# The specified replica is already part of the global table.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/ReplicaAlreadyExistsException AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#6656
class Aws::DynamoDB::Types::ReplicaAlreadyExistsException < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#6657
Aws::DynamoDB::Types::ReplicaAlreadyExistsException::SENSITIVE = T.let(T.unsafe(nil), Array)

# Represents the auto scaling settings of the replica.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/ReplicaAutoScalingDescription AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#6700
class Aws::DynamoDB::Types::ReplicaAutoScalingDescription < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#6701
Aws::DynamoDB::Types::ReplicaAutoScalingDescription::SENSITIVE = T.let(T.unsafe(nil), Array)

# Represents the auto scaling settings of a replica that will be
# modified.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/ReplicaAutoScalingUpdate AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#6727
class Aws::DynamoDB::Types::ReplicaAutoScalingUpdate < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#6728
Aws::DynamoDB::Types::ReplicaAutoScalingUpdate::SENSITIVE = T.let(T.unsafe(nil), Array)

# Contains the details of the replica.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/ReplicaDescription AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#6813
class Aws::DynamoDB::Types::ReplicaDescription < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#6814
Aws::DynamoDB::Types::ReplicaDescription::SENSITIVE = T.let(T.unsafe(nil), Array)

# Represents the properties of a replica global secondary index.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/ReplicaGlobalSecondaryIndex AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#6833
class Aws::DynamoDB::Types::ReplicaGlobalSecondaryIndex < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#6834
Aws::DynamoDB::Types::ReplicaGlobalSecondaryIndex::SENSITIVE = T.let(T.unsafe(nil), Array)

# Represents the auto scaling configuration for a replica global
# secondary index.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/ReplicaGlobalSecondaryIndexAutoScalingDescription AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#6874
class Aws::DynamoDB::Types::ReplicaGlobalSecondaryIndexAutoScalingDescription < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#6875
Aws::DynamoDB::Types::ReplicaGlobalSecondaryIndexAutoScalingDescription::SENSITIVE = T.let(T.unsafe(nil), Array)

# Represents the auto scaling settings of a global secondary index for a
# replica that will be modified.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/ReplicaGlobalSecondaryIndexAutoScalingUpdate AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#6895
class Aws::DynamoDB::Types::ReplicaGlobalSecondaryIndexAutoScalingUpdate < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#6896
Aws::DynamoDB::Types::ReplicaGlobalSecondaryIndexAutoScalingUpdate::SENSITIVE = T.let(T.unsafe(nil), Array)

# Represents the properties of a replica global secondary index.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/ReplicaGlobalSecondaryIndexDescription AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#6915
class Aws::DynamoDB::Types::ReplicaGlobalSecondaryIndexDescription < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#6916
Aws::DynamoDB::Types::ReplicaGlobalSecondaryIndexDescription::SENSITIVE = T.let(T.unsafe(nil), Array)

# Represents the properties of a global secondary index.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/ReplicaGlobalSecondaryIndexSettingsDescription AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#6967
class Aws::DynamoDB::Types::ReplicaGlobalSecondaryIndexSettingsDescription < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#6968
Aws::DynamoDB::Types::ReplicaGlobalSecondaryIndexSettingsDescription::SENSITIVE = T.let(T.unsafe(nil), Array)

# Represents the settings of a global secondary index for a global table
# that will be modified.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/ReplicaGlobalSecondaryIndexSettingsUpdate AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#6995
class Aws::DynamoDB::Types::ReplicaGlobalSecondaryIndexSettingsUpdate < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#6996
Aws::DynamoDB::Types::ReplicaGlobalSecondaryIndexSettingsUpdate::SENSITIVE = T.let(T.unsafe(nil), Array)

# The specified replica is no longer part of the global table.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/ReplicaNotFoundException AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#7008
class Aws::DynamoDB::Types::ReplicaNotFoundException < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#7009
Aws::DynamoDB::Types::ReplicaNotFoundException::SENSITIVE = T.let(T.unsafe(nil), Array)

# Represents the properties of a replica.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/ReplicaSettingsDescription AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#7086
class Aws::DynamoDB::Types::ReplicaSettingsDescription < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#7087
Aws::DynamoDB::Types::ReplicaSettingsDescription::SENSITIVE = T.let(T.unsafe(nil), Array)

# Represents the settings for a global table in a Region that will be
# modified.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/ReplicaSettingsUpdate AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#7131
class Aws::DynamoDB::Types::ReplicaSettingsUpdate < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#7132
Aws::DynamoDB::Types::ReplicaSettingsUpdate::SENSITIVE = T.let(T.unsafe(nil), Array)

# Represents one of the following:
#
# * A new replica to be added to an existing global table.
#
# * New parameters for an existing replica.
#
# * An existing replica to be removed from an existing global table.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/ReplicaUpdate AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#7157
class Aws::DynamoDB::Types::ReplicaUpdate < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#7158
Aws::DynamoDB::Types::ReplicaUpdate::SENSITIVE = T.let(T.unsafe(nil), Array)

# Represents one of the following:
#
# * A new replica to be added to an existing regional table or global
#   table. This request invokes the `CreateTableReplica` action in the
#   destination Region.
#
# * New parameters for an existing replica. This request invokes the
#   `UpdateTable` action in the destination Region.
#
# * An existing replica to be deleted. The request invokes the
#   `DeleteTableReplica` action in the destination Region, deleting the
#   replica and all if its items in the destination Region.
#
# <note markdown="1"> When you manually remove a table or global table replica, you do not
# automatically remove any associated scalable targets, scaling
# policies, or CloudWatch alarms.
#
#  </note>
#
# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/ReplicationGroupUpdate AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#7198
class Aws::DynamoDB::Types::ReplicationGroupUpdate < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#7199
Aws::DynamoDB::Types::ReplicationGroupUpdate::SENSITIVE = T.let(T.unsafe(nil), Array)

# Throughput exceeds the current throughput quota for your account.
# Please contact [Amazon Web Services Support][1] to request a quota
# increase.
#
#
#
# [1]: https://aws.amazon.com/support
#
# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/RequestLimitExceeded AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#7217
class Aws::DynamoDB::Types::RequestLimitExceeded < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#7218
Aws::DynamoDB::Types::RequestLimitExceeded::SENSITIVE = T.let(T.unsafe(nil), Array)

# The operation conflicts with the resource's availability. For
# example, you attempted to recreate an existing table, or tried to
# delete a table currently in the `CREATING` state.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/ResourceInUseException AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#7233
class Aws::DynamoDB::Types::ResourceInUseException < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#7234
Aws::DynamoDB::Types::ResourceInUseException::SENSITIVE = T.let(T.unsafe(nil), Array)

# The operation tried to access a nonexistent table or index. The
# resource might not be specified correctly, or its status might not be
# `ACTIVE`.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/ResourceNotFoundException AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#7249
class Aws::DynamoDB::Types::ResourceNotFoundException < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#7250
Aws::DynamoDB::Types::ResourceNotFoundException::SENSITIVE = T.let(T.unsafe(nil), Array)

# Contains details for the restore.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/RestoreSummary AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#7279
class Aws::DynamoDB::Types::RestoreSummary < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#7280
Aws::DynamoDB::Types::RestoreSummary::SENSITIVE = T.let(T.unsafe(nil), Array)

# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/RestoreTableFromBackupInput AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#7325
class Aws::DynamoDB::Types::RestoreTableFromBackupInput < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#7326
Aws::DynamoDB::Types::RestoreTableFromBackupInput::SENSITIVE = T.let(T.unsafe(nil), Array)

# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/RestoreTableFromBackupOutput AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#7337
class Aws::DynamoDB::Types::RestoreTableFromBackupOutput < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#7338
Aws::DynamoDB::Types::RestoreTableFromBackupOutput::SENSITIVE = T.let(T.unsafe(nil), Array)

# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/RestoreTableToPointInTimeInput AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#7401
class Aws::DynamoDB::Types::RestoreTableToPointInTimeInput < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#7402
Aws::DynamoDB::Types::RestoreTableToPointInTimeInput::SENSITIVE = T.let(T.unsafe(nil), Array)

# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/RestoreTableToPointInTimeOutput AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#7413
class Aws::DynamoDB::Types::RestoreTableToPointInTimeOutput < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#7414
Aws::DynamoDB::Types::RestoreTableToPointInTimeOutput::SENSITIVE = T.let(T.unsafe(nil), Array)

# The S3 bucket that is being imported from.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/S3BucketSource AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#7438
class Aws::DynamoDB::Types::S3BucketSource < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#7439
Aws::DynamoDB::Types::S3BucketSource::SENSITIVE = T.let(T.unsafe(nil), Array)

# The description of the server-side encryption status on the specified
# table.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/SSEDescription AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#7484
class Aws::DynamoDB::Types::SSEDescription < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#7485
Aws::DynamoDB::Types::SSEDescription::SENSITIVE = T.let(T.unsafe(nil), Array)

# Represents the settings used to enable server-side encryption.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/SSESpecification AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#7522
class Aws::DynamoDB::Types::SSESpecification < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#7523
Aws::DynamoDB::Types::SSESpecification::SENSITIVE = T.let(T.unsafe(nil), Array)

# Represents the input of a `Scan` operation.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/ScanInput AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#7867
class Aws::DynamoDB::Types::ScanInput < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#7868
Aws::DynamoDB::Types::ScanInput::SENSITIVE = T.let(T.unsafe(nil), Array)

# Represents the output of a `Scan` operation.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/ScanOutput AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#7940
class Aws::DynamoDB::Types::ScanOutput < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#7941
Aws::DynamoDB::Types::ScanOutput::SENSITIVE = T.let(T.unsafe(nil), Array)

# Contains the details of the table when the backup was created.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/SourceTableDetails AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#8004
class Aws::DynamoDB::Types::SourceTableDetails < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#8005
Aws::DynamoDB::Types::SourceTableDetails::SENSITIVE = T.let(T.unsafe(nil), Array)

# Contains the details of the features enabled on the table when the
# backup was created. For example, LSIs, GSIs, streams, TTL.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/SourceTableFeatureDetails AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#8045
class Aws::DynamoDB::Types::SourceTableFeatureDetails < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#8046
Aws::DynamoDB::Types::SourceTableFeatureDetails::SENSITIVE = T.let(T.unsafe(nil), Array)

# Represents the DynamoDB Streams configuration for a table in DynamoDB.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/StreamSpecification AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#8079
class Aws::DynamoDB::Types::StreamSpecification < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#8080
Aws::DynamoDB::Types::StreamSpecification::SENSITIVE = T.let(T.unsafe(nil), Array)

# A target table with the specified name already exists.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/TableAlreadyExistsException AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#8092
class Aws::DynamoDB::Types::TableAlreadyExistsException < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#8093
Aws::DynamoDB::Types::TableAlreadyExistsException::SENSITIVE = T.let(T.unsafe(nil), Array)

# Represents the auto scaling configuration for a global table.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/TableAutoScalingDescription AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#8124
class Aws::DynamoDB::Types::TableAutoScalingDescription < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#8125
Aws::DynamoDB::Types::TableAutoScalingDescription::SENSITIVE = T.let(T.unsafe(nil), Array)

# Contains details of the table class.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/TableClassSummary AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#8144
class Aws::DynamoDB::Types::TableClassSummary < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#8145
Aws::DynamoDB::Types::TableClassSummary::SENSITIVE = T.let(T.unsafe(nil), Array)

# The parameters for the table created as part of the import operation.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/TableCreationParameters AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#8201
class Aws::DynamoDB::Types::TableCreationParameters < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#8202
Aws::DynamoDB::Types::TableCreationParameters::SENSITIVE = T.let(T.unsafe(nil), Array)

# Represents the properties of a table.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/TableDescription AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#8530
class Aws::DynamoDB::Types::TableDescription < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#8531
Aws::DynamoDB::Types::TableDescription::SENSITIVE = T.let(T.unsafe(nil), Array)

# A target table with the specified name is either being created or
# deleted.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/TableInUseException AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#8544
class Aws::DynamoDB::Types::TableInUseException < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#8545
Aws::DynamoDB::Types::TableInUseException::SENSITIVE = T.let(T.unsafe(nil), Array)

# A source table with the name `TableName` does not currently exist
# within the subscriber's account or the subscriber is operating in the
# wrong Amazon Web Services Region.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/TableNotFoundException AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#8559
class Aws::DynamoDB::Types::TableNotFoundException < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#8560
Aws::DynamoDB::Types::TableNotFoundException::SENSITIVE = T.let(T.unsafe(nil), Array)

# Describes a tag. A tag is a key-value pair. You can add up to 50 tags
# to a single DynamoDB table.
#
# Amazon Web Services-assigned tag names and values are automatically
# assigned the `aws:` prefix, which the user cannot assign. Amazon Web
# Services-assigned tag names do not count towards the tag limit of 50.
# User-assigned tag names have the prefix `user:` in the Cost Allocation
# Report. You cannot backdate the application of a tag.
#
# For an overview on tagging DynamoDB resources, see [Tagging for
# DynamoDB][1] in the *Amazon DynamoDB Developer Guide*.
#
#
#
# [1]: https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Tagging.html
#
# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/Tag AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#8595
class Aws::DynamoDB::Types::Tag < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#8596
Aws::DynamoDB::Types::Tag::SENSITIVE = T.let(T.unsafe(nil), Array)

# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/TagResourceInput AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#8613
class Aws::DynamoDB::Types::TagResourceInput < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#8614
Aws::DynamoDB::Types::TagResourceInput::SENSITIVE = T.let(T.unsafe(nil), Array)

# The description of the Time to Live (TTL) status on the specified
# table.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/TimeToLiveDescription AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#8633
class Aws::DynamoDB::Types::TimeToLiveDescription < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#8634
Aws::DynamoDB::Types::TimeToLiveDescription::SENSITIVE = T.let(T.unsafe(nil), Array)

# Represents the settings used to enable or disable Time to Live (TTL)
# for the specified table.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/TimeToLiveSpecification AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#8655
class Aws::DynamoDB::Types::TimeToLiveSpecification < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#8656
Aws::DynamoDB::Types::TimeToLiveSpecification::SENSITIVE = T.let(T.unsafe(nil), Array)

# Specifies an item to be retrieved as part of the transaction.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/TransactGetItem AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#8671
class Aws::DynamoDB::Types::TransactGetItem < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#8672
Aws::DynamoDB::Types::TransactGetItem::SENSITIVE = T.let(T.unsafe(nil), Array)

# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/TransactGetItemsInput AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#8691
class Aws::DynamoDB::Types::TransactGetItemsInput < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#8692
Aws::DynamoDB::Types::TransactGetItemsInput::SENSITIVE = T.let(T.unsafe(nil), Array)

# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/TransactGetItemsOutput AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#8721
class Aws::DynamoDB::Types::TransactGetItemsOutput < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#8722
Aws::DynamoDB::Types::TransactGetItemsOutput::SENSITIVE = T.let(T.unsafe(nil), Array)

# A list of requests that can perform update, put, delete, or check
# operations on multiple items in one or more tables atomically.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/TransactWriteItem AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#8751
class Aws::DynamoDB::Types::TransactWriteItem < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#8752
Aws::DynamoDB::Types::TransactWriteItem::SENSITIVE = T.let(T.unsafe(nil), Array)

# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/TransactWriteItemsInput AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#8826
class Aws::DynamoDB::Types::TransactWriteItemsInput < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#8827
Aws::DynamoDB::Types::TransactWriteItemsInput::SENSITIVE = T.let(T.unsafe(nil), Array)

# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/TransactWriteItemsOutput AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#8848
class Aws::DynamoDB::Types::TransactWriteItemsOutput < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#8849
Aws::DynamoDB::Types::TransactWriteItemsOutput::SENSITIVE = T.let(T.unsafe(nil), Array)

# The entire transaction request was canceled.
#
# DynamoDB cancels a `TransactWriteItems` request under the following
# circumstances:
#
# * A condition in one of the condition expressions is not met.
#
# * A table in the `TransactWriteItems` request is in a different
#   account or region.
#
# * More than one action in the `TransactWriteItems` operation targets
#   the same item.
#
# * There is insufficient provisioned capacity for the transaction to be
#   completed.
#
# * An item size becomes too large (larger than 400 KB), or a local
#   secondary index (LSI) becomes too large, or a similar validation
#   error occurs because of changes made by the transaction.
#
# * There is a user error, such as an invalid data format.
#
# DynamoDB cancels a `TransactGetItems` request under the following
# circumstances:
#
# * There is an ongoing `TransactGetItems` operation that conflicts with
#   a concurrent `PutItem`, `UpdateItem`, `DeleteItem` or
#   `TransactWriteItems` request. In this case the `TransactGetItems`
#   operation fails with a `TransactionCanceledException`.
#
# * A table in the `TransactGetItems` request is in a different account
#   or region.
#
# * There is insufficient provisioned capacity for the transaction to be
#   completed.
#
# * There is a user error, such as an invalid data format.
#
# <note markdown="1"> If using Java, DynamoDB lists the cancellation reasons on the
# `CancellationReasons` property. This property is not set for other
# languages. Transaction cancellation reasons are ordered in the order
# of requested items, if an item has no error it will have `None` code
# and `Null` message.
#
#  </note>
#
# Cancellation reason codes and possible error messages:
#
# * No Errors:
#
#   * Code: `None`
#
#   * Message: `null`
#
# * Conditional Check Failed:
#
#   * Code: `ConditionalCheckFailed`
#
#   * Message: The conditional request failed.
#
# * Item Collection Size Limit Exceeded:
#
#   * Code: `ItemCollectionSizeLimitExceeded`
#
#   * Message: Collection size exceeded.
#
# * Transaction Conflict:
#
#   * Code: `TransactionConflict`
#
#   * Message: Transaction is ongoing for the item.
#
# * Provisioned Throughput Exceeded:
#
#   * Code: `ProvisionedThroughputExceeded`
#
#   * Messages:
#
#     * The level of configured provisioned throughput for the table was
#       exceeded. Consider increasing your provisioning level with the
#       UpdateTable API.
#
#       <note markdown="1"> This Message is received when provisioned throughput is exceeded
#       is on a provisioned DynamoDB table.
#
#        </note>
#
#     * The level of configured provisioned throughput for one or more
#       global secondary indexes of the table was exceeded. Consider
#       increasing your provisioning level for the under-provisioned
#       global secondary indexes with the UpdateTable API.
#
#       <note markdown="1"> This message is returned when provisioned throughput is exceeded
#       is on a provisioned GSI.
#
#        </note>
#
# * Throttling Error:
#
#   * Code: `ThrottlingError`
#
#   * Messages:
#
#     * Throughput exceeds the current capacity of your table or index.
#       DynamoDB is automatically scaling your table or index so please
#       try again shortly. If exceptions persist, check if you have a
#       hot key:
#       https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/bp-partition-key-design.html.
#
#       <note markdown="1"> This message is returned when writes get throttled on an
#       On-Demand table as DynamoDB is automatically scaling the table.
#
#        </note>
#
#     * Throughput exceeds the current capacity for one or more global
#       secondary indexes. DynamoDB is automatically scaling your index
#       so please try again shortly.
#
#       <note markdown="1"> This message is returned when writes get throttled on an
#       On-Demand GSI as DynamoDB is automatically scaling the GSI.
#
#        </note>
#
# * Validation Error:
#
#   * Code: `ValidationError`
#
#   * Messages:
#
#     * One or more parameter values were invalid.
#
#     * The update expression attempted to update the secondary index
#       key beyond allowed size limits.
#
#     * The update expression attempted to update the secondary index
#       key to unsupported type.
#
#     * An operand in the update expression has an incorrect data type.
#
#     * Item size to update has exceeded the maximum allowed size.
#
#     * Number overflow. Attempting to store a number with magnitude
#       larger than supported range.
#
#     * Type mismatch for attribute to update.
#
#     * Nesting Levels have exceeded supported limits.
#
#     * The document path provided in the update expression is invalid
#       for update.
#
#     * The provided expression refers to an attribute that does not
#       exist in the item.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/TransactionCanceledException AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#9018
class Aws::DynamoDB::Types::TransactionCanceledException < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#9019
Aws::DynamoDB::Types::TransactionCanceledException::SENSITIVE = T.let(T.unsafe(nil), Array)

# Operation was rejected because there is an ongoing transaction for the
# item.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/TransactionConflictException AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#9032
class Aws::DynamoDB::Types::TransactionConflictException < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#9033
Aws::DynamoDB::Types::TransactionConflictException::SENSITIVE = T.let(T.unsafe(nil), Array)

# The transaction with the given request token is already in progress.
#
# Recommended Settings
#
# <note markdown="1"> This is a general recommendation for handling the
# `TransactionInProgressException`. These settings help ensure that the
# client retries will trigger completion of the ongoing
# `TransactWriteItems` request.
#
#  </note>
#
# * Set `clientExecutionTimeout` to a value that allows at least one
#   retry to be processed after 5 seconds have elapsed since the first
#   attempt for the `TransactWriteItems` operation.
#
# * Set `socketTimeout` to a value a little lower than the
#   `requestTimeout` setting.
#
# * `requestTimeout` should be set based on the time taken for the
#   individual retries of a single HTTP request for your use case, but
#   setting it to 1 second or higher should work well to reduce chances
#   of retries and `TransactionInProgressException` errors.
#
# * Use exponential backoff when retrying and tune backoff if needed.
#
# Assuming [default retry policy][1], example timeout settings based on
# the guidelines above are as follows:
#
# Example timeline:
#
# * 0-1000 first attempt
#
# * 1000-1500 first sleep/delay (default retry policy uses 500 ms as
#   base delay for 4xx errors)
#
# * 1500-2500 second attempt
#
# * 2500-3500 second sleep/delay (500 * 2, exponential backoff)
#
# * 3500-4500 third attempt
#
# * 4500-6500 third sleep/delay (500 * 2^2)
#
# * 6500-7500 fourth attempt (this can trigger inline recovery since 5
#   seconds have elapsed since the first attempt reached TC)
#
#
#
# [1]: https://github.com/aws/aws-sdk-java/blob/fd409dee8ae23fb8953e0bb4dbde65536a7e0514/aws-java-sdk-core/src/main/java/com/amazonaws/retry/PredefinedRetryPolicies.java#L97
#
# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/TransactionInProgressException AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#9093
class Aws::DynamoDB::Types::TransactionInProgressException < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#9094
Aws::DynamoDB::Types::TransactionInProgressException::SENSITIVE = T.let(T.unsafe(nil), Array)

# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/UntagResourceInput AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#9112
class Aws::DynamoDB::Types::UntagResourceInput < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#9113
Aws::DynamoDB::Types::UntagResourceInput::SENSITIVE = T.let(T.unsafe(nil), Array)

# Represents a request to perform an `UpdateItem` operation.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/Update AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#9163
class Aws::DynamoDB::Types::Update < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#9164
Aws::DynamoDB::Types::Update::SENSITIVE = T.let(T.unsafe(nil), Array)

# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/UpdateContinuousBackupsInput AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#9180
class Aws::DynamoDB::Types::UpdateContinuousBackupsInput < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#9181
Aws::DynamoDB::Types::UpdateContinuousBackupsInput::SENSITIVE = T.let(T.unsafe(nil), Array)

# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/UpdateContinuousBackupsOutput AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#9193
class Aws::DynamoDB::Types::UpdateContinuousBackupsOutput < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#9194
Aws::DynamoDB::Types::UpdateContinuousBackupsOutput::SENSITIVE = T.let(T.unsafe(nil), Array)

# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/UpdateContributorInsightsInput AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#9215
class Aws::DynamoDB::Types::UpdateContributorInsightsInput < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#9216
Aws::DynamoDB::Types::UpdateContributorInsightsInput::SENSITIVE = T.let(T.unsafe(nil), Array)

# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/UpdateContributorInsightsOutput AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#9237
class Aws::DynamoDB::Types::UpdateContributorInsightsOutput < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#9238
Aws::DynamoDB::Types::UpdateContributorInsightsOutput::SENSITIVE = T.let(T.unsafe(nil), Array)

# Represents the new provisioned throughput settings to be applied to a
# global secondary index.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/UpdateGlobalSecondaryIndexAction AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#9266
class Aws::DynamoDB::Types::UpdateGlobalSecondaryIndexAction < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#9267
Aws::DynamoDB::Types::UpdateGlobalSecondaryIndexAction::SENSITIVE = T.let(T.unsafe(nil), Array)

# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/UpdateGlobalTableInput AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#9284
class Aws::DynamoDB::Types::UpdateGlobalTableInput < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#9285
Aws::DynamoDB::Types::UpdateGlobalTableInput::SENSITIVE = T.let(T.unsafe(nil), Array)

# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/UpdateGlobalTableOutput AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#9296
class Aws::DynamoDB::Types::UpdateGlobalTableOutput < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#9297
Aws::DynamoDB::Types::UpdateGlobalTableOutput::SENSITIVE = T.let(T.unsafe(nil), Array)

# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/UpdateGlobalTableSettingsInput AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#9352
class Aws::DynamoDB::Types::UpdateGlobalTableSettingsInput < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#9353
Aws::DynamoDB::Types::UpdateGlobalTableSettingsInput::SENSITIVE = T.let(T.unsafe(nil), Array)

# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/UpdateGlobalTableSettingsOutput AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#9369
class Aws::DynamoDB::Types::UpdateGlobalTableSettingsOutput < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#9370
Aws::DynamoDB::Types::UpdateGlobalTableSettingsOutput::SENSITIVE = T.let(T.unsafe(nil), Array)

# Represents the input of an `UpdateItem` operation.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/UpdateItemInput AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#9699
class Aws::DynamoDB::Types::UpdateItemInput < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#9700
Aws::DynamoDB::Types::UpdateItemInput::SENSITIVE = T.let(T.unsafe(nil), Array)

# Represents the output of an `UpdateItem` operation.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/UpdateItemOutput AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#9760
class Aws::DynamoDB::Types::UpdateItemOutput < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#9761
Aws::DynamoDB::Types::UpdateItemOutput::SENSITIVE = T.let(T.unsafe(nil), Array)

# Represents a replica to be modified.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/UpdateReplicationGroupMemberAction AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#9800
class Aws::DynamoDB::Types::UpdateReplicationGroupMemberAction < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#9801
Aws::DynamoDB::Types::UpdateReplicationGroupMemberAction::SENSITIVE = T.let(T.unsafe(nil), Array)

# Represents the input of an `UpdateTable` operation.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/UpdateTableInput AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#9917
class Aws::DynamoDB::Types::UpdateTableInput < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#9918
Aws::DynamoDB::Types::UpdateTableInput::SENSITIVE = T.let(T.unsafe(nil), Array)

# Represents the output of an `UpdateTable` operation.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/UpdateTableOutput AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#9931
class Aws::DynamoDB::Types::UpdateTableOutput < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#9932
Aws::DynamoDB::Types::UpdateTableOutput::SENSITIVE = T.let(T.unsafe(nil), Array)

# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/UpdateTableReplicaAutoScalingInput AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#9961
class Aws::DynamoDB::Types::UpdateTableReplicaAutoScalingInput < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#9962
Aws::DynamoDB::Types::UpdateTableReplicaAutoScalingInput::SENSITIVE = T.let(T.unsafe(nil), Array)

# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/UpdateTableReplicaAutoScalingOutput AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#9974
class Aws::DynamoDB::Types::UpdateTableReplicaAutoScalingOutput < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#9975
Aws::DynamoDB::Types::UpdateTableReplicaAutoScalingOutput::SENSITIVE = T.let(T.unsafe(nil), Array)

# Represents the input of an `UpdateTimeToLive` operation.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/UpdateTimeToLiveInput AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#9994
class Aws::DynamoDB::Types::UpdateTimeToLiveInput < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#9995
Aws::DynamoDB::Types::UpdateTimeToLiveInput::SENSITIVE = T.let(T.unsafe(nil), Array)

# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/UpdateTimeToLiveOutput AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#10006
class Aws::DynamoDB::Types::UpdateTimeToLiveOutput < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#10007
Aws::DynamoDB::Types::UpdateTimeToLiveOutput::SENSITIVE = T.let(T.unsafe(nil), Array)

# Represents an operation to perform - either `DeleteItem` or `PutItem`.
# You can only request one of these operations, not both, in a single
# `WriteRequest`. If you do need to perform both of these operations,
# you need to provide two separate `WriteRequest` objects.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/WriteRequest AWS API Documentation
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#10028
class Aws::DynamoDB::Types::WriteRequest < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/types.rb#10029
Aws::DynamoDB::Types::WriteRequest::SENSITIVE = T.let(T.unsafe(nil), Array)

# Waiters are utility methods that poll for a particular state to occur
# on a client. Waiters can fail after a number of attempts at a polling
# interval defined for the service client.
#
# For a list of operations that can be waited for and the
# client methods called for each operation, see the table below or the
# {Client#wait_until} field documentation for the {Client}.
#
# # Invoking a Waiter
# To invoke a waiter, call #wait_until on a {Client}. The first parameter
# is the waiter name, which is specific to the service client and indicates
# which operation is being waited for. The second parameter is a hash of
# parameters that are passed to the client method called by the waiter,
# which varies according to the waiter name.
#
# # Wait Failures
# To catch errors in a waiter, use WaiterFailed,
# as shown in the following example.
#
#     rescue rescue Aws::Waiters::Errors::WaiterFailed => error
#       puts "failed waiting for instance running: #{error.message}
#     end
#
# # Configuring a Waiter
# Each waiter has a default polling interval and a maximum number of
# attempts it will make before returning control to your program.
# To set these values, use the `max_attempts` and `delay` parameters
# in your `#wait_until` call.
# The following example waits for up to 25 seconds, polling every five seconds.
#
#     client.wait_until(...) do |w|
#       w.max_attempts = 5
#       w.delay = 5
#     end
#
# To disable wait failures, set the value of either of these parameters
# to `nil`.
#
# # Extending a Waiter
# To modify the behavior of waiters, you can register callbacks that are
# triggered before each polling attempt and before waiting.
#
# The following example implements an exponential backoff in a waiter
# by doubling the amount of time to wait on every attempt.
#
#     client.wait_until(...) do |w|
#       w.interval = 0 # disable normal sleep
#       w.before_wait do |n, resp|
#         sleep(n ** 2)
#       end
#     end
#
# # Available Waiters
#
# The following table lists the valid waiter names, the operations they call,
# and the default `:delay` and `:max_attempts` values.
#
# | waiter_name      | params                  | :delay   | :max_attempts |
# | ---------------- | ----------------------- | -------- | ------------- |
# | table_exists     | {Client#describe_table} | 20       | 25            |
# | table_not_exists | {Client#describe_table} | 20       | 25            |
#
# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/waiters.rb#75
module Aws::DynamoDB::Waiters; end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/waiters.rb#77
class Aws::DynamoDB::Waiters::TableExists
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @param options [Hash]
  # @return [TableExists] a new instance of TableExists
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/waiters.rb#85
  def initialize(options); end

  # @option params
  # @param params [Hash] a customizable set of options
  # @return [Types::DescribeTableOutput] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::DescribeTableOutput#table #table} => Types::TableDescription
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/waiters.rb#111
  def wait(params = T.unsafe(nil)); end

  # @api private
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/waiters.rb#116
  def waiter; end
end

# source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/waiters.rb#120
class Aws::DynamoDB::Waiters::TableNotExists
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @param options [Hash]
  # @return [TableNotExists] a new instance of TableNotExists
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/waiters.rb#128
  def initialize(options); end

  # @option params
  # @param params [Hash] a customizable set of options
  # @return [Types::DescribeTableOutput] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::DescribeTableOutput#table #table} => Types::TableDescription
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/waiters.rb#146
  def wait(params = T.unsafe(nil)); end

  # @api private
  #
  # source://aws-sdk-dynamodb/lib/aws-sdk-dynamodb/waiters.rb#151
  def waiter; end
end
