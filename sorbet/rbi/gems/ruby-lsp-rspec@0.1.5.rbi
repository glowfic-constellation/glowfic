# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `ruby-lsp-rspec` gem.
# Please instead update this file by running `bin/tapioca gem ruby-lsp-rspec`.

# source://ruby-lsp-rspec/lib/ruby_lsp_rspec/version.rb#4
module RubyLsp; end

# source://ruby-lsp-rspec/lib/ruby_lsp_rspec/version.rb#5
module RubyLsp::RSpec; end

# source://ruby-lsp-rspec/lib/ruby_lsp/ruby_lsp_rspec/addon.rb#11
class RubyLsp::RSpec::Addon < ::RubyLsp::Addon
  # source://ruby-lsp-rspec/lib/ruby_lsp/ruby_lsp_rspec/addon.rb#15
  sig { override.void }
  def activate; end

  # Creates a new CodeLens listener. This method is invoked on every CodeLens request
  #
  # source://ruby-lsp-rspec/lib/ruby_lsp/ruby_lsp_rspec/addon.rb#28
  sig do
    override
      .params(
        uri: ::URI::Generic,
        emitter: ::Prism::Dispatcher,
        message_queue: ::Thread::Queue
      ).returns(T.nilable(RubyLsp::Listener[T::Array[::LanguageServer::Protocol::Interface::CodeLens]]))
  end
  def create_code_lens_listener(uri, emitter, message_queue); end

  # source://ruby-lsp-rspec/lib/ruby_lsp/ruby_lsp_rspec/addon.rb#18
  sig { override.void }
  def deactivate; end

  # source://ruby-lsp-rspec/lib/ruby_lsp/ruby_lsp_rspec/addon.rb#35
  sig { override.returns(::String) }
  def name; end
end

# source://ruby-lsp-rspec/lib/ruby_lsp/ruby_lsp_rspec/code_lens.rb#6
class RubyLsp::RSpec::CodeLens < ::RubyLsp::Listener
  extend T::Generic

  ResponseType = type_member { { fixed: T::Array[::LanguageServer::Protocol::Interface::CodeLens] } }

  # source://ruby-lsp-rspec/lib/ruby_lsp/ruby_lsp_rspec/code_lens.rb#18
  sig { params(uri: ::URI::Generic, dispatcher: ::Prism::Dispatcher, message_queue: ::Thread::Queue).void }
  def initialize(uri, dispatcher, message_queue); end

  # source://ruby-lsp-rspec/lib/ruby_lsp/ruby_lsp_rspec/code_lens.rb#15
  sig { override.returns(ResponseType) }
  def _response; end

  # source://ruby-lsp-rspec/lib/ruby_lsp/ruby_lsp_rspec/code_lens.rb#59
  sig { params(node: ::Prism::CallNode).returns(::String) }
  def generate_name(node); end

  # source://ruby-lsp-rspec/lib/ruby_lsp/ruby_lsp_rspec/code_lens.rb#45
  sig { params(node: ::Prism::CallNode).void }
  def on_call_node_enter(node); end

  private

  # source://ruby-lsp-rspec/lib/ruby_lsp/ruby_lsp_rspec/code_lens.rb#81
  sig { params(node: ::Prism::Node, name: ::String, kind: ::Symbol).void }
  def add_test_code_lens(node, name:, kind:); end
end

# source://ruby-lsp-rspec/lib/ruby_lsp_rspec/version.rb#6
RubyLsp::RSpec::VERSION = T.let(T.unsafe(nil), String)
