# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Sass::EmbeddedProtocol::OutboundMessage`.
# Please instead update this file by running `bin/tapioca dsl Sass::EmbeddedProtocol::OutboundMessage`.


class Sass::EmbeddedProtocol::OutboundMessage < Google::Protobuf::AbstractMessage
  sig do
    params(
      canonicalize_request: T.nilable(Sass::EmbeddedProtocol::OutboundMessage::CanonicalizeRequest),
      compile_response: T.nilable(Sass::EmbeddedProtocol::OutboundMessage::CompileResponse),
      error: T.nilable(Sass::EmbeddedProtocol::ProtocolError),
      file_import_request: T.nilable(Sass::EmbeddedProtocol::OutboundMessage::FileImportRequest),
      function_call_request: T.nilable(Sass::EmbeddedProtocol::OutboundMessage::FunctionCallRequest),
      import_request: T.nilable(Sass::EmbeddedProtocol::OutboundMessage::ImportRequest),
      log_event: T.nilable(Sass::EmbeddedProtocol::OutboundMessage::LogEvent),
      version_response: T.nilable(Sass::EmbeddedProtocol::OutboundMessage::VersionResponse)
    ).void
  end
  def initialize(canonicalize_request: nil, compile_response: nil, error: nil, file_import_request: nil, function_call_request: nil, import_request: nil, log_event: nil, version_response: nil); end

  sig { returns(T.nilable(Sass::EmbeddedProtocol::OutboundMessage::CanonicalizeRequest)) }
  def canonicalize_request; end

  sig { params(value: T.nilable(Sass::EmbeddedProtocol::OutboundMessage::CanonicalizeRequest)).void }
  def canonicalize_request=(value); end

  sig { void }
  def clear_canonicalize_request; end

  sig { void }
  def clear_compile_response; end

  sig { void }
  def clear_error; end

  sig { void }
  def clear_file_import_request; end

  sig { void }
  def clear_function_call_request; end

  sig { void }
  def clear_import_request; end

  sig { void }
  def clear_log_event; end

  sig { void }
  def clear_version_response; end

  sig { returns(T.nilable(Sass::EmbeddedProtocol::OutboundMessage::CompileResponse)) }
  def compile_response; end

  sig { params(value: T.nilable(Sass::EmbeddedProtocol::OutboundMessage::CompileResponse)).void }
  def compile_response=(value); end

  sig { returns(T.nilable(Sass::EmbeddedProtocol::ProtocolError)) }
  def error; end

  sig { params(value: T.nilable(Sass::EmbeddedProtocol::ProtocolError)).void }
  def error=(value); end

  sig { returns(T.nilable(Sass::EmbeddedProtocol::OutboundMessage::FileImportRequest)) }
  def file_import_request; end

  sig { params(value: T.nilable(Sass::EmbeddedProtocol::OutboundMessage::FileImportRequest)).void }
  def file_import_request=(value); end

  sig { returns(T.nilable(Sass::EmbeddedProtocol::OutboundMessage::FunctionCallRequest)) }
  def function_call_request; end

  sig { params(value: T.nilable(Sass::EmbeddedProtocol::OutboundMessage::FunctionCallRequest)).void }
  def function_call_request=(value); end

  sig { returns(Object) }
  def has_canonicalize_request?; end

  sig { returns(Object) }
  def has_compile_response?; end

  sig { returns(Object) }
  def has_error?; end

  sig { returns(Object) }
  def has_file_import_request?; end

  sig { returns(Object) }
  def has_function_call_request?; end

  sig { returns(Object) }
  def has_import_request?; end

  sig { returns(Object) }
  def has_log_event?; end

  sig { returns(Object) }
  def has_version_response?; end

  sig { returns(T.nilable(Sass::EmbeddedProtocol::OutboundMessage::ImportRequest)) }
  def import_request; end

  sig { params(value: T.nilable(Sass::EmbeddedProtocol::OutboundMessage::ImportRequest)).void }
  def import_request=(value); end

  sig { returns(T.nilable(Sass::EmbeddedProtocol::OutboundMessage::LogEvent)) }
  def log_event; end

  sig { params(value: T.nilable(Sass::EmbeddedProtocol::OutboundMessage::LogEvent)).void }
  def log_event=(value); end

  sig { returns(T.nilable(Symbol)) }
  def message; end

  sig { returns(T.nilable(Sass::EmbeddedProtocol::OutboundMessage::VersionResponse)) }
  def version_response; end

  sig { params(value: T.nilable(Sass::EmbeddedProtocol::OutboundMessage::VersionResponse)).void }
  def version_response=(value); end
end
