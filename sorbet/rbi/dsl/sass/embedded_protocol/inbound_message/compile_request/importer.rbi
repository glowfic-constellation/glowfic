# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Sass::EmbeddedProtocol::InboundMessage::CompileRequest::Importer`.
# Please instead update this file by running `bin/tapioca dsl Sass::EmbeddedProtocol::InboundMessage::CompileRequest::Importer`.


class Sass::EmbeddedProtocol::InboundMessage::CompileRequest::Importer < Google::Protobuf::AbstractMessage
  sig do
    params(
      file_importer_id: T.nilable(Integer),
      importer_id: T.nilable(Integer),
      node_package_importer: T.nilable(Sass::EmbeddedProtocol::NodePackageImporter),
      non_canonical_scheme: T.nilable(T.any(Google::Protobuf::RepeatedField[String], T::Array[String])),
      path: T.nilable(String)
    ).void
  end
  def initialize(file_importer_id: nil, importer_id: nil, node_package_importer: nil, non_canonical_scheme: T.unsafe(nil), path: nil); end

  sig { void }
  def clear_file_importer_id; end

  sig { void }
  def clear_importer_id; end

  sig { void }
  def clear_node_package_importer; end

  sig { void }
  def clear_non_canonical_scheme; end

  sig { void }
  def clear_path; end

  sig { returns(Integer) }
  def file_importer_id; end

  sig { params(value: Integer).void }
  def file_importer_id=(value); end

  sig { returns(Object) }
  def has_file_importer_id?; end

  sig { returns(Object) }
  def has_importer_id?; end

  sig { returns(Object) }
  def has_node_package_importer?; end

  sig { returns(Object) }
  def has_path?; end

  sig { returns(T.nilable(Symbol)) }
  def importer; end

  sig { returns(Integer) }
  def importer_id; end

  sig { params(value: Integer).void }
  def importer_id=(value); end

  sig { returns(T.nilable(Sass::EmbeddedProtocol::NodePackageImporter)) }
  def node_package_importer; end

  sig { params(value: T.nilable(Sass::EmbeddedProtocol::NodePackageImporter)).void }
  def node_package_importer=(value); end

  sig { returns(Google::Protobuf::RepeatedField[String]) }
  def non_canonical_scheme; end

  sig { params(value: Google::Protobuf::RepeatedField[String]).void }
  def non_canonical_scheme=(value); end

  sig { returns(String) }
  def path; end

  sig { params(value: String).void }
  def path=(value); end
end
