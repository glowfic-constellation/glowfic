# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `GeneratedUrlHelpersModule`.
# Please instead update this file by running `bin/tapioca dsl GeneratedUrlHelpersModule`.

module GeneratedUrlHelpersModule
  include ::ActionDispatch::Routing::UrlFor
  include ::ActionDispatch::Routing::PolymorphicRoutes

  sig { params(args: T.untyped).returns(String) }
  def add_gallery_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def admin_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def api_v1_board_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def api_v1_boards_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def api_v1_character_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def api_v1_characters_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def api_v1_gallery_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def api_v1_login_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def api_v1_post_replies_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def api_v1_post_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def api_v1_posts_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def api_v1_tag_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def api_v1_tags_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def api_v1_templates_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def api_v1_users_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def apipie_apipie_checksum_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def apipie_apipie_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def avatar_icon_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def block_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def blocks_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def board_section_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def board_sections_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def bugs_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def character_alias_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def character_aliases_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def character_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def characters_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def confirm_tos_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def contact_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def continuities_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def continuity_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def contribute_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def delete_history_post_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def delete_multiple_icons_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def dmca_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def do_regenerate_posts_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def do_relocate_characters_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def do_replace_character_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def do_replace_icon_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def do_split_posts_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def duplicate_character_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_block_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_board_section_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_character_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_continuity_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_gallery_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_icon_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_index_post_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_index_section_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_index_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_news_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_post_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_rails_conductor_inbound_email_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_reply_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_tag_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_template_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_user_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def facecasts_characters_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def favorite_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def favorites_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def galleries_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def gallery_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def hidden_posts_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def history_post_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def history_reply_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def icon_gallery_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def icon_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def index_post_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def index_posts_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def index_section_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def index_sections_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def index_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def indexes_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def login_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def logout_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def mark_continuities_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def mark_messages_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def mark_posts_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def message_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def messages_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_block_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_board_section_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_character_alias_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_character_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_continuity_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_gallery_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_index_post_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_index_section_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_index_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_message_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_news_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_password_reset_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_post_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_rails_conductor_inbound_email_source_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_rails_conductor_inbound_email_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_template_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_user_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def news_index_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def news_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def output_user_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def owed_posts_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def password_reset_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def password_resets_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def password_user_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def post_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def posts_api_v1_board_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def posts_api_v1_user_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def posts_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def privacy_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_blob_representation_proxy_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_blob_representation_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_blob_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_conductor_inbound_email_incinerate_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_conductor_inbound_email_reroute_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_conductor_inbound_email_sources_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_conductor_inbound_email_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_conductor_inbound_emails_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_direct_uploads_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_disk_service_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_info_properties_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_info_routes_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_info_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_mailers_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_mailgun_inbound_emails_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_mandrill_inbound_emails_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_mandrill_inbound_health_check_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_postmark_inbound_emails_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_relay_inbound_emails_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_representation_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_sendgrid_inbound_emails_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_service_blob_proxy_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_service_blob_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_storage_proxy_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_storage_redirect_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def regenerate_flat_posts_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def relocate_characters_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def reorder_api_v1_board_sections_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def reorder_api_v1_characters_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def reorder_api_v1_index_posts_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def reorder_api_v1_index_sections_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def reorder_api_v1_posts_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def replace_character_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def replace_icon_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def replies_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def reply_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def report_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def reports_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def restore_reply_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def root_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def s3_delete_api_v1_icons_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def search_characters_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def search_continuities_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def search_galleries_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def search_posts_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def search_replies_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def search_templates_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def search_users_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def split_posts_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stats_post_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def tag_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def tags_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def template_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def templates_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def tos_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def unhide_posts_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def unread_posts_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def update_rails_disk_service_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def upgrade_user_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_boards_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_characters_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_galleries_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_gallery_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def users_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def warnings_post_url(*args); end
end
